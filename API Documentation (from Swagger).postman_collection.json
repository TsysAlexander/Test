{
	"info": {
		"_postman_id": "a77d518f-2e10-4623-91e7-5df0531f3f3a",
		"name": "API Documentation (from Swagger)",
		"description": "Documentation for ClockShark APIs",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25694469",
		"_collection_link": "https://clockshark-qa.postman.co/workspace/1f002817-7d99-4b84-9629-21c1c1aa4ed9/collection/18607885-a77d518f-2e10-4623-91e7-5df0531f3f3a?action=share&creator=25694469&source=collection_link"
	},
	"item": [
		{
			"name": "api",
			"item": [
				{
					"name": "ADP",
					"item": [
						{
							"name": "/api/ADP/ValidateExportTime",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"skipValidateAndConfirm\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/ADP/ValidateExportTime",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ADP",
										"ValidateExportTime"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"skipValidateAndConfirm\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/ADP/ValidateExportTime",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ADP",
												"ValidateExportTime"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ADP/ExportTime",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"skipValidateAndConfirm\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/ADP/ExportTime",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ADP",
										"ExportTime"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"skipValidateAndConfirm\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/ADP/ExportTime",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ADP",
												"ExportTime"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ADP/getadpemployees",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ADP/getadpemployees",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ADP",
										"getadpemployees"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ADP/getadpemployees",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ADP",
												"getadpemployees"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ADP/GetADPEmployeeNameMatches",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ADP/GetADPEmployeeNameMatches",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ADP",
										"GetADPEmployeeNameMatches"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ADP/GetADPEmployeeNameMatches",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ADP",
												"GetADPEmployeeNameMatches"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ADP/SearchADPEmployees",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ADP/SearchADPEmployees?query=<string>&sort=<string>&skip=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ADP",
										"SearchADPEmployees"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "sort",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ADP/SearchADPEmployees?query=<string>&sort=<string>&skip=<integer>&take=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ADP",
												"SearchADPEmployees"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>"
												},
												{
													"key": "sort",
													"value": "<string>"
												},
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ADP/GetUnmappedCSEmployees",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ADP/GetUnmappedCSEmployees",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ADP",
										"GetUnmappedCSEmployees"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ADP/GetUnmappedCSEmployees",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ADP",
												"GetUnmappedCSEmployees"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ADP/GetUnmappedADPEmployees",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ADP/GetUnmappedADPEmployees?query=<string>&sort=<string>&skip=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ADP",
										"GetUnmappedADPEmployees"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "sort",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ADP/GetUnmappedADPEmployees?query=<string>&sort=<string>&skip=<integer>&take=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ADP",
												"GetUnmappedADPEmployees"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>"
												},
												{
													"key": "sort",
													"value": "<string>"
												},
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ADP/SearchTimeOffMappings",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ADP/SearchTimeOffMappings?query=<string>&sort=<string>&skip=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ADP",
										"SearchTimeOffMappings"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "sort",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ADP/SearchTimeOffMappings?query=<string>&sort=<string>&skip=<integer>&take=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ADP",
												"SearchTimeOffMappings"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>"
												},
												{
													"key": "sort",
													"value": "<string>"
												},
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ADP/syncadpemployees",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ADP/syncadpemployees?autoImport=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ADP",
										"syncadpemployees"
									],
									"query": [
										{
											"key": "autoImport",
											"value": "<boolean>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ADP/syncadpemployees?autoImport=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ADP",
												"syncadpemployees"
											],
											"query": [
												{
													"key": "autoImport",
													"value": "<boolean>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ADP/GetEarningsCodes",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ADP/GetEarningsCodes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ADP",
										"GetEarningsCodes"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ADP/GetEarningsCodes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ADP",
												"GetEarningsCodes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ADP/PostEmployees",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"importingADPEmployees\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"sendSetupEmail\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/ADP/PostEmployees",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ADP",
										"PostEmployees"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"importingADPEmployees\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"sendSetupEmail\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/ADP/PostEmployees",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ADP",
												"PostEmployees"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ADP/syncAdpEarningsCodes",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ADP/syncAdpEarningsCodes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ADP",
										"syncAdpEarningsCodes"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ADP/syncAdpEarningsCodes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ADP",
												"syncAdpEarningsCodes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ADP/SyncADPDepartments",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ADP/SyncADPDepartments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ADP",
										"SyncADPDepartments"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ADP/SyncADPDepartments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ADP",
												"SyncADPDepartments"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ADP/SyncCostStrings",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ADP/SyncCostStrings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ADP",
										"SyncCostStrings"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ADP/SyncCostStrings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ADP",
												"SyncCostStrings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ADP/GetADPDepartments",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ADP/GetADPDepartments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ADP",
										"GetADPDepartments"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ADP/GetADPDepartments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ADP",
												"GetADPDepartments"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ADP/GetTaskPayRates",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ADP/GetTaskPayRates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ADP",
										"GetTaskPayRates"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ADP/GetTaskPayRates",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ADP",
												"GetTaskPayRates"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ADP/SearchTaskPayRateMappings",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ADP/SearchTaskPayRateMappings?query=<string>&sort=<string>&skip=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ADP",
										"SearchTaskPayRateMappings"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "sort",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ADP/SearchTaskPayRateMappings?query=<string>&sort=<string>&skip=<integer>&take=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ADP",
												"SearchTaskPayRateMappings"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>"
												},
												{
													"key": "sort",
													"value": "<string>"
												},
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ADP/SearchCostStringJobMappings",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ADP/SearchCostStringJobMappings?query=<string>&sort=<string>&skip=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ADP",
										"SearchCostStringJobMappings"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "sort",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ADP/SearchCostStringJobMappings?query=<string>&sort=<string>&skip=<integer>&take=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ADP",
												"SearchCostStringJobMappings"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>"
												},
												{
													"key": "sort",
													"value": "<string>"
												},
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ADP/SearchTaskEarningsCodesOverrides",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ADP/SearchTaskEarningsCodesOverrides?query=<string>&sort=<string>&skip=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ADP",
										"SearchTaskEarningsCodesOverrides"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "sort",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ADP/SearchTaskEarningsCodesOverrides?query=<string>&sort=<string>&skip=<integer>&take=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ADP",
												"SearchTaskEarningsCodesOverrides"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>"
												},
												{
													"key": "sort",
													"value": "<string>"
												},
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ADP/GetCostStrings",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ADP/GetCostStrings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ADP",
										"GetCostStrings"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ADP/GetCostStrings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ADP",
												"GetCostStrings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ADP/updateemployeemapping",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"employeeId\": \"<integer>\",\n  \"associateOID\": \"<string>\",\n  \"givenName\": \"<string>\",\n  \"familyName\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"rateCode\": \"<string>\",\n  \"payFrequency\": \"<string>\",\n  \"groupCode\": \"<string>\",\n  \"fileNumber\": \"<string>\",\n  \"rateValue\": \"<double>\",\n  \"createdDate\": \"<dateTime>\",\n  \"deletedDate\": \"<dateTime>\",\n  \"additionalPayRates\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/ADP/updateemployeemapping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ADP",
										"updateemployeemapping"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"employeeId\": \"<integer>\",\n  \"associateOID\": \"<string>\",\n  \"givenName\": \"<string>\",\n  \"familyName\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"rateCode\": \"<string>\",\n  \"payFrequency\": \"<string>\",\n  \"groupCode\": \"<string>\",\n  \"fileNumber\": \"<string>\",\n  \"rateValue\": \"<double>\",\n  \"createdDate\": \"<dateTime>\",\n  \"deletedDate\": \"<dateTime>\",\n  \"additionalPayRates\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/ADP/updateemployeemapping",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ADP",
												"updateemployeemapping"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ADP/UpdateTimeOffMapping",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"timeOffPolicyId\": \"<integer>\",\n  \"policyType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"policyTypeReadable\": \"<string>\",\n  \"policyName\": \"<string>\",\n  \"isTimeOffLimit\": \"<string>\",\n  \"accrualHours\": \"<double>\",\n  \"accrualMethod\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isWaitingPeriod\": \"<string>\",\n  \"waitingPeriodDays\": \"<integer>\",\n  \"isCarryoverLimit\": \"<string>\",\n  \"maxCarryOverHours\": \"<double>\",\n  \"maxBalanceHours\": \"<double>\",\n  \"payrollMappingId\": \"<string>\",\n  \"enrolledCount\": \"<integer>\",\n  \"holidayDate\": \"<dateTime>\",\n  \"hoursTotal\": \"<double>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"hasApproval\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/ADP/UpdateTimeOffMapping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ADP",
										"UpdateTimeOffMapping"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"timeOffPolicyId\": \"<integer>\",\n  \"policyType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"policyTypeReadable\": \"<string>\",\n  \"policyName\": \"<string>\",\n  \"isTimeOffLimit\": \"<string>\",\n  \"accrualHours\": \"<double>\",\n  \"accrualMethod\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isWaitingPeriod\": \"<string>\",\n  \"waitingPeriodDays\": \"<integer>\",\n  \"isCarryoverLimit\": \"<string>\",\n  \"maxCarryOverHours\": \"<double>\",\n  \"maxBalanceHours\": \"<double>\",\n  \"payrollMappingId\": \"<string>\",\n  \"enrolledCount\": \"<integer>\",\n  \"holidayDate\": \"<dateTime>\",\n  \"hoursTotal\": \"<double>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"hasApproval\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/ADP/UpdateTimeOffMapping",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ADP",
												"UpdateTimeOffMapping"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ADP/UpdateTaskPayRateMapping",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"companyId\": \"<integer>\",\n  \"associateOID\": \"<string>\",\n  \"codeValue\": \"<string>\",\n  \"rateValue\": \"<double>\",\n  \"departmentCodeValue\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"taskIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/ADP/UpdateTaskPayRateMapping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ADP",
										"UpdateTaskPayRateMapping"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"companyId\": \"<integer>\",\n  \"associateOID\": \"<string>\",\n  \"codeValue\": \"<string>\",\n  \"rateValue\": \"<double>\",\n  \"departmentCodeValue\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"taskIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/ADP/UpdateTaskPayRateMapping",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ADP",
												"UpdateTaskPayRateMapping"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ADP/DeletePayRateMapping",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"companyId\": \"<integer>\",\n  \"associateOID\": \"<string>\",\n  \"codeValue\": \"<string>\",\n  \"rateValue\": \"<double>\",\n  \"departmentCodeValue\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"taskIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/ADP/DeletePayRateMapping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ADP",
										"DeletePayRateMapping"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"companyId\": \"<integer>\",\n  \"associateOID\": \"<string>\",\n  \"codeValue\": \"<string>\",\n  \"rateValue\": \"<double>\",\n  \"departmentCodeValue\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"taskIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/ADP/DeletePayRateMapping",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ADP",
												"DeletePayRateMapping"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ADP/UpdateTaskEarningsCodesOverride",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"taskId\": \"<integer>\",\n  \"regularEarningsCodeValue\": \"<string>\",\n  \"overtimeEarningsCodeValue\": \"<string>\",\n  \"doubletimeEarningsCodeValue\": \"<string>\",\n  \"task\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/ADP/UpdateTaskEarningsCodesOverride",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ADP",
										"UpdateTaskEarningsCodesOverride"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"taskId\": \"<integer>\",\n  \"regularEarningsCodeValue\": \"<string>\",\n  \"overtimeEarningsCodeValue\": \"<string>\",\n  \"doubletimeEarningsCodeValue\": \"<string>\",\n  \"task\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/ADP/UpdateTaskEarningsCodesOverride",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ADP",
												"UpdateTaskEarningsCodesOverride"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ADP/DeleteTaskEarningsCodesOverride",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"taskId\": \"<integer>\",\n  \"regularEarningsCodeValue\": \"<string>\",\n  \"overtimeEarningsCodeValue\": \"<string>\",\n  \"doubletimeEarningsCodeValue\": \"<string>\",\n  \"task\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/ADP/DeleteTaskEarningsCodesOverride",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ADP",
										"DeleteTaskEarningsCodesOverride"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"taskId\": \"<integer>\",\n  \"regularEarningsCodeValue\": \"<string>\",\n  \"overtimeEarningsCodeValue\": \"<string>\",\n  \"doubletimeEarningsCodeValue\": \"<string>\",\n  \"task\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/ADP/DeleteTaskEarningsCodesOverride",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ADP",
												"DeleteTaskEarningsCodesOverride"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ADP/UpdateCostStringJobMapping",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"<string>\",\n  \"codeValue\": \"<string>\",\n  \"shortName\": \"<string>\",\n  \"jobIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/ADP/UpdateCostStringJobMapping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ADP",
										"UpdateCostStringJobMapping"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"<string>\",\n  \"codeValue\": \"<string>\",\n  \"shortName\": \"<string>\",\n  \"jobIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/ADP/UpdateCostStringJobMapping",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ADP",
												"UpdateCostStringJobMapping"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ADP/DeleteCostStringJobMapping",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jobId\": \"<integer>\",\n  \"color\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"description\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"isBudgeted\": \"<boolean>\",\n  \"hoursBudgeted\": \"<double>\",\n  \"hoursAlert\": \"<double>\",\n  \"hoursWorked\": \"<double>\",\n  \"isActive\": \"<boolean>\",\n  \"restrictionTypeEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"restrictEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobCustomer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobCustomerContacts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictionTypeTask\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"restrictTaskIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobGeofence\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attestationSurvey\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dateDeleted\": \"<dateTime>\",\n  \"stage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isCurrentEmpFollowing\": \"<boolean>\",\n  \"nameAndNumber\": \"<string>\",\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"hasBilledTime\": \"<boolean>\",\n  \"billedInvoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/ADP/DeleteCostStringJobMapping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ADP",
										"DeleteCostStringJobMapping"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jobId\": \"<integer>\",\n  \"color\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"description\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"isBudgeted\": \"<boolean>\",\n  \"hoursBudgeted\": \"<double>\",\n  \"hoursAlert\": \"<double>\",\n  \"hoursWorked\": \"<double>\",\n  \"isActive\": \"<boolean>\",\n  \"restrictionTypeEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"restrictEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobCustomer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobCustomerContacts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictionTypeTask\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"restrictTaskIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobGeofence\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attestationSurvey\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dateDeleted\": \"<dateTime>\",\n  \"stage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isCurrentEmpFollowing\": \"<boolean>\",\n  \"nameAndNumber\": \"<string>\",\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"hasBilledTime\": \"<boolean>\",\n  \"billedInvoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/ADP/DeleteCostStringJobMapping",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ADP",
												"DeleteCostStringJobMapping"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ADP/UpdateCompanySettings",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"companyId\": \"<integer>\",\n  \"organizationOID\": \"<string>\",\n  \"name\": \"<string>\",\n  \"integrationType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"integrationLevel\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"region\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"clientId\": \"<string>\",\n  \"clientSecret\": \"<string>\",\n  \"activationCode\": \"<string>\",\n  \"earningsCodeRegular\": \"<string>\",\n  \"earningsCodeOvertime\": \"<string>\",\n  \"earningsCodeDoubletime\": \"<string>\",\n  \"batchId\": \"<integer>\",\n  \"isBundle\": \"<boolean>\",\n  \"bundleType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"createdDate\": \"<dateTime>\",\n  \"deletedDate\": \"<dateTime>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/ADP/UpdateCompanySettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ADP",
										"UpdateCompanySettings"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"companyId\": \"<integer>\",\n  \"organizationOID\": \"<string>\",\n  \"name\": \"<string>\",\n  \"integrationType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"integrationLevel\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"region\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"clientId\": \"<string>\",\n  \"clientSecret\": \"<string>\",\n  \"activationCode\": \"<string>\",\n  \"earningsCodeRegular\": \"<string>\",\n  \"earningsCodeOvertime\": \"<string>\",\n  \"earningsCodeDoubletime\": \"<string>\",\n  \"batchId\": \"<integer>\",\n  \"isBundle\": \"<boolean>\",\n  \"bundleType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"createdDate\": \"<dateTime>\",\n  \"deletedDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/ADP/UpdateCompanySettings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ADP",
												"UpdateCompanySettings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ADP/GetDataConnectorCredentials",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ADP/GetDataConnectorCredentials",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ADP",
										"GetDataConnectorCredentials"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ADP/GetDataConnectorCredentials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ADP",
												"GetDataConnectorCredentials"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Approval",
					"item": [
						{
							"name": "/api/Approval/DeleteApproval",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"approvals\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Approval/DeleteApproval",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Approval",
										"DeleteApproval"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"approvals\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Approval/DeleteApproval",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Approval",
												"DeleteApproval"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Approval/AddApprovals",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"approvals\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Approval/AddApprovals",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Approval",
										"AddApprovals"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"approvals\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Approval/AddApprovals",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Approval",
												"AddApprovals"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Approval/GetApprovalPeriodSummary",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "Start",
											"value": "<dateTime>",
											"type": "text"
										},
										{
											"key": "End",
											"value": "<dateTime>",
											"type": "text"
										},
										{
											"key": "EmployeeIds",
											"value": "[\"<integer>\",\"<integer>\"]",
											"type": "text"
										},
										{
											"key": "SortDirection",
											"value": "<string>",
											"type": "text"
										},
										{
											"key": "SortColumn",
											"value": "<string>",
											"type": "text"
										},
										{
											"key": "Skip",
											"value": "<integer>",
											"type": "text"
										},
										{
											"key": "Take",
											"value": "<integer>",
											"type": "text"
										},
										{
											"key": "Status",
											"value": "<integer>",
											"type": "text"
										},
										{
											"key": "IsGroupFilterApplied",
											"value": "<boolean>",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/Approval/GetApprovalPeriodSummary",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Approval",
										"GetApprovalPeriodSummary"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "Start",
													"value": "<dateTime>",
													"type": "text"
												},
												{
													"key": "End",
													"value": "<dateTime>",
													"type": "text"
												},
												{
													"key": "EmployeeIds",
													"value": "[\"<integer>\",\"<integer>\"]",
													"type": "text"
												},
												{
													"key": "SortDirection",
													"value": "<string>",
													"type": "text"
												},
												{
													"key": "SortColumn",
													"value": "<string>",
													"type": "text"
												},
												{
													"key": "Skip",
													"value": "<integer>",
													"type": "text"
												},
												{
													"key": "Take",
													"value": "<integer>",
													"type": "text"
												},
												{
													"key": "Status",
													"value": "<integer>",
													"type": "text"
												},
												{
													"key": "IsGroupFilterApplied",
													"value": "<boolean>",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/Approval/GetApprovalPeriodSummary",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Approval",
												"GetApprovalPeriodSummary"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Attestation",
					"item": [
						{
							"name": "/api/Attestation/SaveQuestion",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attestationQuestionId\": \"<integer>\",\n  \"companyId\": \"<integer>\",\n  \"displayText\": \"<string>\",\n  \"responseType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"order\": \"<integer>\",\n  \"isResponseRequired\": \"<boolean>\",\n  \"choices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"oldQuestionId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Attestation/SaveQuestion",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Attestation",
										"SaveQuestion"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attestationQuestionId\": \"<integer>\",\n  \"companyId\": \"<integer>\",\n  \"displayText\": \"<string>\",\n  \"responseType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"order\": \"<integer>\",\n  \"isResponseRequired\": \"<boolean>\",\n  \"choices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"oldQuestionId\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Attestation/SaveQuestion",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Attestation",
												"SaveQuestion"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Attestation/SaveSurvey",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attestationSurveyId\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"active\": \"<boolean>\",\n  \"assignedToEveryone\": \"<boolean>\",\n  \"displayOnSwitch\": \"<boolean>\",\n  \"groupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"questions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Attestation/SaveSurvey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Attestation",
										"SaveSurvey"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attestationSurveyId\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"active\": \"<boolean>\",\n  \"assignedToEveryone\": \"<boolean>\",\n  \"displayOnSwitch\": \"<boolean>\",\n  \"groupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"questions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Attestation/SaveSurvey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Attestation",
												"SaveSurvey"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Attestation/BulkUpdateSurveys",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"statusActive\": \"<boolean>\",\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Attestation/BulkUpdateSurveys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Attestation",
										"BulkUpdateSurveys"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"statusActive\": \"<boolean>\",\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Attestation/BulkUpdateSurveys",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Attestation",
												"BulkUpdateSurveys"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Attestation/DeleteAttestationSurvey/:id",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Attestation/DeleteAttestationSurvey/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Attestation",
										"DeleteAttestationSurvey",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Attestation/DeleteAttestationSurvey/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Attestation",
												"DeleteAttestationSurvey",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Attestation/BulkDeleteAttestationSurveys",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"statusActive\": \"<boolean>\",\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Attestation/BulkDeleteAttestationSurveys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Attestation",
										"BulkDeleteAttestationSurveys"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"statusActive\": \"<boolean>\",\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Attestation/BulkDeleteAttestationSurveys",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Attestation",
												"BulkDeleteAttestationSurveys"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Attestation/BulkDeleteAttestationQuestions",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"statusActive\": \"<boolean>\",\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Attestation/BulkDeleteAttestationQuestions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Attestation",
										"BulkDeleteAttestationQuestions"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"statusActive\": \"<boolean>\",\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Attestation/BulkDeleteAttestationQuestions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Attestation",
												"BulkDeleteAttestationQuestions"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Attestation/DeleteAttestationQuestion/:id",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Attestation/DeleteAttestationQuestion/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Attestation",
										"DeleteAttestationQuestion",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Attestation/DeleteAttestationQuestion/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Attestation",
												"DeleteAttestationQuestion",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Attestation/GetSurveyDetail/:id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Attestation/GetSurveyDetail/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Attestation",
										"GetSurveyDetail",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Attestation/GetSurveyDetail/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Attestation",
												"GetSurveyDetail",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Attestation/GetSurveySummary",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Attestation/GetSurveySummary",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Attestation",
										"GetSurveySummary"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Attestation/GetSurveySummary",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Attestation",
												"GetSurveySummary"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Attestation/GetSurveys",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Attestation/GetSurveys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Attestation",
										"GetSurveys"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Attestation/GetSurveys",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Attestation",
												"GetSurveys"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Attestation/GetAvailableSurveys",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Attestation/GetAvailableSurveys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Attestation",
										"GetAvailableSurveys"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Attestation/GetAvailableSurveys",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Attestation",
												"GetAvailableSurveys"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Attestation/GetAssignedSurveys",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"questionNames\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"questionIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"surveyId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Attestation/GetAssignedSurveys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Attestation",
										"GetAssignedSurveys"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"questionNames\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"questionIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"surveyId\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Attestation/GetAssignedSurveys",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Attestation",
												"GetAssignedSurveys"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Attestation/GetQuestion/:id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Attestation/GetQuestion/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Attestation",
										"GetQuestion",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Attestation/GetQuestion/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Attestation",
												"GetQuestion",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Attestation/GetQuestionSummary",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Attestation/GetQuestionSummary?searchCriteria=<string>&sortColumn=<string>&sortDirection=<string>&skip=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Attestation",
										"GetQuestionSummary"
									],
									"query": [
										{
											"key": "searchCriteria",
											"value": "<string>"
										},
										{
											"key": "sortColumn",
											"value": "<string>"
										},
										{
											"key": "sortDirection",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Attestation/GetQuestionSummary?searchCriteria=<string>&sortColumn=<string>&sortDirection=<string>&skip=<integer>&take=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Attestation",
												"GetQuestionSummary"
											],
											"query": [
												{
													"key": "searchCriteria",
													"value": "<string>"
												},
												{
													"key": "sortColumn",
													"value": "<string>"
												},
												{
													"key": "sortDirection",
													"value": "<string>"
												},
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Attestation/GetQuestions",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Attestation/GetQuestions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Attestation",
										"GetQuestions"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Attestation/GetQuestions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Attestation",
												"GetQuestions"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Attestation/GetSurveysForEmployeeAndJob",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Attestation/GetSurveysForEmployeeAndJob?clockeventId=<integer>&isSwitch=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Attestation",
										"GetSurveysForEmployeeAndJob"
									],
									"query": [
										{
											"key": "clockeventId",
											"value": "<integer>"
										},
										{
											"key": "isSwitch",
											"value": "<boolean>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Attestation/GetSurveysForEmployeeAndJob?clockeventId=<integer>&isSwitch=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Attestation",
												"GetSurveysForEmployeeAndJob"
											],
											"query": [
												{
													"key": "clockeventId",
													"value": "<integer>"
												},
												{
													"key": "isSwitch",
													"value": "<boolean>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Attestation/GetResponses",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Attestation/GetResponses?clockEventId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Attestation",
										"GetResponses"
									],
									"query": [
										{
											"key": "clockEventId",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Attestation/GetResponses?clockEventId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Attestation",
												"GetResponses"
											],
											"query": [
												{
													"key": "clockEventId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Attestation/GetActiveQuestions",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Attestation/GetActiveQuestions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Attestation",
										"GetActiveQuestions"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Attestation/GetActiveQuestions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Attestation",
												"GetActiveQuestions"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "AuditLog",
					"item": [
						{
							"name": "/api/AuditLog/Get",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/AuditLog/Get",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"AuditLog",
										"Get"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/AuditLog/Get",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"AuditLog",
												"Get"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/AuditLog/GetByEditIdAndClockEventId",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/AuditLog/GetByEditIdAndClockEventId?editId=<integer>&clockEventId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"AuditLog",
										"GetByEditIdAndClockEventId"
									],
									"query": [
										{
											"key": "editId",
											"value": "<integer>"
										},
										{
											"key": "clockEventId",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/AuditLog/GetByEditIdAndClockEventId?editId=<integer>&clockEventId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"AuditLog",
												"GetByEditIdAndClockEventId"
											],
											"query": [
												{
													"key": "editId",
													"value": "<integer>"
												},
												{
													"key": "clockEventId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/AuditLog/GetByEditId",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/AuditLog/GetByEditId?eventEditId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"AuditLog",
										"GetByEditId"
									],
									"query": [
										{
											"key": "eventEditId",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/AuditLog/GetByEditId?eventEditId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"AuditLog",
												"GetByEditId"
											],
											"query": [
												{
													"key": "eventEditId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "ClockEvent",
					"item": [
						{
							"name": "ChosenTimeZone",
							"item": [
								{
									"name": "/api/ClockEvent/ChosenTimeZone",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ClockEvent/ChosenTimeZone",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ClockEvent",
												"ChosenTimeZone"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/ClockEvent/ChosenTimeZone",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"ClockEvent",
														"ChosenTimeZone"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "/api/ClockEvent/ChosenTimeZone",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<integer>",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/ClockEvent/ChosenTimeZone",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ClockEvent",
												"ChosenTimeZone"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "<integer>",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/ClockEvent/ChosenTimeZone",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"ClockEvent",
														"ChosenTimeZone"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "/api/ClockEvent/Latest",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ClockEvent/Latest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ClockEvent",
										"Latest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ClockEvent/Latest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ClockEvent",
												"Latest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ClockEvent/Recent",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ClockEvent/Recent",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ClockEvent",
										"Recent"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ClockEvent/Recent",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ClockEvent",
												"Recent"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ClockEvent/GetClockEventsForUnbilledItems",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ClockEvent/GetClockEventsForUnbilledItems?start=<dateTime>&end=<dateTime>&customerId=<integer>&invoiceId=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ClockEvent",
										"GetClockEventsForUnbilledItems"
									],
									"query": [
										{
											"key": "start",
											"value": "<dateTime>"
										},
										{
											"key": "end",
											"value": "<dateTime>"
										},
										{
											"key": "customerId",
											"value": "<integer>"
										},
										{
											"key": "invoiceId",
											"value": "<uuid>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ClockEvent/GetClockEventsForUnbilledItems?start=<dateTime>&end=<dateTime>&customerId=<integer>&invoiceId=<uuid>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ClockEvent",
												"GetClockEventsForUnbilledItems"
											],
											"query": [
												{
													"key": "start",
													"value": "<dateTime>"
												},
												{
													"key": "end",
													"value": "<dateTime>"
												},
												{
													"key": "customerId",
													"value": "<integer>"
												},
												{
													"key": "invoiceId",
													"value": "<uuid>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ClockEvent/GetDailyDetails",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ClockEvent/GetDailyDetails?start=<dateTime>&end=<dateTime>&employeeId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ClockEvent",
										"GetDailyDetails"
									],
									"query": [
										{
											"key": "start",
											"value": "<dateTime>"
										},
										{
											"key": "end",
											"value": "<dateTime>"
										},
										{
											"key": "employeeId",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ClockEvent/GetDailyDetails?start=<dateTime>&end=<dateTime>&employeeId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ClockEvent",
												"GetDailyDetails"
											],
											"query": [
												{
													"key": "start",
													"value": "<dateTime>"
												},
												{
													"key": "end",
													"value": "<dateTime>"
												},
												{
													"key": "employeeId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ClockEvent/GetDailyDetailsJob",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ClockEvent/GetDailyDetailsJob?start=<dateTime>&end=<dateTime>&jobId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ClockEvent",
										"GetDailyDetailsJob"
									],
									"query": [
										{
											"key": "start",
											"value": "<dateTime>"
										},
										{
											"key": "end",
											"value": "<dateTime>"
										},
										{
											"key": "jobId",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ClockEvent/GetDailyDetailsJob?start=<dateTime>&end=<dateTime>&jobId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ClockEvent",
												"GetDailyDetailsJob"
											],
											"query": [
												{
													"key": "start",
													"value": "<dateTime>"
												},
												{
													"key": "end",
													"value": "<dateTime>"
												},
												{
													"key": "jobId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ClockEvent/GetWeeklySummary",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ClockEvent/GetWeeklySummary?start=<dateTime>&end=<dateTime>&employeeId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ClockEvent",
										"GetWeeklySummary"
									],
									"query": [
										{
											"key": "start",
											"value": "<dateTime>"
										},
										{
											"key": "end",
											"value": "<dateTime>"
										},
										{
											"key": "employeeId",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ClockEvent/GetWeeklySummary?start=<dateTime>&end=<dateTime>&employeeId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ClockEvent",
												"GetWeeklySummary"
											],
											"query": [
												{
													"key": "start",
													"value": "<dateTime>"
												},
												{
													"key": "end",
													"value": "<dateTime>"
												},
												{
													"key": "employeeId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ClockEvent/GetWeeklySummaryJob",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ClockEvent/GetWeeklySummaryJob?start=<dateTime>&end=<dateTime>&jobId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ClockEvent",
										"GetWeeklySummaryJob"
									],
									"query": [
										{
											"key": "start",
											"value": "<dateTime>"
										},
										{
											"key": "end",
											"value": "<dateTime>"
										},
										{
											"key": "jobId",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ClockEvent/GetWeeklySummaryJob?start=<dateTime>&end=<dateTime>&jobId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ClockEvent",
												"GetWeeklySummaryJob"
											],
											"query": [
												{
													"key": "start",
													"value": "<dateTime>"
												},
												{
													"key": "end",
													"value": "<dateTime>"
												},
												{
													"key": "jobId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ClockEvent/getoutofboundslocations",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ClockEvent/getoutofboundslocations?clockEventId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ClockEvent",
										"getoutofboundslocations"
									],
									"query": [
										{
											"key": "clockEventId",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ClockEvent/getoutofboundslocations?clockEventId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ClockEvent",
												"getoutofboundslocations"
											],
											"query": [
												{
													"key": "clockEventId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ClockEvent/Get",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ClockEvent/Get?id=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ClockEvent",
										"Get"
									],
									"query": [
										{
											"key": "id",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ClockEvent/Get?id=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ClockEvent",
												"Get"
											],
											"query": [
												{
													"key": "id",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ClockEvent/AddClockEvents",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"groupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobId\": \"<integer>\",\n  \"taskId\": \"<integer>\",\n  \"notes\": \"<string>\",\n  \"breaks\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"allowOverlappingTime\": \"<boolean>\",\n  \"startTimeZone\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTimeZone\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/ClockEvent/AddClockEvents",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ClockEvent",
										"AddClockEvents"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"groupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobId\": \"<integer>\",\n  \"taskId\": \"<integer>\",\n  \"notes\": \"<string>\",\n  \"breaks\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"allowOverlappingTime\": \"<boolean>\",\n  \"startTimeZone\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTimeZone\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/ClockEvent/AddClockEvents",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ClockEvent",
												"AddClockEvents"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ClockEvent/Copy",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"clockEventId\": \"<integer>\",\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"startUnrounded\": \"<dateTime>\",\n  \"endUnrounded\": \"<dateTime>\",\n  \"startTimeZone\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTimeZone\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"employeeId\": \"<integer>\",\n  \"employeeName\": \"<string>\",\n  \"employeeColor\": \"<string>\",\n  \"jobId\": \"<integer>\",\n  \"jobName\": \"<string>\",\n  \"jobColor\": \"<string>\",\n  \"taskId\": \"<integer>\",\n  \"taskName\": \"<string>\",\n  \"previousClockEventId\": \"<integer>\",\n  \"actingEmployeeId\": \"<integer>\",\n  \"actingEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": \"<string>\",\n  \"minutesBillable\": \"<integer>\",\n  \"minutes\": \"<integer>\",\n  \"eventType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"edits\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"breaks\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"locations\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"exceptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceCaptures\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceCapturesIn\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceCapturesOut\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"hasAttestationResponses\": \"<boolean>\",\n  \"attestationResponses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"start_ISO_8601\": \"<string>\",\n  \"end_ISO_8601\": \"<string>\",\n  \"approval\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"employee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"task\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"allowOverlappingTime\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/ClockEvent/Copy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ClockEvent",
										"Copy"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"clockEventId\": \"<integer>\",\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"startUnrounded\": \"<dateTime>\",\n  \"endUnrounded\": \"<dateTime>\",\n  \"startTimeZone\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTimeZone\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"employeeId\": \"<integer>\",\n  \"employeeName\": \"<string>\",\n  \"employeeColor\": \"<string>\",\n  \"jobId\": \"<integer>\",\n  \"jobName\": \"<string>\",\n  \"jobColor\": \"<string>\",\n  \"taskId\": \"<integer>\",\n  \"taskName\": \"<string>\",\n  \"previousClockEventId\": \"<integer>\",\n  \"actingEmployeeId\": \"<integer>\",\n  \"actingEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": \"<string>\",\n  \"minutesBillable\": \"<integer>\",\n  \"minutes\": \"<integer>\",\n  \"eventType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"edits\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"breaks\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"locations\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"exceptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceCaptures\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceCapturesIn\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceCapturesOut\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"hasAttestationResponses\": \"<boolean>\",\n  \"attestationResponses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"start_ISO_8601\": \"<string>\",\n  \"end_ISO_8601\": \"<string>\",\n  \"approval\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"employee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"task\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"allowOverlappingTime\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/ClockEvent/Copy",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ClockEvent",
												"Copy"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ClockEvent/Post",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"clockEventId\": \"<integer>\",\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"startUnrounded\": \"<dateTime>\",\n  \"endUnrounded\": \"<dateTime>\",\n  \"startTimeZone\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTimeZone\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"employeeId\": \"<integer>\",\n  \"employeeName\": \"<string>\",\n  \"employeeColor\": \"<string>\",\n  \"jobId\": \"<integer>\",\n  \"jobName\": \"<string>\",\n  \"jobColor\": \"<string>\",\n  \"taskId\": \"<integer>\",\n  \"taskName\": \"<string>\",\n  \"previousClockEventId\": \"<integer>\",\n  \"actingEmployeeId\": \"<integer>\",\n  \"actingEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": \"<string>\",\n  \"minutesBillable\": \"<integer>\",\n  \"minutes\": \"<integer>\",\n  \"eventType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"edits\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"breaks\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"locations\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"exceptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceCaptures\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceCapturesIn\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceCapturesOut\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"hasAttestationResponses\": \"<boolean>\",\n  \"attestationResponses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"start_ISO_8601\": \"<string>\",\n  \"end_ISO_8601\": \"<string>\",\n  \"approval\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"employee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"task\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"allowOverlappingTime\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/ClockEvent/Post",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ClockEvent",
										"Post"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"clockEventId\": \"<integer>\",\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"startUnrounded\": \"<dateTime>\",\n  \"endUnrounded\": \"<dateTime>\",\n  \"startTimeZone\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTimeZone\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"employeeId\": \"<integer>\",\n  \"employeeName\": \"<string>\",\n  \"employeeColor\": \"<string>\",\n  \"jobId\": \"<integer>\",\n  \"jobName\": \"<string>\",\n  \"jobColor\": \"<string>\",\n  \"taskId\": \"<integer>\",\n  \"taskName\": \"<string>\",\n  \"previousClockEventId\": \"<integer>\",\n  \"actingEmployeeId\": \"<integer>\",\n  \"actingEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": \"<string>\",\n  \"minutesBillable\": \"<integer>\",\n  \"minutes\": \"<integer>\",\n  \"eventType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"edits\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"breaks\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"locations\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"exceptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceCaptures\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceCapturesIn\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceCapturesOut\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"hasAttestationResponses\": \"<boolean>\",\n  \"attestationResponses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"start_ISO_8601\": \"<string>\",\n  \"end_ISO_8601\": \"<string>\",\n  \"approval\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"employee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"task\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"allowOverlappingTime\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/ClockEvent/Post",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ClockEvent",
												"Post"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ClockEvent/AddAttachment",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attachmentId\": \"<uuid>\",\n  \"fileName\": \"<string>\",\n  \"sizeBytes\": \"<integer>\",\n  \"companyId\": \"<integer>\",\n  \"blobURL\": \"<string>\",\n  \"downloadURL\": \"<string>\",\n  \"thumbnailURL\": \"<string>\",\n  \"isImage\": \"<boolean>\",\n  \"createdDate\": \"<dateTime>\",\n  \"lightboxURL\": \"<string>\",\n  \"clockEventId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/ClockEvent/AddAttachment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ClockEvent",
										"AddAttachment"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attachmentId\": \"<uuid>\",\n  \"fileName\": \"<string>\",\n  \"sizeBytes\": \"<integer>\",\n  \"companyId\": \"<integer>\",\n  \"blobURL\": \"<string>\",\n  \"downloadURL\": \"<string>\",\n  \"thumbnailURL\": \"<string>\",\n  \"isImage\": \"<boolean>\",\n  \"createdDate\": \"<dateTime>\",\n  \"lightboxURL\": \"<string>\",\n  \"clockEventId\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/ClockEvent/AddAttachment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ClockEvent",
												"AddAttachment"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ClockEvent/DeleteAttachment",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attachmentId\": \"<uuid>\",\n  \"fileName\": \"<string>\",\n  \"sizeBytes\": \"<integer>\",\n  \"companyId\": \"<integer>\",\n  \"blobURL\": \"<string>\",\n  \"downloadURL\": \"<string>\",\n  \"thumbnailURL\": \"<string>\",\n  \"isImage\": \"<boolean>\",\n  \"createdDate\": \"<dateTime>\",\n  \"lightboxURL\": \"<string>\",\n  \"clockEventId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/ClockEvent/DeleteAttachment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ClockEvent",
										"DeleteAttachment"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attachmentId\": \"<uuid>\",\n  \"fileName\": \"<string>\",\n  \"sizeBytes\": \"<integer>\",\n  \"companyId\": \"<integer>\",\n  \"blobURL\": \"<string>\",\n  \"downloadURL\": \"<string>\",\n  \"thumbnailURL\": \"<string>\",\n  \"isImage\": \"<boolean>\",\n  \"createdDate\": \"<dateTime>\",\n  \"lightboxURL\": \"<string>\",\n  \"clockEventId\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/ClockEvent/DeleteAttachment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ClockEvent",
												"DeleteAttachment"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ClockEvent/AddClockEventBreak",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"clockEventId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/ClockEvent/AddClockEventBreak",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ClockEvent",
										"AddClockEventBreak"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"clockEventId\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/ClockEvent/AddClockEventBreak",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ClockEvent",
												"AddClockEventBreak"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ClockEvent/EndClockEventBreak",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"clockEventBreakId\": \"<integer>\",\n  \"clockEventId\": \"<integer>\",\n  \"breakType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isPaid\": \"<boolean>\",\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"startUnrounded\": \"<dateTime>\",\n  \"endUnrounded\": \"<dateTime>\",\n  \"startTimeZone\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTimeZone\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"minutes\": \"<integer>\",\n  \"startTime_ISO8601\": \"<string>\",\n  \"endTime_ISO8601\": \"<string>\",\n  \"startTime_ISO8601_Unrounded\": \"<string>\",\n  \"endTime_ISO8601_Unrounded\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/ClockEvent/EndClockEventBreak",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ClockEvent",
										"EndClockEventBreak"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"clockEventBreakId\": \"<integer>\",\n  \"clockEventId\": \"<integer>\",\n  \"breakType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isPaid\": \"<boolean>\",\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"startUnrounded\": \"<dateTime>\",\n  \"endUnrounded\": \"<dateTime>\",\n  \"startTimeZone\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTimeZone\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"minutes\": \"<integer>\",\n  \"startTime_ISO8601\": \"<string>\",\n  \"endTime_ISO8601\": \"<string>\",\n  \"startTime_ISO8601_Unrounded\": \"<string>\",\n  \"endTime_ISO8601_Unrounded\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/ClockEvent/EndClockEventBreak",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ClockEvent",
												"EndClockEventBreak"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ClockEvent/ClockIn",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jobId\": \"<integer>\",\n  \"taskId\": \"<integer>\",\n  \"eventType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": \"<string>\",\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"startTimeZone\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/ClockEvent/ClockIn",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ClockEvent",
										"ClockIn"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jobId\": \"<integer>\",\n  \"taskId\": \"<integer>\",\n  \"eventType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": \"<string>\",\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"startTimeZone\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/ClockEvent/ClockIn",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ClockEvent",
												"ClockIn"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ClockEvent/ClockOut",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jobId\": \"<integer>\",\n  \"taskId\": \"<integer>\",\n  \"eventType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": \"<string>\",\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"startTimeZone\": \"<string>\",\n  \"clockEventId\": \"<integer>\",\n  \"employeeId\": \"<integer>\",\n  \"start\": \"<dateTime>\",\n  \"timeRounding\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"employee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"job\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"task\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attestationResponses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"endTimeZone\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/ClockEvent/ClockOut",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ClockEvent",
										"ClockOut"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jobId\": \"<integer>\",\n  \"taskId\": \"<integer>\",\n  \"eventType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": \"<string>\",\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"startTimeZone\": \"<string>\",\n  \"clockEventId\": \"<integer>\",\n  \"employeeId\": \"<integer>\",\n  \"start\": \"<dateTime>\",\n  \"timeRounding\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"employee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"job\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"task\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attestationResponses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"endTimeZone\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/ClockEvent/ClockOut",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ClockEvent",
												"ClockOut"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ClockEvent/ClockSwitch",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"clockEventId\": \"<integer>\",\n  \"eventType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobId\": \"<integer>\",\n  \"notes\": \"<string>\",\n  \"taskId\": \"<integer>\",\n  \"attestationResponses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"clientTimeZone\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/ClockEvent/ClockSwitch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ClockEvent",
										"ClockSwitch"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"clockEventId\": \"<integer>\",\n  \"eventType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobId\": \"<integer>\",\n  \"notes\": \"<string>\",\n  \"taskId\": \"<integer>\",\n  \"attestationResponses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"clientTimeZone\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/ClockEvent/ClockSwitch",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ClockEvent",
												"ClockSwitch"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ClockEvent/UpdateNote/:clockEventId",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"notes\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/ClockEvent/UpdateNote/:clockEventId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ClockEvent",
										"UpdateNote",
										":clockEventId"
									],
									"variable": [
										{
											"key": "clockEventId",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"notes\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/ClockEvent/UpdateNote/:clockEventId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ClockEvent",
												"UpdateNote",
												":clockEventId"
											],
											"variable": [
												{
													"key": "clockEventId",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ClockEvent/UploadAttachment",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ClockEvent/UploadAttachment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ClockEvent",
										"UploadAttachment"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ClockEvent/UploadAttachment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ClockEvent",
												"UploadAttachment"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ClockEvent/Put",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"clockEventId\": \"<integer>\",\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"startUnrounded\": \"<dateTime>\",\n  \"endUnrounded\": \"<dateTime>\",\n  \"startTimeZone\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTimeZone\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"employeeId\": \"<integer>\",\n  \"employeeName\": \"<string>\",\n  \"employeeColor\": \"<string>\",\n  \"jobId\": \"<integer>\",\n  \"jobName\": \"<string>\",\n  \"jobColor\": \"<string>\",\n  \"taskId\": \"<integer>\",\n  \"taskName\": \"<string>\",\n  \"previousClockEventId\": \"<integer>\",\n  \"actingEmployeeId\": \"<integer>\",\n  \"actingEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": \"<string>\",\n  \"minutesBillable\": \"<integer>\",\n  \"minutes\": \"<integer>\",\n  \"eventType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"edits\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"breaks\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"locations\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"exceptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceCaptures\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceCapturesIn\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceCapturesOut\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"hasAttestationResponses\": \"<boolean>\",\n  \"attestationResponses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"start_ISO_8601\": \"<string>\",\n  \"end_ISO_8601\": \"<string>\",\n  \"approval\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"employee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"task\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"allowOverlappingTime\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/ClockEvent/Put",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ClockEvent",
										"Put"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"clockEventId\": \"<integer>\",\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"startUnrounded\": \"<dateTime>\",\n  \"endUnrounded\": \"<dateTime>\",\n  \"startTimeZone\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTimeZone\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"employeeId\": \"<integer>\",\n  \"employeeName\": \"<string>\",\n  \"employeeColor\": \"<string>\",\n  \"jobId\": \"<integer>\",\n  \"jobName\": \"<string>\",\n  \"jobColor\": \"<string>\",\n  \"taskId\": \"<integer>\",\n  \"taskName\": \"<string>\",\n  \"previousClockEventId\": \"<integer>\",\n  \"actingEmployeeId\": \"<integer>\",\n  \"actingEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": \"<string>\",\n  \"minutesBillable\": \"<integer>\",\n  \"minutes\": \"<integer>\",\n  \"eventType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"edits\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"breaks\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"locations\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"exceptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceCaptures\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceCapturesIn\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceCapturesOut\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"hasAttestationResponses\": \"<boolean>\",\n  \"attestationResponses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"start_ISO_8601\": \"<string>\",\n  \"end_ISO_8601\": \"<string>\",\n  \"approval\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"employee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"task\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"allowOverlappingTime\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/ClockEvent/Put",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ClockEvent",
												"Put"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ClockEvent/Delete/:id",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ClockEvent/Delete/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ClockEvent",
										"Delete",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ClockEvent/Delete/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ClockEvent",
												"Delete",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ClockEvent/CopyDay",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"groupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"clockEvents\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"allowEmployeeNoAccess\": \"<boolean>\",\n  \"allowJobNoAccess\": \"<boolean>\",\n  \"allowOverlappingTime\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/ClockEvent/CopyDay",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ClockEvent",
										"CopyDay"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"groupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"clockEvents\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"allowEmployeeNoAccess\": \"<boolean>\",\n  \"allowJobNoAccess\": \"<boolean>\",\n  \"allowOverlappingTime\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/ClockEvent/CopyDay",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ClockEvent",
												"CopyDay"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ClockEvent/DeleteDay",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"employeeId\": \"<integer>\",\n  \"date\": \"<dateTime>\",\n  \"clockEvents\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/ClockEvent/DeleteDay",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ClockEvent",
										"DeleteDay"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"employeeId\": \"<integer>\",\n  \"date\": \"<dateTime>\",\n  \"clockEvents\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/ClockEvent/DeleteDay",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ClockEvent",
												"DeleteDay"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ClockEvent/CheckforApprovals",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"skipValidateAndConfirm\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/ClockEvent/CheckforApprovals",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ClockEvent",
										"CheckforApprovals"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"skipValidateAndConfirm\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/ClockEvent/CheckforApprovals",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ClockEvent",
												"CheckforApprovals"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Commenting",
					"item": [
						{
							"name": "/api/Commenting/GetCommentsSkipTake",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Commenting/GetCommentsSkipTake?jobId=<integer>&skip=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Commenting",
										"GetCommentsSkipTake"
									],
									"query": [
										{
											"key": "jobId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Commenting/GetCommentsSkipTake?jobId=<integer>&skip=<integer>&take=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Commenting",
												"GetCommentsSkipTake"
											],
											"query": [
												{
													"key": "jobId",
													"value": "<integer>"
												},
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Commenting/AddComment",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"message\": \"<string>\",\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"mentionedEmployees\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Commenting/AddComment?jobId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Commenting",
										"AddComment"
									],
									"query": [
										{
											"key": "jobId",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"message\": \"<string>\",\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"mentionedEmployees\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Commenting/AddComment?jobId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Commenting",
												"AddComment"
											],
											"query": [
												{
													"key": "jobId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Commenting/EditComment",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"message\": \"<string>\",\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"mentionedEmployees\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"commentId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Commenting/EditComment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Commenting",
										"EditComment"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"message\": \"<string>\",\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"mentionedEmployees\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"commentId\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Commenting/EditComment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Commenting",
												"EditComment"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Commenting/DeleteComment",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"commentId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Commenting/DeleteComment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Commenting",
										"DeleteComment"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"commentId\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Commenting/DeleteComment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Commenting",
												"DeleteComment"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Company",
					"item": [
						{
							"name": "/api/Company/SetCompanyDetails",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"displayName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"logo\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Company/SetCompanyDetails",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Company",
										"SetCompanyDetails"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"displayName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"logo\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Company/SetCompanyDetails",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Company",
												"SetCompanyDetails"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Company/SetDisplayFormat",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"timeZone\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dateTimeFormat\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timeFormat\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"currencyType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"cultureInfoLCID\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Company/SetDisplayFormat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Company",
										"SetDisplayFormat"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"timeZone\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dateTimeFormat\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timeFormat\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"currencyType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"cultureInfoLCID\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Company/SetDisplayFormat",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Company",
												"SetDisplayFormat"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Company/SetPayrollAndOvertime",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"startDayOfWeek\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payPeriod\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payPeriodStartDate\": \"<dateTime>\",\n  \"defaultOvertimeRules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Company/SetPayrollAndOvertime",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Company",
										"SetPayrollAndOvertime"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"startDayOfWeek\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payPeriod\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payPeriodStartDate\": \"<dateTime>\",\n  \"defaultOvertimeRules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Company/SetPayrollAndOvertime",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Company",
												"SetPayrollAndOvertime"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Company/SetTimesheets",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"useApprovals\": \"<boolean>\",\n  \"autoBreakThresholdMinutes\": \"<integer>\",\n  \"autoBreakMinutes\": \"<integer>\",\n  \"timeRounding\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"defaultTimesheetShift\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"defaultTimesheetBreak\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"roundBreaks\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Company/SetTimesheets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Company",
										"SetTimesheets"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"useApprovals\": \"<boolean>\",\n  \"autoBreakThresholdMinutes\": \"<integer>\",\n  \"autoBreakMinutes\": \"<integer>\",\n  \"timeRounding\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"defaultTimesheetShift\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"defaultTimesheetBreak\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"roundBreaks\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Company/SetTimesheets",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Company",
												"SetTimesheets"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Company/SetSchedules",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"displayScheduledHours\": \"<boolean>\",\n  \"warnOnOverlappingSchedules\": \"<boolean>\",\n  \"defaultScheduleShift\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Company/SetSchedules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Company",
										"SetSchedules"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"displayScheduledHours\": \"<boolean>\",\n  \"warnOnOverlappingSchedules\": \"<boolean>\",\n  \"defaultScheduleShift\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Company/SetSchedules",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Company",
												"SetSchedules"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Company/SetTimeOff",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"useTimeOff\": \"<boolean>\",\n  \"holidays\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Company/SetTimeOff",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Company",
										"SetTimeOff"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"useTimeOff\": \"<boolean>\",\n  \"holidays\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Company/SetTimeOff",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Company",
												"SetTimeOff"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Company/SetGroups",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"enableDepartments\": \"<boolean>\",\n  \"enableLocations\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Company/SetGroups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Company",
										"SetGroups"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enableDepartments\": \"<boolean>\",\n  \"enableLocations\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Company/SetGroups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Company",
												"SetGroups"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Company/SetWorkOptions",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"stages\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Company/SetWorkOptions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Company",
										"SetWorkOptions"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"stages\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Company/SetWorkOptions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Company",
												"SetWorkOptions"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Company/SetEmails",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"summaryEmailOptIn\": \"<boolean>\",\n  \"payPeriodReminderOptIn\": \"<boolean>\",\n  \"summaryRecipients\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"payPeriodReminderRecipients\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobBudgetRecipients\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Company/SetEmails",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Company",
										"SetEmails"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"summaryEmailOptIn\": \"<boolean>\",\n  \"payPeriodReminderOptIn\": \"<boolean>\",\n  \"summaryRecipients\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"payPeriodReminderRecipients\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobBudgetRecipients\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Company/SetEmails",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Company",
												"SetEmails"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Company/Notifications",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Company/Notifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Company",
										"Notifications"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Company/Notifications",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Company",
												"Notifications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Company/TimesheetAlerts",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"companyNotificationId\": \"<integer>\",\n  \"earlyInEnabled\": \"<boolean>\",\n  \"lateInEnabled\": \"<boolean>\",\n  \"missingInEnabled\": \"<boolean>\",\n  \"earlyOutEnabled\": \"<boolean>\",\n  \"lateOutEnabled\": \"<boolean>\",\n  \"missingOutEnabled\": \"<boolean>\",\n  \"geoFenceEnabled\": \"<boolean>\",\n  \"mockLocationEnabled\": \"<boolean>\",\n  \"unrecognizedFaceEnabled\": \"<boolean>\",\n  \"dailyOverTimeAlert\": \"<boolean>\",\n  \"weeklyOverTimeAlert\": \"<boolean>\",\n  \"unscheduledTimeEnabled\": \"<boolean>\",\n  \"overlappingTimesEnabled\": \"<boolean>\",\n  \"unapprovedTimeAlert\": \"<boolean>\",\n  \"unexpectedResponseEnabled\": \"<boolean>\",\n  \"missingResponseEnabled\": \"<boolean>\",\n  \"alertedEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Company/TimesheetAlerts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Company",
										"TimesheetAlerts"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"companyNotificationId\": \"<integer>\",\n  \"earlyInEnabled\": \"<boolean>\",\n  \"lateInEnabled\": \"<boolean>\",\n  \"missingInEnabled\": \"<boolean>\",\n  \"earlyOutEnabled\": \"<boolean>\",\n  \"lateOutEnabled\": \"<boolean>\",\n  \"missingOutEnabled\": \"<boolean>\",\n  \"geoFenceEnabled\": \"<boolean>\",\n  \"mockLocationEnabled\": \"<boolean>\",\n  \"unrecognizedFaceEnabled\": \"<boolean>\",\n  \"dailyOverTimeAlert\": \"<boolean>\",\n  \"weeklyOverTimeAlert\": \"<boolean>\",\n  \"unscheduledTimeEnabled\": \"<boolean>\",\n  \"overlappingTimesEnabled\": \"<boolean>\",\n  \"unapprovedTimeAlert\": \"<boolean>\",\n  \"unexpectedResponseEnabled\": \"<boolean>\",\n  \"missingResponseEnabled\": \"<boolean>\",\n  \"alertedEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Company/TimesheetAlerts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Company",
												"TimesheetAlerts"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Company/Reminders",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"companyNotificationId\": \"<integer>\",\n  \"clockInReminder\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startBreakReminder\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endBreakReminder\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"clockOutReminder\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"scheduleReminderClockInEnabledFlags\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"scheduleReminderClockInThreshold\": \"<integer>\",\n  \"scheduleReminderClockOutEnabledFlags\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"scheduleReminderClockOutThreshold\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Company/Reminders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Company",
										"Reminders"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"companyNotificationId\": \"<integer>\",\n  \"clockInReminder\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startBreakReminder\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endBreakReminder\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"clockOutReminder\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"scheduleReminderClockInEnabledFlags\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"scheduleReminderClockInThreshold\": \"<integer>\",\n  \"scheduleReminderClockOutEnabledFlags\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"scheduleReminderClockOutThreshold\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Company/Reminders",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Company",
												"Reminders"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Company/GetReminders",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Company/GetReminders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Company",
										"GetReminders"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Company/GetReminders",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Company",
												"GetReminders"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Company/GetCurrentPayPeriod",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Company/GetCurrentPayPeriod",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Company",
										"GetCurrentPayPeriod"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Company/GetCurrentPayPeriod",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Company",
												"GetCurrentPayPeriod"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Company/GetEmployeesManagedByCS",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Company/GetEmployeesManagedByCS",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Company",
										"GetEmployeesManagedByCS"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Company/GetEmployeesManagedByCS",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Company",
												"GetEmployeesManagedByCS"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Company/GetPayPeriodsForDatepicker",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Company/GetPayPeriodsForDatepicker",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Company",
										"GetPayPeriodsForDatepicker"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Company/GetPayPeriodsForDatepicker",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Company",
												"GetPayPeriodsForDatepicker"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Company/GetNewPayPeriods",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Company/GetNewPayPeriods?startDayOfWeek=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Company",
										"GetNewPayPeriods"
									],
									"query": [
										{
											"key": "startDayOfWeek",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Company/GetNewPayPeriods?startDayOfWeek=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Company",
												"GetNewPayPeriods"
											],
											"query": [
												{
													"key": "startDayOfWeek",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Company/UpdatePostSignUpWelcome",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"workPhone\": \"<string>\",\n  \"companyName\": \"<string>\",\n  \"industry\": \"<string>\",\n  \"employeeRange\": \"<string>\",\n  \"smsPhone\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Company/UpdatePostSignUpWelcome",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Company",
										"UpdatePostSignUpWelcome"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"workPhone\": \"<string>\",\n  \"companyName\": \"<string>\",\n  \"industry\": \"<string>\",\n  \"employeeRange\": \"<string>\",\n  \"smsPhone\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Company/UpdatePostSignUpWelcome",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Company",
												"UpdatePostSignUpWelcome"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Company/UpdatePostSignCompanyInfo",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"workPhone\": \"<string>\",\n  \"companyName\": \"<string>\",\n  \"industry\": \"<string>\",\n  \"employeeRange\": \"<string>\",\n  \"smsPhone\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Company/UpdatePostSignCompanyInfo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Company",
										"UpdatePostSignCompanyInfo"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"workPhone\": \"<string>\",\n  \"companyName\": \"<string>\",\n  \"industry\": \"<string>\",\n  \"employeeRange\": \"<string>\",\n  \"smsPhone\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Company/UpdatePostSignCompanyInfo",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Company",
												"UpdatePostSignCompanyInfo"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Company/PostSignUpSendDownloadLink",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"workPhone\": \"<string>\",\n  \"companyName\": \"<string>\",\n  \"industry\": \"<string>\",\n  \"employeeRange\": \"<string>\",\n  \"smsPhone\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Company/PostSignUpSendDownloadLink",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Company",
										"PostSignUpSendDownloadLink"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"workPhone\": \"<string>\",\n  \"companyName\": \"<string>\",\n  \"industry\": \"<string>\",\n  \"employeeRange\": \"<string>\",\n  \"smsPhone\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Company/PostSignUpSendDownloadLink",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Company",
												"PostSignUpSendDownloadLink"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Company/UpdatePostSignMobileApp",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Company/UpdatePostSignMobileApp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Company",
										"UpdatePostSignMobileApp"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Company/UpdatePostSignMobileApp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Company",
												"UpdatePostSignMobileApp"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Customer",
					"item": [
						{
							"name": "/api/Customer/Get",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Customer/Get?id=<integer>&getContacts=false&getJobs=false&includeFollowingEmployeeIds=false&primaryOnly=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customer",
										"Get"
									],
									"query": [
										{
											"key": "id",
											"value": "<integer>"
										},
										{
											"key": "getContacts",
											"value": "false"
										},
										{
											"key": "getJobs",
											"value": "false"
										},
										{
											"key": "includeFollowingEmployeeIds",
											"value": "false"
										},
										{
											"key": "primaryOnly",
											"value": "true"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Customer/Get?id=<integer>&getContacts=false&getJobs=false&includeFollowingEmployeeIds=false&primaryOnly=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Customer",
												"Get"
											],
											"query": [
												{
													"key": "id",
													"value": "<integer>"
												},
												{
													"key": "getContacts",
													"value": "false"
												},
												{
													"key": "getJobs",
													"value": "false"
												},
												{
													"key": "includeFollowingEmployeeIds",
													"value": "false"
												},
												{
													"key": "primaryOnly",
													"value": "true"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Customer/List",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Customer/List?query=<string>&skip=<integer>&take=<integer>&orderBy=<string>&getContacts=false&typeFilter=<integer>&activeFilter=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customer",
										"List"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										},
										{
											"key": "orderBy",
											"value": "<string>"
										},
										{
											"key": "getContacts",
											"value": "false"
										},
										{
											"key": "typeFilter",
											"value": "<integer>"
										},
										{
											"key": "activeFilter",
											"value": "true"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Customer/List?query=<string>&skip=<integer>&take=<integer>&orderBy=<string>&getContacts=false&typeFilter=<integer>&activeFilter=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Customer",
												"List"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>"
												},
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												},
												{
													"key": "orderBy",
													"value": "<string>"
												},
												{
													"key": "getContacts",
													"value": "false"
												},
												{
													"key": "typeFilter",
													"value": "<integer>"
												},
												{
													"key": "activeFilter",
													"value": "true"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Customer/HasAny",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Customer/HasAny",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customer",
										"HasAny"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Customer/HasAny",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Customer",
												"HasAny"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Customer/GetContacts",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Customer/GetContacts?customerId=<integer>&query=<string>&skip=<integer>&take=<integer>&orderBy=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customer",
										"GetContacts"
									],
									"query": [
										{
											"key": "customerId",
											"value": "<integer>"
										},
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										},
										{
											"key": "orderBy",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Customer/GetContacts?customerId=<integer>&query=<string>&skip=<integer>&take=<integer>&orderBy=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Customer",
												"GetContacts"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>"
												},
												{
													"key": "query",
													"value": "<string>"
												},
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												},
												{
													"key": "orderBy",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Customer/HasAnyContacts",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Customer/HasAnyContacts?customerId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customer",
										"HasAnyContacts"
									],
									"query": [
										{
											"key": "customerId",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Customer/HasAnyContacts?customerId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Customer",
												"HasAnyContacts"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Customer/GetAttachments",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Customer/GetAttachments?customerId=<integer>&query=<string>&skip=<integer>&take=<integer>&orderBy=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customer",
										"GetAttachments"
									],
									"query": [
										{
											"key": "customerId",
											"value": "<integer>"
										},
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										},
										{
											"key": "orderBy",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Customer/GetAttachments?customerId=<integer>&query=<string>&skip=<integer>&take=<integer>&orderBy=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Customer",
												"GetAttachments"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>"
												},
												{
													"key": "query",
													"value": "<string>"
												},
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												},
												{
													"key": "orderBy",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Customer/AddAttachment",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customerId\": \"<integer>\",\n  \"attachmentId\": \"<uuid>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customer/AddAttachment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customer",
										"AddAttachment"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customerId\": \"<integer>\",\n  \"attachmentId\": \"<uuid>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Customer/AddAttachment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Customer",
												"AddAttachment"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Customer/DeleteAttachment",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customerId\": \"<integer>\",\n  \"attachmentId\": \"<uuid>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customer/DeleteAttachment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customer",
										"DeleteAttachment"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customerId\": \"<integer>\",\n  \"attachmentId\": \"<uuid>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Customer/DeleteAttachment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Customer",
												"DeleteAttachment"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Customer/BulkDeleteAttachments",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customerId\": \"<integer>\",\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customer/BulkDeleteAttachments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customer",
										"BulkDeleteAttachments"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customerId\": \"<integer>\",\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Customer/BulkDeleteAttachments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Customer",
												"BulkDeleteAttachments"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Customer/UpsertCustomerContact",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customerId\": \"<integer>\",\n  \"customerContactId\": \"<integer>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"role\": \"<string>\",\n  \"phones\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"email\": \"<string>\",\n  \"notes\": \"<string>\",\n  \"isPrimary\": \"<boolean>\",\n  \"displayName\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customer/UpsertCustomerContact",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customer",
										"UpsertCustomerContact"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customerId\": \"<integer>\",\n  \"customerContactId\": \"<integer>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"role\": \"<string>\",\n  \"phones\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"email\": \"<string>\",\n  \"notes\": \"<string>\",\n  \"isPrimary\": \"<boolean>\",\n  \"displayName\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Customer/UpsertCustomerContact",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Customer",
												"UpsertCustomerContact"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Customer/DeleteContact",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customerId\": \"<integer>\",\n  \"customerContactId\": \"<integer>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"role\": \"<string>\",\n  \"phones\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"email\": \"<string>\",\n  \"notes\": \"<string>\",\n  \"isPrimary\": \"<boolean>\",\n  \"displayName\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customer/DeleteContact",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customer",
										"DeleteContact"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customerId\": \"<integer>\",\n  \"customerContactId\": \"<integer>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"role\": \"<string>\",\n  \"phones\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"email\": \"<string>\",\n  \"notes\": \"<string>\",\n  \"isPrimary\": \"<boolean>\",\n  \"displayName\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Customer/DeleteContact",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Customer",
												"DeleteContact"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Customer/BulkDeleteContacts",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"statusActive\": \"<boolean>\",\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\",\n  \"customerId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customer/BulkDeleteContacts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customer",
										"BulkDeleteContacts"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"statusActive\": \"<boolean>\",\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\",\n  \"customerId\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Customer/BulkDeleteContacts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Customer",
												"BulkDeleteContacts"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Customer/BulkCopyContacts",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"statusActive\": \"<boolean>\",\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\",\n  \"customerId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customer/BulkCopyContacts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customer",
										"BulkCopyContacts"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"statusActive\": \"<boolean>\",\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\",\n  \"customerId\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Customer/BulkCopyContacts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Customer",
												"BulkCopyContacts"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Customer/BulkUpdateCustomers",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"statusActive\": \"<boolean>\",\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customer/BulkUpdateCustomers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customer",
										"BulkUpdateCustomers"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"statusActive\": \"<boolean>\",\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Customer/BulkUpdateCustomers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Customer",
												"BulkUpdateCustomers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Customer/BulkDeleteCustomer",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"statusActive\": \"<boolean>\",\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customer/BulkDeleteCustomer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customer",
										"BulkDeleteCustomer"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"statusActive\": \"<boolean>\",\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Customer/BulkDeleteCustomer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Customer",
												"BulkDeleteCustomer"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Customer/DeleteCustomer",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customerId\": \"<integer>\",\n  \"type\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"businessName\": \"<string>\",\n  \"street\": \"<string>\",\n  \"city\": \"<string>\",\n  \"stateProv\": \"<string>\",\n  \"country\": \"<string>\",\n  \"postalCode\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"website\": \"<string>\",\n  \"notes\": \"<string>\",\n  \"displayName\": \"<string>\",\n  \"activeJobsCount\": \"<integer>\",\n  \"isActive\": \"<boolean>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"individualContact\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"contacts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobs\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"isCurrentEmpFollowing\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customer/DeleteCustomer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customer",
										"DeleteCustomer"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customerId\": \"<integer>\",\n  \"type\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"businessName\": \"<string>\",\n  \"street\": \"<string>\",\n  \"city\": \"<string>\",\n  \"stateProv\": \"<string>\",\n  \"country\": \"<string>\",\n  \"postalCode\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"website\": \"<string>\",\n  \"notes\": \"<string>\",\n  \"displayName\": \"<string>\",\n  \"activeJobsCount\": \"<integer>\",\n  \"isActive\": \"<boolean>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"individualContact\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"contacts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobs\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"isCurrentEmpFollowing\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Customer/DeleteCustomer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Customer",
												"DeleteCustomer"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Customer/AddCustomer",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customerId\": \"<integer>\",\n  \"type\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"businessName\": \"<string>\",\n  \"street\": \"<string>\",\n  \"city\": \"<string>\",\n  \"stateProv\": \"<string>\",\n  \"country\": \"<string>\",\n  \"postalCode\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"website\": \"<string>\",\n  \"notes\": \"<string>\",\n  \"displayName\": \"<string>\",\n  \"activeJobsCount\": \"<integer>\",\n  \"isActive\": \"<boolean>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"individualContact\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"contacts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobs\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"isCurrentEmpFollowing\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customer/AddCustomer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customer",
										"AddCustomer"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customerId\": \"<integer>\",\n  \"type\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"businessName\": \"<string>\",\n  \"street\": \"<string>\",\n  \"city\": \"<string>\",\n  \"stateProv\": \"<string>\",\n  \"country\": \"<string>\",\n  \"postalCode\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"website\": \"<string>\",\n  \"notes\": \"<string>\",\n  \"displayName\": \"<string>\",\n  \"activeJobsCount\": \"<integer>\",\n  \"isActive\": \"<boolean>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"individualContact\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"contacts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobs\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"isCurrentEmpFollowing\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Customer/AddCustomer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Customer",
												"AddCustomer"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Customer/UpdateCustomer",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customerId\": \"<integer>\",\n  \"type\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"businessName\": \"<string>\",\n  \"street\": \"<string>\",\n  \"city\": \"<string>\",\n  \"stateProv\": \"<string>\",\n  \"country\": \"<string>\",\n  \"postalCode\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"website\": \"<string>\",\n  \"notes\": \"<string>\",\n  \"displayName\": \"<string>\",\n  \"activeJobsCount\": \"<integer>\",\n  \"isActive\": \"<boolean>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"individualContact\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"contacts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobs\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"isCurrentEmpFollowing\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customer/UpdateCustomer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customer",
										"UpdateCustomer"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customerId\": \"<integer>\",\n  \"type\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"businessName\": \"<string>\",\n  \"street\": \"<string>\",\n  \"city\": \"<string>\",\n  \"stateProv\": \"<string>\",\n  \"country\": \"<string>\",\n  \"postalCode\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"website\": \"<string>\",\n  \"notes\": \"<string>\",\n  \"displayName\": \"<string>\",\n  \"activeJobsCount\": \"<integer>\",\n  \"isActive\": \"<boolean>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"individualContact\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"contacts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobs\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"isCurrentEmpFollowing\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Customer/UpdateCustomer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Customer",
												"UpdateCustomer"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Customer/FollowUnfollow",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customerId\": \"<integer>\",\n  \"follow\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customer/FollowUnfollow",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customer",
										"FollowUnfollow"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customerId\": \"<integer>\",\n  \"follow\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Customer/FollowUnfollow",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Customer",
												"FollowUnfollow"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Dashboard",
					"item": [
						{
							"name": "/api/Dashboard/GetClockEventsInProgress",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Dashboard/GetClockEventsInProgress",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Dashboard",
										"GetClockEventsInProgress"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Dashboard/GetClockEventsInProgress",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Dashboard",
												"GetClockEventsInProgress"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Dashboard/ClockOut",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"clockEventId\": \"<integer>\",\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"startUnrounded\": \"<dateTime>\",\n  \"endUnrounded\": \"<dateTime>\",\n  \"startTimeZone\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTimeZone\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"employeeId\": \"<integer>\",\n  \"employeeName\": \"<string>\",\n  \"employeeColor\": \"<string>\",\n  \"jobId\": \"<integer>\",\n  \"jobName\": \"<string>\",\n  \"jobColor\": \"<string>\",\n  \"taskId\": \"<integer>\",\n  \"taskName\": \"<string>\",\n  \"previousClockEventId\": \"<integer>\",\n  \"actingEmployeeId\": \"<integer>\",\n  \"actingEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": \"<string>\",\n  \"minutesBillable\": \"<integer>\",\n  \"minutes\": \"<integer>\",\n  \"eventType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"edits\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"breaks\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"locations\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"exceptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceCaptures\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceCapturesIn\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceCapturesOut\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"hasAttestationResponses\": \"<boolean>\",\n  \"attestationResponses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"start_ISO_8601\": \"<string>\",\n  \"end_ISO_8601\": \"<string>\",\n  \"approval\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"employee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"task\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"allowOverlappingTime\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Dashboard/ClockOut",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Dashboard",
										"ClockOut"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"clockEventId\": \"<integer>\",\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"startUnrounded\": \"<dateTime>\",\n  \"endUnrounded\": \"<dateTime>\",\n  \"startTimeZone\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTimeZone\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"employeeId\": \"<integer>\",\n  \"employeeName\": \"<string>\",\n  \"employeeColor\": \"<string>\",\n  \"jobId\": \"<integer>\",\n  \"jobName\": \"<string>\",\n  \"jobColor\": \"<string>\",\n  \"taskId\": \"<integer>\",\n  \"taskName\": \"<string>\",\n  \"previousClockEventId\": \"<integer>\",\n  \"actingEmployeeId\": \"<integer>\",\n  \"actingEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": \"<string>\",\n  \"minutesBillable\": \"<integer>\",\n  \"minutes\": \"<integer>\",\n  \"eventType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"edits\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"breaks\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"locations\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"exceptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceCaptures\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceCapturesIn\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceCapturesOut\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"hasAttestationResponses\": \"<boolean>\",\n  \"attestationResponses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"start_ISO_8601\": \"<string>\",\n  \"end_ISO_8601\": \"<string>\",\n  \"approval\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"employee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"task\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"allowOverlappingTime\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Dashboard/ClockOut",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Dashboard",
												"ClockOut"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "DataImport",
					"item": [
						{
							"name": "/api/DataImport/Process",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/DataImport/Process",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"DataImport",
										"Process"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/DataImport/Process",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"DataImport",
												"Process"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/DataImport/GetHeadersByType",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/DataImport/GetHeadersByType",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"DataImport",
										"GetHeadersByType"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/DataImport/GetHeadersByType",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"DataImport",
												"GetHeadersByType"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/DataImport/SendEmployeesSetUpNotifications",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  \"<integer>\",\n  \"<integer>\"\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/DataImport/SendEmployeesSetUpNotifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"DataImport",
										"SendEmployeesSetUpNotifications"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<integer>\",\n  \"<integer>\"\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/DataImport/SendEmployeesSetUpNotifications",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"DataImport",
												"SendEmployeesSetUpNotifications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/DataImport/PostEmployees",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": \"<string>\",\n  \"company\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"type\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/DataImport/PostEmployees",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"DataImport",
										"PostEmployees"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": \"<string>\",\n  \"company\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"type\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/DataImport/PostEmployees",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"DataImport",
												"PostEmployees"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/DataImport/PostJobs",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": \"<string>\",\n  \"company\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"type\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/DataImport/PostJobs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"DataImport",
										"PostJobs"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": \"<string>\",\n  \"company\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"type\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/DataImport/PostJobs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"DataImport",
												"PostJobs"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/DataImport/PostTasks",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": \"<string>\",\n  \"company\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"type\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/DataImport/PostTasks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"DataImport",
										"PostTasks"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": \"<string>\",\n  \"company\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"type\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/DataImport/PostTasks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"DataImport",
												"PostTasks"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/DataImport/Validate",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": \"<string>\",\n  \"company\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"type\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/DataImport/Validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"DataImport",
										"Validate"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": \"<string>\",\n  \"company\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"type\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/DataImport/Validate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"DataImport",
												"Validate"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "EmailTemplateTest",
					"item": [
						{
							"name": "/api/EmailTemplateTest/ValidationEmailTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/ValidationEmailTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"ValidationEmailTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/ValidationEmailTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"ValidationEmailTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/AttestationUnexpectedResponseEmailTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/AttestationUnexpectedResponseEmailTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"AttestationUnexpectedResponseEmailTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/AttestationUnexpectedResponseEmailTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"AttestationUnexpectedResponseEmailTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/SendDailyTaggedCommentNotificationsEmailTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/SendDailyTaggedCommentNotificationsEmailTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"SendDailyTaggedCommentNotificationsEmailTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/SendDailyTaggedCommentNotificationsEmailTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"SendDailyTaggedCommentNotificationsEmailTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/SendSendBudgetAlertEmailTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/SendSendBudgetAlertEmailTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"SendSendBudgetAlertEmailTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/SendSendBudgetAlertEmailTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"SendSendBudgetAlertEmailTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/SendChangedPasswordEmailTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/SendChangedPasswordEmailTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"SendChangedPasswordEmailTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/SendChangedPasswordEmailTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"SendChangedPasswordEmailTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/ClockOutQuestionMissingResponseEmailTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/ClockOutQuestionMissingResponseEmailTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"ClockOutQuestionMissingResponseEmailTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/ClockOutQuestionMissingResponseEmailTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"ClockOutQuestionMissingResponseEmailTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/SendCustomerFollowedCommentNotificationsEmailTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/SendCustomerFollowedCommentNotificationsEmailTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"SendCustomerFollowedCommentNotificationsEmailTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/SendCustomerFollowedCommentNotificationsEmailTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"SendCustomerFollowedCommentNotificationsEmailTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/SendJobFollowedCommentNotificationsEmailTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/SendJobFollowedCommentNotificationsEmailTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"SendJobFollowedCommentNotificationsEmailTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/SendJobFollowedCommentNotificationsEmailTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"SendJobFollowedCommentNotificationsEmailTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/SendTaggedCommentNotificationsEmailTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/SendTaggedCommentNotificationsEmailTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"SendTaggedCommentNotificationsEmailTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/SendTaggedCommentNotificationsEmailTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"SendTaggedCommentNotificationsEmailTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/SendDailyFollowedCustomerCommentNotificationsEmailTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/SendDailyFollowedCustomerCommentNotificationsEmailTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"SendDailyFollowedCustomerCommentNotificationsEmailTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/SendDailyFollowedCustomerCommentNotificationsEmailTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"SendDailyFollowedCustomerCommentNotificationsEmailTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/SendDailyFollowedJobCommentNotificationsEmailTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/SendDailyFollowedJobCommentNotificationsEmailTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"SendDailyFollowedJobCommentNotificationsEmailTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/SendDailyFollowedJobCommentNotificationsEmailTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"SendDailyFollowedJobCommentNotificationsEmailTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/SendDailyFollowedTaggedCommentNotificationsEmailTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/SendDailyFollowedTaggedCommentNotificationsEmailTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"SendDailyFollowedTaggedCommentNotificationsEmailTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/SendDailyFollowedTaggedCommentNotificationsEmailTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"SendDailyFollowedTaggedCommentNotificationsEmailTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/EarlyOrLateEmailTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/EarlyOrLateEmailTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"EarlyOrLateEmailTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/EarlyOrLateEmailTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"EarlyOrLateEmailTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/OutOfBoundsTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/OutOfBoundsTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"OutOfBoundsTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/OutOfBoundsTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"OutOfBoundsTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/MockLocationTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/MockLocationTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"MockLocationTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/MockLocationTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"MockLocationTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/UnrecognizedFaceTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/UnrecognizedFaceTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"UnrecognizedFaceTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/UnrecognizedFaceTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"UnrecognizedFaceTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/ScheduleNotificationTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/ScheduleNotificationTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"ScheduleNotificationTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/ScheduleNotificationTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"ScheduleNotificationTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/ScheduleUpdatedTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/ScheduleUpdatedTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"ScheduleUpdatedTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/ScheduleUpdatedTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"ScheduleUpdatedTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/MissingInOutTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/MissingInOutTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"MissingInOutTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/MissingInOutTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"MissingInOutTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/UnapprovedOverlappingTimeTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/UnapprovedOverlappingTimeTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"UnapprovedOverlappingTimeTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/UnapprovedOverlappingTimeTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"UnapprovedOverlappingTimeTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/TimeOffApprovedTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/TimeOffApprovedTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"TimeOffApprovedTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/TimeOffApprovedTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"TimeOffApprovedTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/SendTimeOffCancellationEmailTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/SendTimeOffCancellationEmailTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"SendTimeOffCancellationEmailTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/SendTimeOffCancellationEmailTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"SendTimeOffCancellationEmailTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/SendTimeOffDeclinedEmailTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/SendTimeOffDeclinedEmailTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"SendTimeOffDeclinedEmailTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/SendTimeOffDeclinedEmailTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"SendTimeOffDeclinedEmailTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/SendTimeOffPendingTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/SendTimeOffPendingTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"SendTimeOffPendingTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/SendTimeOffPendingTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"SendTimeOffPendingTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/TimeOffRequestedTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/TimeOffRequestedTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"TimeOffRequestedTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/TimeOffRequestedTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"TimeOffRequestedTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/TimeOffUpcomingTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/TimeOffUpcomingTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"TimeOffUpcomingTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/TimeOffUpcomingTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"TimeOffUpcomingTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/InvoicePaymentSucceededEmailTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/InvoicePaymentSucceededEmailTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"InvoicePaymentSucceededEmailTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/InvoicePaymentSucceededEmailTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"InvoicePaymentSucceededEmailTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/InvoicePastDueTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/InvoicePastDueTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"InvoicePastDueTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/InvoicePastDueTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"InvoicePastDueTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/QuoteApprovedTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/QuoteApprovedTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"QuoteApprovedTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/QuoteApprovedTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"QuoteApprovedTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/QuoteChangesRequestedTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/QuoteChangesRequestedTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"QuoteChangesRequestedTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/QuoteChangesRequestedTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"QuoteChangesRequestedTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/SendQuoteInvoiceTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/SendQuoteInvoiceTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"SendQuoteInvoiceTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/SendQuoteInvoiceTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"SendQuoteInvoiceTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/SendQIPSummaryTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/SendQIPSummaryTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"SendQIPSummaryTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/SendQIPSummaryTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"SendQIPSummaryTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/EmployeeOvertimeTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/EmployeeOvertimeTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"EmployeeOvertimeTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/EmployeeOvertimeTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"EmployeeOvertimeTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/WeeklySummaryTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/WeeklySummaryTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"WeeklySummaryTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/WeeklySummaryTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"WeeklySummaryTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/ForogtPassTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/ForogtPassTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"ForogtPassTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/ForogtPassTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"ForogtPassTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/SendLifeTimeCSVReportTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/SendLifeTimeCSVReportTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"SendLifeTimeCSVReportTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/SendLifeTimeCSVReportTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"SendLifeTimeCSVReportTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/SendAuthenticationLinkTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/SendAuthenticationLinkTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"SendAuthenticationLinkTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/SendAuthenticationLinkTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"SendAuthenticationLinkTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/NewEmployeeTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/NewEmployeeTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"NewEmployeeTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/NewEmployeeTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"NewEmployeeTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/PayPeriodReminderTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/PayPeriodReminderTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"PayPeriodReminderTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/PayPeriodReminderTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"PayPeriodReminderTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/SelfServeTrialEndUpgradeReminderEmailTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/SelfServeTrialEndUpgradeReminderEmailTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"SelfServeTrialEndUpgradeReminderEmailTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/SelfServeTrialEndUpgradeReminderEmailTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"SelfServeTrialEndUpgradeReminderEmailTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/UnscheduledTimeTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/UnscheduledTimeTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"UnscheduledTimeTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/UnscheduledTimeTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"UnscheduledTimeTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/TimesheetSummaryTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/TimesheetSummaryTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"TimesheetSummaryTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/TimesheetSummaryTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"TimesheetSummaryTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/InvoicePaidTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/InvoicePaidTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"InvoicePaidTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/InvoicePaidTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"InvoicePaidTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/ReferralTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/ReferralTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"ReferralTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/ReferralTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"ReferralTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/OverlappingTimeTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/OverlappingTimeTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"OverlappingTimeTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/OverlappingTimeTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"OverlappingTimeTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/EmailTemplateTest/MissingOutEmailTest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/EmailTemplateTest/MissingOutEmailTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmailTemplateTest",
										"MissingOutEmailTest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/EmailTemplateTest/MissingOutEmailTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmailTemplateTest",
												"MissingOutEmailTest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Employee",
					"item": [
						{
							"name": "Get",
							"item": [
								{
									"name": "/api/Employee/Get",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Employee/Get",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Employee",
												"Get"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Employee/Get",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Employee",
														"Get"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "/api/Employee/Get/:id",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Employee/Get/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Employee",
												"Get",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Employee/Get/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Employee",
														"Get",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "/api/Employee/GetIdentity/:id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Employee/GetIdentity/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"GetIdentity",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Employee/GetIdentity/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Employee",
												"GetIdentity",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Employee/GetForEmployee",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Employee/GetForEmployee",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"GetForEmployee"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Employee/GetForEmployee",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Employee",
												"GetForEmployee"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Employee/Search",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Employee/Search?searchCriteria=<string>&sortDirection=<string>&sortColumn=<string>&skip=<integer>&take=<integer>&statusFilter=<integer>&locationIds[]=<integer>&locationIds[]=<integer>&departmentIds[]=<integer>&departmentIds[]=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"Search"
									],
									"query": [
										{
											"key": "searchCriteria",
											"value": "<string>"
										},
										{
											"key": "sortDirection",
											"value": "<string>"
										},
										{
											"key": "sortColumn",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										},
										{
											"key": "statusFilter",
											"value": "<integer>"
										},
										{
											"key": "locationIds[]",
											"value": "<integer>"
										},
										{
											"key": "locationIds[]",
											"value": "<integer>"
										},
										{
											"key": "departmentIds[]",
											"value": "<integer>"
										},
										{
											"key": "departmentIds[]",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Employee/Search?searchCriteria=<string>&sortDirection=<string>&sortColumn=<string>&skip=<integer>&take=<integer>&statusFilter=<integer>&locationIds[]=<integer>&locationIds[]=<integer>&departmentIds[]=<integer>&departmentIds[]=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Employee",
												"Search"
											],
											"query": [
												{
													"key": "searchCriteria",
													"value": "<string>"
												},
												{
													"key": "sortDirection",
													"value": "<string>"
												},
												{
													"key": "sortColumn",
													"value": "<string>"
												},
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												},
												{
													"key": "statusFilter",
													"value": "<integer>"
												},
												{
													"key": "locationIds[]",
													"value": "<integer>"
												},
												{
													"key": "locationIds[]",
													"value": "<integer>"
												},
												{
													"key": "departmentIds[]",
													"value": "<integer>"
												},
												{
													"key": "departmentIds[]",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Employee/GetActive",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Employee/GetActive",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"GetActive"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Employee/GetActive",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Employee",
												"GetActive"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Employee/GetActiveForEmployee",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Employee/GetActiveForEmployee",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"GetActiveForEmployee"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Employee/GetActiveForEmployee",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Employee",
												"GetActiveForEmployee"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Employee/GetActiveForCommenting",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Employee/GetActiveForCommenting?jobId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"GetActiveForCommenting"
									],
									"query": [
										{
											"key": "jobId",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Employee/GetActiveForCommenting?jobId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Employee",
												"GetActiveForCommenting"
											],
											"query": [
												{
													"key": "jobId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Employee/GetRecentJobs",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Employee/GetRecentJobs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"GetRecentJobs"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Employee/GetRecentJobs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Employee",
												"GetRecentJobs"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Employee/GetQBEmployee",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Employee/GetQBEmployee?employeeId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"GetQBEmployee"
									],
									"query": [
										{
											"key": "employeeId",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Employee/GetQBEmployee?employeeId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Employee",
												"GetQBEmployee"
											],
											"query": [
												{
													"key": "employeeId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Employee/Post",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"employeeId\": \"<integer>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"sendSetupEmail\": \"<boolean>\",\n  \"password\": \"<string>\",\n  \"color\": \"<string>\",\n  \"role\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"basePayRate\": \"<double>\",\n  \"employeeDisplayId\": \"<string>\",\n  \"passwordNew\": \"<string>\",\n  \"kioskPin\": \"<string>\",\n  \"isActive\": \"<boolean>\",\n  \"creationDate\": \"<dateTime>\",\n  \"permissions\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"groupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"overtimePolicyId\": \"<integer>\",\n  \"phone\": \"<string>\",\n  \"sendSetupSms\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Employee/Post",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"Post"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"employeeId\": \"<integer>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"sendSetupEmail\": \"<boolean>\",\n  \"password\": \"<string>\",\n  \"color\": \"<string>\",\n  \"role\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"basePayRate\": \"<double>\",\n  \"employeeDisplayId\": \"<string>\",\n  \"passwordNew\": \"<string>\",\n  \"kioskPin\": \"<string>\",\n  \"isActive\": \"<boolean>\",\n  \"creationDate\": \"<dateTime>\",\n  \"permissions\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"groupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"overtimePolicyId\": \"<integer>\",\n  \"phone\": \"<string>\",\n  \"sendSetupSms\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Employee/Post",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Employee",
												"Post"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Employee/EmailExists",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<string>",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Employee/EmailExists",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"EmailExists"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "<string>",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Employee/EmailExists",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Employee",
												"EmailExists"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Employee/UpdateColor",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"employeeId\": \"<integer>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"sendSetupEmail\": \"<boolean>\",\n  \"password\": \"<string>\",\n  \"color\": \"<string>\",\n  \"role\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"basePayRate\": \"<double>\",\n  \"employeeDisplayId\": \"<string>\",\n  \"passwordNew\": \"<string>\",\n  \"kioskPin\": \"<string>\",\n  \"isActive\": \"<boolean>\",\n  \"creationDate\": \"<dateTime>\",\n  \"permissions\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"groupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"overtimePolicyId\": \"<integer>\",\n  \"phone\": \"<string>\",\n  \"sendSetupSms\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Employee/UpdateColor",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"UpdateColor"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"employeeId\": \"<integer>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"sendSetupEmail\": \"<boolean>\",\n  \"password\": \"<string>\",\n  \"color\": \"<string>\",\n  \"role\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"basePayRate\": \"<double>\",\n  \"employeeDisplayId\": \"<string>\",\n  \"passwordNew\": \"<string>\",\n  \"kioskPin\": \"<string>\",\n  \"isActive\": \"<boolean>\",\n  \"creationDate\": \"<dateTime>\",\n  \"permissions\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"groupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"overtimePolicyId\": \"<integer>\",\n  \"phone\": \"<string>\",\n  \"sendSetupSms\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Employee/UpdateColor",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Employee",
												"UpdateColor"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Employee/ChangePassword",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"employeeId\": \"<integer>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"sendSetupEmail\": \"<boolean>\",\n  \"password\": \"<string>\",\n  \"color\": \"<string>\",\n  \"role\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"basePayRate\": \"<double>\",\n  \"employeeDisplayId\": \"<string>\",\n  \"passwordNew\": \"<string>\",\n  \"kioskPin\": \"<string>\",\n  \"isActive\": \"<boolean>\",\n  \"creationDate\": \"<dateTime>\",\n  \"permissions\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"groupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"overtimePolicyId\": \"<integer>\",\n  \"phone\": \"<string>\",\n  \"sendSetupSms\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Employee/ChangePassword",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"ChangePassword"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"employeeId\": \"<integer>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"sendSetupEmail\": \"<boolean>\",\n  \"password\": \"<string>\",\n  \"color\": \"<string>\",\n  \"role\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"basePayRate\": \"<double>\",\n  \"employeeDisplayId\": \"<string>\",\n  \"passwordNew\": \"<string>\",\n  \"kioskPin\": \"<string>\",\n  \"isActive\": \"<boolean>\",\n  \"creationDate\": \"<dateTime>\",\n  \"permissions\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"groupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"overtimePolicyId\": \"<integer>\",\n  \"phone\": \"<string>\",\n  \"sendSetupSms\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Employee/ChangePassword",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Employee",
												"ChangePassword"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Employee/SaveEmailNotificationSettings",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"followedOption\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"taggedOption\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"qiStatusChangeOption\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timesheetAlertsEmailOption\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timeOffAlertsEmailEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"timeOffAlertsEmailGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"timeOffAlertsEmailRestrictionType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timesheetAlertsEmailEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"timesheetAlertsEmailGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"timesheetAlertsEmailRestrictionType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timesheetAlertsEmailFlags\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Employee/SaveEmailNotificationSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"SaveEmailNotificationSettings"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"followedOption\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"taggedOption\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"qiStatusChangeOption\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timesheetAlertsEmailOption\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timeOffAlertsEmailEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"timeOffAlertsEmailGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"timeOffAlertsEmailRestrictionType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timesheetAlertsEmailEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"timesheetAlertsEmailGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"timesheetAlertsEmailRestrictionType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timesheetAlertsEmailFlags\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Employee/SaveEmailNotificationSettings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Employee",
												"SaveEmailNotificationSettings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Employee/SaveNotificationSettings",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"notificationFlags\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timeOffAlertsEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"timeOffAlertsGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"timeOffAlertsRestrictionType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timesheetAlertsEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"timesheetAlertsGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"timesheetAlertsRestrictionType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Employee/SaveNotificationSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"SaveNotificationSettings"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"notificationFlags\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timeOffAlertsEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"timeOffAlertsGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"timeOffAlertsRestrictionType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timesheetAlertsEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"timesheetAlertsGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"timesheetAlertsRestrictionType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Employee/SaveNotificationSettings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Employee",
												"SaveNotificationSettings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Employee/SaveDisplayFormat",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"timeZone\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dateTimeFormat\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timeFormat\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"currencyType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"cultureInfoLCID\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Employee/SaveDisplayFormat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"SaveDisplayFormat"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"timeZone\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dateTimeFormat\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timeFormat\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"currencyType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"cultureInfoLCID\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Employee/SaveDisplayFormat",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Employee",
												"SaveDisplayFormat"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Employee/Put",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"employeeId\": \"<integer>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"sendSetupEmail\": \"<boolean>\",\n  \"password\": \"<string>\",\n  \"color\": \"<string>\",\n  \"role\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"basePayRate\": \"<double>\",\n  \"employeeDisplayId\": \"<string>\",\n  \"passwordNew\": \"<string>\",\n  \"kioskPin\": \"<string>\",\n  \"isActive\": \"<boolean>\",\n  \"creationDate\": \"<dateTime>\",\n  \"permissions\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"groupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"overtimePolicyId\": \"<integer>\",\n  \"phone\": \"<string>\",\n  \"sendSetupSms\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Employee/Put",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"Put"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"employeeId\": \"<integer>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"sendSetupEmail\": \"<boolean>\",\n  \"password\": \"<string>\",\n  \"color\": \"<string>\",\n  \"role\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"basePayRate\": \"<double>\",\n  \"employeeDisplayId\": \"<string>\",\n  \"passwordNew\": \"<string>\",\n  \"kioskPin\": \"<string>\",\n  \"isActive\": \"<boolean>\",\n  \"creationDate\": \"<dateTime>\",\n  \"permissions\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"groupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"overtimePolicyId\": \"<integer>\",\n  \"phone\": \"<string>\",\n  \"sendSetupSms\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Employee/Put",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Employee",
												"Put"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Employee/UpdateIsActive",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"employeeId\": \"<integer>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"sendSetupEmail\": \"<boolean>\",\n  \"password\": \"<string>\",\n  \"color\": \"<string>\",\n  \"role\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"basePayRate\": \"<double>\",\n  \"employeeDisplayId\": \"<string>\",\n  \"passwordNew\": \"<string>\",\n  \"kioskPin\": \"<string>\",\n  \"isActive\": \"<boolean>\",\n  \"creationDate\": \"<dateTime>\",\n  \"permissions\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"groupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"overtimePolicyId\": \"<integer>\",\n  \"phone\": \"<string>\",\n  \"sendSetupSms\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Employee/UpdateIsActive",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"UpdateIsActive"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"employeeId\": \"<integer>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"sendSetupEmail\": \"<boolean>\",\n  \"password\": \"<string>\",\n  \"color\": \"<string>\",\n  \"role\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"basePayRate\": \"<double>\",\n  \"employeeDisplayId\": \"<string>\",\n  \"passwordNew\": \"<string>\",\n  \"kioskPin\": \"<string>\",\n  \"isActive\": \"<boolean>\",\n  \"creationDate\": \"<dateTime>\",\n  \"permissions\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"groupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"overtimePolicyId\": \"<integer>\",\n  \"phone\": \"<string>\",\n  \"sendSetupSms\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Employee/UpdateIsActive",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Employee",
												"UpdateIsActive"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Employee/ValidateEmployeeDelete",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"statusActive\": \"<boolean>\",\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Employee/ValidateEmployeeDelete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"ValidateEmployeeDelete"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"statusActive\": \"<boolean>\",\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Employee/ValidateEmployeeDelete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Employee",
												"ValidateEmployeeDelete"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Employee/BulkUpdateEmployees",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"statusActive\": \"<boolean>\",\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Employee/BulkUpdateEmployees",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"BulkUpdateEmployees"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"statusActive\": \"<boolean>\",\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Employee/BulkUpdateEmployees",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Employee",
												"BulkUpdateEmployees"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Employee/Delete/:id",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Employee/Delete/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"Delete",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Employee/Delete/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Employee",
												"Delete",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Employee/SendEmployeeInvitation",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fullName\": \"<string>\",\n  \"nameAndNumber\": \"<string>\",\n  \"lastAndFirstName\": \"<string>\",\n  \"lastAndFirstNameAndNumber\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"initial\": \"<string>\",\n  \"employeeId\": \"<integer>\",\n  \"employeeDisplayId\": \"<string>\",\n  \"companyId\": \"<integer>\",\n  \"creationDate\": \"<dateTime>\",\n  \"lastLoginDate\": \"<dateTime>\",\n  \"email\": \"<string>\",\n  \"role\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"basePayRate\": \"<double>\",\n  \"color\": \"<string>\",\n  \"isActive\": \"<boolean>\",\n  \"permissions\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"deletedDate\": \"<dateTime>\",\n  \"overtimePolicyId\": \"<integer>\",\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"phone\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Employee/SendEmployeeInvitation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"SendEmployeeInvitation"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"fullName\": \"<string>\",\n  \"nameAndNumber\": \"<string>\",\n  \"lastAndFirstName\": \"<string>\",\n  \"lastAndFirstNameAndNumber\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"initial\": \"<string>\",\n  \"employeeId\": \"<integer>\",\n  \"employeeDisplayId\": \"<string>\",\n  \"companyId\": \"<integer>\",\n  \"creationDate\": \"<dateTime>\",\n  \"lastLoginDate\": \"<dateTime>\",\n  \"email\": \"<string>\",\n  \"role\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"basePayRate\": \"<double>\",\n  \"color\": \"<string>\",\n  \"isActive\": \"<boolean>\",\n  \"permissions\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"deletedDate\": \"<dateTime>\",\n  \"overtimePolicyId\": \"<integer>\",\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"phone\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Employee/SendEmployeeInvitation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Employee",
												"SendEmployeeInvitation"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Employee/SendEmployeeMobileAppLink",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<integer>",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Employee/SendEmployeeMobileAppLink",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"SendEmployeeMobileAppLink"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "<integer>",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Employee/SendEmployeeMobileAppLink",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Employee",
												"SendEmployeeMobileAppLink"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Employee/ResetPassword",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<integer>",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Employee/ResetPassword",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"ResetPassword"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "<integer>",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Employee/ResetPassword",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Employee",
												"ResetPassword"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Employee/TextAppLink",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<string>",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Employee/TextAppLink",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"TextAppLink"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "<string>",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Employee/TextAppLink",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Employee",
												"TextAppLink"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Group",
					"item": [
						{
							"name": "/api/Group/GetDepartments",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Group/GetDepartments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Group",
										"GetDepartments"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Group/GetDepartments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Group",
												"GetDepartments"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Group/GetLocations",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Group/GetLocations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Group",
										"GetLocations"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Group/GetLocations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Group",
												"GetLocations"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Group/GetDepartmentsSkipTake",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Group/GetDepartmentsSkipTake?query=<string>&skip=<integer>&take=<integer>&orderBy=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Group",
										"GetDepartmentsSkipTake"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										},
										{
											"key": "orderBy",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Group/GetDepartmentsSkipTake?query=<string>&skip=<integer>&take=<integer>&orderBy=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Group",
												"GetDepartmentsSkipTake"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>"
												},
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												},
												{
													"key": "orderBy",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Group/GetLocationsSkipTake",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Group/GetLocationsSkipTake?query=<string>&skip=<integer>&take=<integer>&orderBy=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Group",
										"GetLocationsSkipTake"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										},
										{
											"key": "orderBy",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Group/GetLocationsSkipTake?query=<string>&skip=<integer>&take=<integer>&orderBy=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Group",
												"GetLocationsSkipTake"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>"
												},
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												},
												{
													"key": "orderBy",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Group/GetGroupsForEmployee",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Group/GetGroupsForEmployee",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Group",
										"GetGroupsForEmployee"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Group/GetGroupsForEmployee",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Group",
												"GetGroupsForEmployee"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Group/GetLocationsForEmployee",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Group/GetLocationsForEmployee",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Group",
										"GetLocationsForEmployee"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Group/GetLocationsForEmployee",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Group",
												"GetLocationsForEmployee"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Group/GetDepartmentsForEmployee",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Group/GetDepartmentsForEmployee",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Group",
										"GetDepartmentsForEmployee"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Group/GetDepartmentsForEmployee",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Group",
												"GetDepartmentsForEmployee"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Group/Get/:id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Group/Get/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Group",
										"Get",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Group/Get/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Group",
												"Get",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Group/Post",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"groupId\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"groupType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Group/Post",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Group",
										"Post"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"groupId\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"groupType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Group/Post",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Group",
												"Post"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Group/Put",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"groupId\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"groupType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Group/Put",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Group",
										"Put"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"groupId\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"groupType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Group/Put",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Group",
												"Put"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Group/GetQBServiceItem",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Group/GetQBServiceItem?groupId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Group",
										"GetQBServiceItem"
									],
									"query": [
										{
											"key": "groupId",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Group/GetQBServiceItem?groupId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Group",
												"GetQBServiceItem"
											],
											"query": [
												{
													"key": "groupId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Group/Delete/:id",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Group/Delete/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Group",
										"Delete",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Group/Delete/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Group",
												"Delete",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Group/ValidateGroupDelete",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"statusActive\": \"<boolean>\",\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Group/ValidateGroupDelete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Group",
										"ValidateGroupDelete"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"statusActive\": \"<boolean>\",\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Group/ValidateGroupDelete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Group",
												"ValidateGroupDelete"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Group/BulkCopyGroups",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"statusActive\": \"<boolean>\",\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Group/BulkCopyGroups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Group",
										"BulkCopyGroups"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"statusActive\": \"<boolean>\",\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Group/BulkCopyGroups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Group",
												"BulkCopyGroups"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Gusto",
					"item": [
						{
							"name": "/api/Gusto/validateExportTime",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"skipValidateAndConfirm\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Gusto/validateExportTime",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Gusto",
										"validateExportTime"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"skipValidateAndConfirm\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Gusto/validateExportTime",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Gusto",
												"validateExportTime"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Gusto/exportTime",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"skipValidateAndConfirm\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Gusto/exportTime",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Gusto",
										"exportTime"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"skipValidateAndConfirm\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Gusto/exportTime",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Gusto",
												"exportTime"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Gusto/searchGustoEmployees",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Gusto/searchGustoEmployees?skip=<integer>&take=<integer>&searchTerm=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Gusto",
										"searchGustoEmployees"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										},
										{
											"key": "searchTerm",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Gusto/searchGustoEmployees?skip=<integer>&take=<integer>&searchTerm=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Gusto",
												"searchGustoEmployees"
											],
											"query": [
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												},
												{
													"key": "searchTerm",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Gusto/GetMappedEmployees",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Gusto/GetMappedEmployees",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Gusto",
										"GetMappedEmployees"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Gusto/GetMappedEmployees",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Gusto",
												"GetMappedEmployees"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Gusto/updateEmployeeMapping",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"gustoEmployeeId\": \"<integer>\",\n  \"companyId\": \"<integer>\",\n  \"employeeId\": \"<integer>\",\n  \"id\": \"<long>\",\n  \"version\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"middleInitial\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Gusto/updateEmployeeMapping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Gusto",
										"updateEmployeeMapping"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"gustoEmployeeId\": \"<integer>\",\n  \"companyId\": \"<integer>\",\n  \"employeeId\": \"<integer>\",\n  \"id\": \"<long>\",\n  \"version\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"middleInitial\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Gusto/updateEmployeeMapping",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Gusto",
												"updateEmployeeMapping"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Gusto/SyncGustoEmployees",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Gusto/SyncGustoEmployees?autoMap=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Gusto",
										"SyncGustoEmployees"
									],
									"query": [
										{
											"key": "autoMap",
											"value": "<boolean>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Gusto/SyncGustoEmployees?autoMap=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Gusto",
												"SyncGustoEmployees"
											],
											"query": [
												{
													"key": "autoMap",
													"value": "<boolean>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Gusto/Disconnect",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Gusto/Disconnect",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Gusto",
										"Disconnect"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Gusto/Disconnect",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Gusto",
												"Disconnect"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Gusto/Provision",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Gusto/Provision",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Gusto",
										"Provision"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Gusto/Provision",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Gusto",
												"Provision"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Job",
					"item": [
						{
							"name": "Get",
							"item": [
								{
									"name": "/api/Job/Get",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Job/Get?id=<integer>&skipAccessControl=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Job",
												"Get"
											],
											"query": [
												{
													"key": "id",
													"value": "<integer>"
												},
												{
													"key": "skipAccessControl",
													"value": "false"
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Job/Get?id=<integer>&skipAccessControl=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Job",
														"Get"
													],
													"query": [
														{
															"key": "id",
															"value": "<integer>"
														},
														{
															"key": "skipAccessControl",
															"value": "false"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "/api/Job/Get/:id",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Job/Get/:id?skipAccessControl=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Job",
												"Get",
												":id"
											],
											"query": [
												{
													"key": "skipAccessControl",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Job/Get/:id?skipAccessControl=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Job",
														"Get",
														":id"
													],
													"query": [
														{
															"key": "skipAccessControl",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "/api/Job/List",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Job/List",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Job",
										"List"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Job/List",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Job",
												"List"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Job/HasAny",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Job/HasAny?customerId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Job",
										"HasAny"
									],
									"query": [
										{
											"key": "customerId",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Job/HasAny?customerId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Job",
												"HasAny"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Job/GetJobContacts",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Job/GetJobContacts?jobId=<integer>&query=<string>&skip=<integer>&take=<integer>&orderBy=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Job",
										"GetJobContacts"
									],
									"query": [
										{
											"key": "jobId",
											"value": "<integer>"
										},
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										},
										{
											"key": "orderBy",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Job/GetJobContacts?jobId=<integer>&query=<string>&skip=<integer>&take=<integer>&orderBy=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Job",
												"GetJobContacts"
											],
											"query": [
												{
													"key": "jobId",
													"value": "<integer>"
												},
												{
													"key": "query",
													"value": "<string>"
												},
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												},
												{
													"key": "orderBy",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Job/HasAnyContacts",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Job/HasAnyContacts?jobId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Job",
										"HasAnyContacts"
									],
									"query": [
										{
											"key": "jobId",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Job/HasAnyContacts?jobId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Job",
												"HasAnyContacts"
											],
											"query": [
												{
													"key": "jobId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Job/GetActive",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Job/GetActive",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Job",
										"GetActive"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Job/GetActive",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Job",
												"GetActive"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Job/GetActiveForEmployee",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Job/GetActiveForEmployee?includeStage=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Job",
										"GetActiveForEmployee"
									],
									"query": [
										{
											"key": "includeStage",
											"value": "false"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Job/GetActiveForEmployee?includeStage=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Job",
												"GetActiveForEmployee"
											],
											"query": [
												{
													"key": "includeStage",
													"value": "false"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Job/GetRecentForEmployee",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Job/GetRecentForEmployee",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Job",
										"GetRecentForEmployee"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Job/GetRecentForEmployee",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Job",
												"GetRecentForEmployee"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Job/GetJobsRecentlyScheduled",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Job/GetJobsRecentlyScheduled",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Job",
										"GetJobsRecentlyScheduled"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Job/GetJobsRecentlyScheduled",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Job",
												"GetJobsRecentlyScheduled"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Job/GetJobsRecentlyScheduledForEmployee",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Job/GetJobsRecentlyScheduledForEmployee",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Job",
										"GetJobsRecentlyScheduledForEmployee"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Job/GetJobsRecentlyScheduledForEmployee",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Job",
												"GetJobsRecentlyScheduledForEmployee"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Job/GetJobsRecentlyAdded",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Job/GetJobsRecentlyAdded",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Job",
										"GetJobsRecentlyAdded"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Job/GetJobsRecentlyAdded",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Job",
												"GetJobsRecentlyAdded"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Job/GetJobsRecentlyAddedForEmployee",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Job/GetJobsRecentlyAddedForEmployee",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Job",
										"GetJobsRecentlyAddedForEmployee"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Job/GetJobsRecentlyAddedForEmployee",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Job",
												"GetJobsRecentlyAddedForEmployee"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Job/GetJobsWithNoCustomer",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Job/GetJobsWithNoCustomer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Job",
										"GetJobsWithNoCustomer"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Job/GetJobsWithNoCustomer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Job",
												"GetJobsWithNoCustomer"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Job/GetJobQBCustomer",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Job/GetJobQBCustomer?jobId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Job",
										"GetJobQBCustomer"
									],
									"query": [
										{
											"key": "jobId",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Job/GetJobQBCustomer?jobId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Job",
												"GetJobQBCustomer"
											],
											"query": [
												{
													"key": "jobId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Job/Post",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jobId\": \"<integer>\",\n  \"color\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"description\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"isBudgeted\": \"<boolean>\",\n  \"hoursBudgeted\": \"<double>\",\n  \"hoursAlert\": \"<double>\",\n  \"hoursWorked\": \"<double>\",\n  \"isActive\": \"<boolean>\",\n  \"restrictionTypeEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"restrictEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobCustomer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobCustomerContacts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictionTypeTask\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"restrictTaskIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobGeofence\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attestationSurvey\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dateDeleted\": \"<dateTime>\",\n  \"stage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isCurrentEmpFollowing\": \"<boolean>\",\n  \"nameAndNumber\": \"<string>\",\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"hasBilledTime\": \"<boolean>\",\n  \"billedInvoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Job/Post",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Job",
										"Post"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jobId\": \"<integer>\",\n  \"color\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"description\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"isBudgeted\": \"<boolean>\",\n  \"hoursBudgeted\": \"<double>\",\n  \"hoursAlert\": \"<double>\",\n  \"hoursWorked\": \"<double>\",\n  \"isActive\": \"<boolean>\",\n  \"restrictionTypeEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"restrictEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobCustomer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobCustomerContacts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictionTypeTask\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"restrictTaskIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobGeofence\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attestationSurvey\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dateDeleted\": \"<dateTime>\",\n  \"stage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isCurrentEmpFollowing\": \"<boolean>\",\n  \"nameAndNumber\": \"<string>\",\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"hasBilledTime\": \"<boolean>\",\n  \"billedInvoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Job/Post",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Job",
												"Post"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Job/Put",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jobId\": \"<integer>\",\n  \"color\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"description\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"isBudgeted\": \"<boolean>\",\n  \"hoursBudgeted\": \"<double>\",\n  \"hoursAlert\": \"<double>\",\n  \"hoursWorked\": \"<double>\",\n  \"isActive\": \"<boolean>\",\n  \"restrictionTypeEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"restrictEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobCustomer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobCustomerContacts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictionTypeTask\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"restrictTaskIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobGeofence\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attestationSurvey\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dateDeleted\": \"<dateTime>\",\n  \"stage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isCurrentEmpFollowing\": \"<boolean>\",\n  \"nameAndNumber\": \"<string>\",\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"hasBilledTime\": \"<boolean>\",\n  \"billedInvoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Job/Put",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Job",
										"Put"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jobId\": \"<integer>\",\n  \"color\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"description\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"isBudgeted\": \"<boolean>\",\n  \"hoursBudgeted\": \"<double>\",\n  \"hoursAlert\": \"<double>\",\n  \"hoursWorked\": \"<double>\",\n  \"isActive\": \"<boolean>\",\n  \"restrictionTypeEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"restrictEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobCustomer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobCustomerContacts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictionTypeTask\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"restrictTaskIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobGeofence\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attestationSurvey\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dateDeleted\": \"<dateTime>\",\n  \"stage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isCurrentEmpFollowing\": \"<boolean>\",\n  \"nameAndNumber\": \"<string>\",\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"hasBilledTime\": \"<boolean>\",\n  \"billedInvoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Job/Put",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Job",
												"Put"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Job/UpdateDetails",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jobId\": \"<integer>\",\n  \"color\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"description\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"isBudgeted\": \"<boolean>\",\n  \"hoursBudgeted\": \"<double>\",\n  \"hoursAlert\": \"<double>\",\n  \"hoursWorked\": \"<double>\",\n  \"isActive\": \"<boolean>\",\n  \"restrictionTypeEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"restrictEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobCustomer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobCustomerContacts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictionTypeTask\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"restrictTaskIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobGeofence\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attestationSurvey\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dateDeleted\": \"<dateTime>\",\n  \"stage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isCurrentEmpFollowing\": \"<boolean>\",\n  \"nameAndNumber\": \"<string>\",\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"hasBilledTime\": \"<boolean>\",\n  \"billedInvoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Job/UpdateDetails",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Job",
										"UpdateDetails"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jobId\": \"<integer>\",\n  \"color\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"description\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"isBudgeted\": \"<boolean>\",\n  \"hoursBudgeted\": \"<double>\",\n  \"hoursAlert\": \"<double>\",\n  \"hoursWorked\": \"<double>\",\n  \"isActive\": \"<boolean>\",\n  \"restrictionTypeEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"restrictEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobCustomer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobCustomerContacts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictionTypeTask\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"restrictTaskIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobGeofence\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attestationSurvey\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dateDeleted\": \"<dateTime>\",\n  \"stage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isCurrentEmpFollowing\": \"<boolean>\",\n  \"nameAndNumber\": \"<string>\",\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"hasBilledTime\": \"<boolean>\",\n  \"billedInvoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Job/UpdateDetails",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Job",
												"UpdateDetails"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Job/UpdateSettings",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jobId\": \"<integer>\",\n  \"color\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"description\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"isBudgeted\": \"<boolean>\",\n  \"hoursBudgeted\": \"<double>\",\n  \"hoursAlert\": \"<double>\",\n  \"hoursWorked\": \"<double>\",\n  \"isActive\": \"<boolean>\",\n  \"restrictionTypeEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"restrictEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobCustomer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobCustomerContacts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictionTypeTask\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"restrictTaskIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobGeofence\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attestationSurvey\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dateDeleted\": \"<dateTime>\",\n  \"stage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isCurrentEmpFollowing\": \"<boolean>\",\n  \"nameAndNumber\": \"<string>\",\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"hasBilledTime\": \"<boolean>\",\n  \"billedInvoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Job/UpdateSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Job",
										"UpdateSettings"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jobId\": \"<integer>\",\n  \"color\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"description\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"isBudgeted\": \"<boolean>\",\n  \"hoursBudgeted\": \"<double>\",\n  \"hoursAlert\": \"<double>\",\n  \"hoursWorked\": \"<double>\",\n  \"isActive\": \"<boolean>\",\n  \"restrictionTypeEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"restrictEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobCustomer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobCustomerContacts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictionTypeTask\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"restrictTaskIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobGeofence\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attestationSurvey\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dateDeleted\": \"<dateTime>\",\n  \"stage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isCurrentEmpFollowing\": \"<boolean>\",\n  \"nameAndNumber\": \"<string>\",\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"hasBilledTime\": \"<boolean>\",\n  \"billedInvoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Job/UpdateSettings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Job",
												"UpdateSettings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Job/UpdateIsActive",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jobId\": \"<integer>\",\n  \"color\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"description\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"isBudgeted\": \"<boolean>\",\n  \"hoursBudgeted\": \"<double>\",\n  \"hoursAlert\": \"<double>\",\n  \"hoursWorked\": \"<double>\",\n  \"isActive\": \"<boolean>\",\n  \"restrictionTypeEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"restrictEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobCustomer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobCustomerContacts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictionTypeTask\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"restrictTaskIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobGeofence\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attestationSurvey\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dateDeleted\": \"<dateTime>\",\n  \"stage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isCurrentEmpFollowing\": \"<boolean>\",\n  \"nameAndNumber\": \"<string>\",\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"hasBilledTime\": \"<boolean>\",\n  \"billedInvoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Job/UpdateIsActive",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Job",
										"UpdateIsActive"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jobId\": \"<integer>\",\n  \"color\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"description\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"isBudgeted\": \"<boolean>\",\n  \"hoursBudgeted\": \"<double>\",\n  \"hoursAlert\": \"<double>\",\n  \"hoursWorked\": \"<double>\",\n  \"isActive\": \"<boolean>\",\n  \"restrictionTypeEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"restrictEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobCustomer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobCustomerContacts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictionTypeTask\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"restrictTaskIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobGeofence\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attestationSurvey\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dateDeleted\": \"<dateTime>\",\n  \"stage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isCurrentEmpFollowing\": \"<boolean>\",\n  \"nameAndNumber\": \"<string>\",\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"hasBilledTime\": \"<boolean>\",\n  \"billedInvoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Job/UpdateIsActive",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Job",
												"UpdateIsActive"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Job/UpdateColor",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jobId\": \"<integer>\",\n  \"color\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"description\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"isBudgeted\": \"<boolean>\",\n  \"hoursBudgeted\": \"<double>\",\n  \"hoursAlert\": \"<double>\",\n  \"hoursWorked\": \"<double>\",\n  \"isActive\": \"<boolean>\",\n  \"restrictionTypeEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"restrictEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobCustomer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobCustomerContacts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictionTypeTask\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"restrictTaskIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobGeofence\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attestationSurvey\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dateDeleted\": \"<dateTime>\",\n  \"stage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isCurrentEmpFollowing\": \"<boolean>\",\n  \"nameAndNumber\": \"<string>\",\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"hasBilledTime\": \"<boolean>\",\n  \"billedInvoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Job/UpdateColor",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Job",
										"UpdateColor"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jobId\": \"<integer>\",\n  \"color\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"description\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"isBudgeted\": \"<boolean>\",\n  \"hoursBudgeted\": \"<double>\",\n  \"hoursAlert\": \"<double>\",\n  \"hoursWorked\": \"<double>\",\n  \"isActive\": \"<boolean>\",\n  \"restrictionTypeEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"restrictEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobCustomer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobCustomerContacts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictionTypeTask\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"restrictTaskIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobGeofence\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attestationSurvey\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dateDeleted\": \"<dateTime>\",\n  \"stage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isCurrentEmpFollowing\": \"<boolean>\",\n  \"nameAndNumber\": \"<string>\",\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"hasBilledTime\": \"<boolean>\",\n  \"billedInvoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Job/UpdateColor",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Job",
												"UpdateColor"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Job/Delete/:id",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Job/Delete/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Job",
										"Delete",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Job/Delete/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Job",
												"Delete",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Job/ValidateJobDelete",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"statusActive\": \"<boolean>\",\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Job/ValidateJobDelete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Job",
										"ValidateJobDelete"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"statusActive\": \"<boolean>\",\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Job/ValidateJobDelete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Job",
												"ValidateJobDelete"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Job/BulkUpdateJobs",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"statusActive\": \"<boolean>\",\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Job/BulkUpdateJobs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Job",
										"BulkUpdateJobs"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"statusActive\": \"<boolean>\",\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Job/BulkUpdateJobs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Job",
												"BulkUpdateJobs"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Job/BulkCopyJobs",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"statusActive\": \"<boolean>\",\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Job/BulkCopyJobs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Job",
										"BulkCopyJobs"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"statusActive\": \"<boolean>\",\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Job/BulkCopyJobs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Job",
												"BulkCopyJobs"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Job/BulkAssignCustomer",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jobIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"customerId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Job/BulkAssignCustomer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Job",
										"BulkAssignCustomer"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jobIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"customerId\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Job/BulkAssignCustomer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Job",
												"BulkAssignCustomer"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Job/BulkAssignStage",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jobIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"stageId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Job/BulkAssignStage",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Job",
										"BulkAssignStage"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jobIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"stageId\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Job/BulkAssignStage",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Job",
												"BulkAssignStage"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Job/AssignContacts",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jobId\": \"<integer>\",\n  \"color\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"description\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"isBudgeted\": \"<boolean>\",\n  \"hoursBudgeted\": \"<double>\",\n  \"hoursAlert\": \"<double>\",\n  \"hoursWorked\": \"<double>\",\n  \"isActive\": \"<boolean>\",\n  \"restrictionTypeEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"restrictEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobCustomer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobCustomerContacts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictionTypeTask\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"restrictTaskIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobGeofence\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attestationSurvey\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dateDeleted\": \"<dateTime>\",\n  \"stage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isCurrentEmpFollowing\": \"<boolean>\",\n  \"nameAndNumber\": \"<string>\",\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"hasBilledTime\": \"<boolean>\",\n  \"billedInvoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Job/AssignContacts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Job",
										"AssignContacts"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jobId\": \"<integer>\",\n  \"color\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"description\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"isBudgeted\": \"<boolean>\",\n  \"hoursBudgeted\": \"<double>\",\n  \"hoursAlert\": \"<double>\",\n  \"hoursWorked\": \"<double>\",\n  \"isActive\": \"<boolean>\",\n  \"restrictionTypeEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"restrictEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobCustomer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobCustomerContacts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictionTypeTask\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"restrictTaskIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobGeofence\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attestationSurvey\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dateDeleted\": \"<dateTime>\",\n  \"stage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isCurrentEmpFollowing\": \"<boolean>\",\n  \"nameAndNumber\": \"<string>\",\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"hasBilledTime\": \"<boolean>\",\n  \"billedInvoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Job/AssignContacts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Job",
												"AssignContacts"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Job/DeleteContact",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"job\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobContact\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Job/DeleteContact",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Job",
										"DeleteContact"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"job\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobContact\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Job/DeleteContact",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Job",
												"DeleteContact"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Job/UpdateStage",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jobId\": \"<integer>\",\n  \"color\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"description\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"isBudgeted\": \"<boolean>\",\n  \"hoursBudgeted\": \"<double>\",\n  \"hoursAlert\": \"<double>\",\n  \"hoursWorked\": \"<double>\",\n  \"isActive\": \"<boolean>\",\n  \"restrictionTypeEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"restrictEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobCustomer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobCustomerContacts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictionTypeTask\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"restrictTaskIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobGeofence\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attestationSurvey\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dateDeleted\": \"<dateTime>\",\n  \"stage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isCurrentEmpFollowing\": \"<boolean>\",\n  \"nameAndNumber\": \"<string>\",\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"hasBilledTime\": \"<boolean>\",\n  \"billedInvoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Job/UpdateStage",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Job",
										"UpdateStage"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jobId\": \"<integer>\",\n  \"color\": \"<string>\",\n  \"name\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"description\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"isBudgeted\": \"<boolean>\",\n  \"hoursBudgeted\": \"<double>\",\n  \"hoursAlert\": \"<double>\",\n  \"hoursWorked\": \"<double>\",\n  \"isActive\": \"<boolean>\",\n  \"restrictionTypeEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"restrictEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobCustomer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobCustomerContacts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictionTypeTask\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"restrictTaskIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobGeofence\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attestationSurvey\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dateDeleted\": \"<dateTime>\",\n  \"stage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isCurrentEmpFollowing\": \"<boolean>\",\n  \"nameAndNumber\": \"<string>\",\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"hasBilledTime\": \"<boolean>\",\n  \"billedInvoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Job/UpdateStage",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Job",
												"UpdateStage"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Job/GetAttachments",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Job/GetAttachments?jobId=<integer>&query=<string>&skip=<integer>&take=<integer>&orderBy=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Job",
										"GetAttachments"
									],
									"query": [
										{
											"key": "jobId",
											"value": "<integer>"
										},
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										},
										{
											"key": "orderBy",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Job/GetAttachments?jobId=<integer>&query=<string>&skip=<integer>&take=<integer>&orderBy=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Job",
												"GetAttachments"
											],
											"query": [
												{
													"key": "jobId",
													"value": "<integer>"
												},
												{
													"key": "query",
													"value": "<string>"
												},
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												},
												{
													"key": "orderBy",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Job/AddAttachment",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jobId\": \"<integer>\",\n  \"attachmentId\": \"<uuid>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Job/AddAttachment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Job",
										"AddAttachment"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jobId\": \"<integer>\",\n  \"attachmentId\": \"<uuid>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Job/AddAttachment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Job",
												"AddAttachment"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Job/DeleteAttachment",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jobId\": \"<integer>\",\n  \"attachmentId\": \"<uuid>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Job/DeleteAttachment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Job",
										"DeleteAttachment"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jobId\": \"<integer>\",\n  \"attachmentId\": \"<uuid>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Job/DeleteAttachment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Job",
												"DeleteAttachment"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Job/BulkDeleteAttachments",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jobId\": \"<integer>\",\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Job/BulkDeleteAttachments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Job",
										"BulkDeleteAttachments"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jobId\": \"<integer>\",\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Job/BulkDeleteAttachments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Job",
												"BulkDeleteAttachments"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Job/FollowUnfollow",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jobId\": \"<integer>\",\n  \"follow\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Job/FollowUnfollow",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Job",
										"FollowUnfollow"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jobId\": \"<integer>\",\n  \"follow\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Job/FollowUnfollow",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Job",
												"FollowUnfollow"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Localization",
					"item": [
						{
							"name": "/api/Localization/GetLocale",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Localization/GetLocale",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Localization",
										"GetLocale"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Localization/GetLocale",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Localization",
												"GetLocale"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Localization/GetDictionary",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Localization/GetDictionary?locale=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Localization",
										"GetDictionary"
									],
									"query": [
										{
											"key": "locale",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Localization/GetDictionary?locale=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Localization",
												"GetDictionary"
											],
											"query": [
												{
													"key": "locale",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Localization/GetLocalizedString",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Localization/GetLocalizedString?name=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Localization",
										"GetLocalizedString"
									],
									"query": [
										{
											"key": "name",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Localization/GetLocalizedString?name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Localization",
												"GetLocalizedString"
											],
											"query": [
												{
													"key": "name",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"esse aute\""
								}
							]
						},
						{
							"name": "/api/Localization/GetLocalizedStrings",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Localization/GetLocalizedStrings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Localization",
										"GetLocalizedStrings"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Localization/GetLocalizedStrings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Localization",
												"GetLocalizedStrings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"nostrud_39\": \"quis eiusmod adipisicing\",\n  \"in_1\": \"et officia\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "mobile/v2",
					"item": [
						{
							"name": "attestation",
							"item": [
								{
									"name": "/api/mobile/v2/attestation/surveys/syncpackage",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/attestation/surveys/syncpackage",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"attestation",
												"surveys",
												"syncpackage"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/attestation/surveys/syncpackage",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"attestation",
														"surveys",
														"syncpackage"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"inserts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"updates\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deletes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"syncDate\": \"1987-11-26T05:11:47.075Z\",\n  \"hasChanges\": false\n}"
										}
									]
								},
								{
									"name": "/api/mobile/v2/attestation/questions/syncpackage",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/attestation/questions/syncpackage",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"attestation",
												"questions",
												"syncpackage"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/attestation/questions/syncpackage",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"attestation",
														"questions",
														"syncpackage"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"inserts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"updates\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deletes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"syncDate\": \"1987-11-26T05:11:47.075Z\",\n  \"hasChanges\": false\n}"
										}
									]
								}
							]
						},
						{
							"name": "comment",
							"item": [
								{
									"name": "attachment",
									"item": [
										{
											"name": "/api/mobile/v2/comment/attachment",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/comment/attachment",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"comment",
														"attachment"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/comment/attachment",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"comment",
																"attachment"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"inserts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"updates\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deletes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"syncDate\": \"1987-11-26T05:11:47.075Z\",\n  \"hasChanges\": false\n}"
												}
											]
										},
										{
											"name": "/api/mobile/v2/comment/attachment/createList",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"commentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachment\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"commentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachment\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/comment/attachment/createList",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"comment",
														"attachment",
														"createList"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"commentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachment\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"commentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachment\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/comment/attachment/createList",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"comment",
																"attachment",
																"createList"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  \"143d818d-7d5d-27f6-57d8-3ab5a0ae8d50\",\n  \"urn:uuid:65865c81-750e-3d42-5fa9-b18ed7fd686f\"\n]"
												}
											]
										},
										{
											"name": "/api/mobile/v2/comment/attachment/deleteList",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"commentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachment\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"commentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachment\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/comment/attachment/deleteList",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"comment",
														"attachment",
														"deleteList"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"commentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachment\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"commentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachment\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/comment/attachment/deleteList",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"comment",
																"attachment",
																"deleteList"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  \"143d818d-7d5d-27f6-57d8-3ab5a0ae8d50\",\n  \"urn:uuid:65865c81-750e-3d42-5fa9-b18ed7fd686f\"\n]"
												}
											]
										}
									]
								},
								{
									"name": "/api/mobile/v2/comment",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/comment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"comment"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/comment",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"comment"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"inserts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"updates\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deletes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"syncDate\": \"1987-11-26T05:11:47.075Z\",\n  \"hasChanges\": false\n}"
										}
									]
								},
								{
									"name": "/api/mobile/v2/comment/createList",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"commentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"associationType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"associationId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"associationGuid\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"message\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"recipientEmployeeIds\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"commentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"associationType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"associationId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"associationGuid\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"message\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"recipientEmployeeIds\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/comment/createList",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"comment",
												"createList"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"commentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"associationType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"associationId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"associationGuid\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"message\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"recipientEmployeeIds\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"commentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"associationType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"associationId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"associationGuid\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"message\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"recipientEmployeeIds\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/comment/createList",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"comment",
														"createList"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"serverId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"recordLevel\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"serverId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"recordLevel\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
										}
									]
								},
								{
									"name": "/api/mobile/v2/comment/SubSet",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/comment/SubSet",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"comment",
												"SubSet"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/comment/SubSet",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"comment",
														"SubSet"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"commentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"associationType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"associationId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"associationGuid\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"message\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"recipientEmployeeIds\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"commentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"associationType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"associationId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"associationGuid\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"message\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"recipientEmployeeIds\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
										}
									]
								},
								{
									"name": "/api/mobile/v2/comment/updateList",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"commentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"associationType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"associationId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"associationGuid\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"message\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"recipientEmployeeIds\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"commentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"associationType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"associationId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"associationGuid\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"message\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"recipientEmployeeIds\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/comment/updateList",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"comment",
												"updateList"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"commentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"associationType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"associationId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"associationGuid\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"message\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"recipientEmployeeIds\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"commentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"associationType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"associationId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"associationGuid\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"message\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"recipientEmployeeIds\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/comment/updateList",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"comment",
														"updateList"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  25028973,\n  68414774\n]"
										}
									]
								},
								{
									"name": "/api/mobile/v2/comment/deleteList",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"commentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"deletedDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"commentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"deletedDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/comment/deleteList",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"comment",
												"deleteList"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"commentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"deletedDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"commentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"deletedDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/comment/deleteList",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"comment",
														"deleteList"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  25028973,\n  68414774\n]"
										}
									]
								},
								{
									"name": "/api/mobile/v2/comment/follow",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/comment/follow",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"comment",
												"follow"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/comment/follow",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"comment",
														"follow"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"inserts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"updates\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deletes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"syncDate\": \"1987-11-26T05:11:47.075Z\",\n  \"hasChanges\": false\n}"
										}
									]
								},
								{
									"name": "/api/mobile/v2/comment/followEntity",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/comment/followEntity",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"comment",
												"followEntity"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/comment/followEntity",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"comment",
														"followEntity"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "true"
										}
									]
								},
								{
									"name": "/api/mobile/v2/comment/NewNotification",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/comment/NewNotification",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"comment",
												"NewNotification"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/comment/NewNotification",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"comment",
														"NewNotification"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "true"
										}
									]
								}
							]
						},
						{
							"name": "customer",
							"item": [
								{
									"name": "contact",
									"item": [
										{
											"name": "/api/mobile/v2/customer/contact/createList",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"contactId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customerId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"firstName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"role\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"email\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"notes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isPrimary\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"phones\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobIds\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"contactId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customerId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"firstName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"role\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"email\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"notes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isPrimary\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"phones\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobIds\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/customer/contact/createList",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"customer",
														"contact",
														"createList"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"contactId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customerId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"firstName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"role\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"email\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"notes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isPrimary\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"phones\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobIds\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"contactId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customerId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"firstName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"role\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"email\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"notes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isPrimary\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"phones\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobIds\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/customer/contact/createList",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"customer",
																"contact",
																"createList"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"serverId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"recordLevel\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"serverId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"recordLevel\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
												}
											]
										},
										{
											"name": "/api/mobile/v2/customer/contact/updateList",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"contactId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customerId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"firstName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"role\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"email\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"notes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isPrimary\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"phones\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobIds\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"contactId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customerId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"firstName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"role\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"email\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"notes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isPrimary\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"phones\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobIds\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/customer/contact/updateList",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"customer",
														"contact",
														"updateList"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"contactId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customerId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"firstName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"role\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"email\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"notes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isPrimary\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"phones\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobIds\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"contactId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customerId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"firstName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"role\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"email\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"notes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isPrimary\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"phones\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobIds\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/customer/contact/updateList",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"customer",
																"contact",
																"updateList"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  25028973,\n  68414774\n]"
												}
											]
										}
									]
								},
								{
									"name": "/api/mobile/v2/customer/syncpackage",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/customer/syncpackage",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"customer",
												"syncpackage"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/customer/syncpackage",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"customer",
														"syncpackage"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"inserts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"updates\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deletes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"syncDate\": \"1987-11-26T05:11:47.075Z\",\n  \"hasChanges\": false\n}"
										}
									]
								},
								{
									"name": "/api/mobile/v2/customer/createList",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customerId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"individualContactId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteIndividualContactId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"businessName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"street\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"city\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"stateProvidence\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"country\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"postalCode\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"phone\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"webSite\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"notes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isActive\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"contacts\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customerId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"individualContactId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteIndividualContactId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"businessName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"street\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"city\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"stateProvidence\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"country\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"postalCode\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"phone\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"webSite\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"notes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isActive\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"contacts\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/customer/createList",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"customer",
												"createList"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customerId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"individualContactId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteIndividualContactId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"businessName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"street\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"city\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"stateProvidence\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"country\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"postalCode\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"phone\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"webSite\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"notes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isActive\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"contacts\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customerId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"individualContactId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteIndividualContactId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"businessName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"street\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"city\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"stateProvidence\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"country\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"postalCode\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"phone\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"webSite\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"notes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isActive\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"contacts\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/customer/createList",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"customer",
														"createList"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"serverId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"recordLevel\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"serverId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"recordLevel\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
										}
									]
								},
								{
									"name": "/api/mobile/v2/customer/updateList",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customerId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"individualContactId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteIndividualContactId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"businessName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"street\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"city\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"stateProvidence\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"country\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"postalCode\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"phone\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"webSite\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"notes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isActive\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"contacts\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customerId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"individualContactId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteIndividualContactId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"businessName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"street\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"city\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"stateProvidence\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"country\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"postalCode\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"phone\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"webSite\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"notes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isActive\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"contacts\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/customer/updateList",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"customer",
												"updateList"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customerId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"individualContactId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteIndividualContactId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"businessName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"street\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"city\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"stateProvidence\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"country\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"postalCode\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"phone\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"webSite\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"notes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isActive\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"contacts\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customerId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"individualContactId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteIndividualContactId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"businessName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"street\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"city\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"stateProvidence\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"country\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"postalCode\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"phone\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"webSite\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"notes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isActive\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"contacts\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/customer/updateList",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"customer",
														"updateList"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  25028973,\n  68414774\n]"
										}
									]
								},
								{
									"name": "/api/mobile/v2/customer/jobContact/updateList",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"jobId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"contactId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isLinked\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"jobId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"contactId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isLinked\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/customer/jobContact/updateList",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"customer",
												"jobContact",
												"updateList"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"jobId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"contactId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isLinked\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"jobId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"contactId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isLinked\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/customer/jobContact/updateList",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"customer",
														"jobContact",
														"updateList"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"jobId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"contactId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isLinked\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"jobId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"contactId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isLinked\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
										}
									]
								},
								{
									"name": "/api/mobile/v2/customer/get/:id",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/customer/get/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"customer",
												"get",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/customer/get/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"customer",
														"get",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"dateCreated\": \"2011-10-23T14:12:35.967Z\",\n  \"dateUpdated\": \"1970-10-17T19:22:01.693Z\",\n  \"dateDeleted\": \"2010-08-06T04:18:21.936Z\",\n  \"customerId\": 7302914,\n  \"remoteId\": 65128155,\n  \"type\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"individualContactId\": 475526,\n  \"remoteIndividualContactId\": -68240442,\n  \"businessName\": \"proident dolor\",\n  \"street\": \"ut Ut aliqua a\",\n  \"city\": \"cupidatat eiusmod\",\n  \"stateProvidence\": \"enim pariatur \",\n  \"country\": \"c\",\n  \"postalCode\": \"enim\",\n  \"phone\": \"commodo officia eiusmod ex\",\n  \"webSite\": \"et nulla\",\n  \"notes\": \"laborum ea\",\n  \"isActive\": true,\n  \"contacts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "employees",
							"item": [
								{
									"name": "get",
									"item": [
										{
											"name": "syncpackage",
											"item": [
												{
													"name": "employee",
													"item": [
														{
															"name": "/api/mobile/v2/employees/get/syncpackage/employee/mn2",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "text/plain"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/mobile/v2/employees/get/syncpackage/employee/mn2",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"mobile",
																		"v2",
																		"employees",
																		"get",
																		"syncpackage",
																		"employee",
																		"mn2"
																	]
																}
															},
															"response": [
																{
																	"name": "Success",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/api/mobile/v2/employees/get/syncpackage/employee/mn2",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"mobile",
																				"v2",
																				"employees",
																				"get",
																				"syncpackage",
																				"employee",
																				"mn2"
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"inserts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"updates\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deletes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"syncDate\": \"2016-04-29T15:47:50.342Z\",\n  \"hasChanges\": true\n}"
																}
															]
														},
														{
															"name": "/api/mobile/v2/employees/get/syncpackage/employee/v3",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "text/plain"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/mobile/v2/employees/get/syncpackage/employee/v3",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"mobile",
																		"v2",
																		"employees",
																		"get",
																		"syncpackage",
																		"employee",
																		"v3"
																	]
																}
															},
															"response": [
																{
																	"name": "Success",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/api/mobile/v2/employees/get/syncpackage/employee/v3",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"mobile",
																				"v2",
																				"employees",
																				"get",
																				"syncpackage",
																				"employee",
																				"v3"
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"inserts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"updates\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deletes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"syncDate\": \"2016-04-29T15:47:50.342Z\",\n  \"hasChanges\": true\n}"
																}
															]
														}
													]
												},
												{
													"name": "/api/mobile/v2/employees/get/syncpackage",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/plain"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/employees/get/syncpackage",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"employees",
																"get",
																"syncpackage"
															]
														}
													},
													"response": [
														{
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/mobile/v2/employees/get/syncpackage",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"mobile",
																		"v2",
																		"employees",
																		"get",
																		"syncpackage"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"inserts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"updates\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deletes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"syncDate\": \"1987-11-26T05:11:47.075Z\",\n  \"hasChanges\": false\n}"
														}
													]
												},
												{
													"name": "/api/mobile/v2/employees/get/syncpackage/crew/mn2",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/plain"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/employees/get/syncpackage/crew/mn2",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"employees",
																"get",
																"syncpackage",
																"crew",
																"mn2"
															]
														}
													},
													"response": [
														{
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/mobile/v2/employees/get/syncpackage/crew/mn2",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"mobile",
																		"v2",
																		"employees",
																		"get",
																		"syncpackage",
																		"crew",
																		"mn2"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"inserts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"updates\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deletes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"syncDate\": \"2016-04-29T15:47:50.342Z\",\n  \"hasChanges\": true\n}"
														}
													]
												}
											]
										},
										{
											"name": "/api/mobile/v2/employees/get/active",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/employees/get/active",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"employees",
														"get",
														"active"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/employees/get/active",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"employees",
																"get",
																"active"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"firstName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"email\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"password\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"kioskPin\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"role\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isSelected\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isClockedIn\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"color\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"elapsed\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"companyId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"companyName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isActive\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"permissions\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateTimeFormat\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"followedOption\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"taggedOption\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sendSetupSms\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"phone\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeDisplayId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"firstName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"email\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"password\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"kioskPin\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"role\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isSelected\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isClockedIn\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"color\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"elapsed\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"companyId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"companyName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isActive\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"permissions\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateTimeFormat\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"followedOption\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"taggedOption\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sendSetupSms\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"phone\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeDisplayId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
												}
											]
										},
										{
											"name": "/api/mobile/v2/employees/get/:id",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/employees/get/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"employees",
														"get",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/employees/get/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"employees",
																"get",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<integer>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"dateCreated\": \"1968-09-10T11:48:50.951Z\",\n  \"dateUpdated\": \"1996-07-09T05:40:52.852Z\",\n  \"dateDeleted\": \"1955-03-31T15:54:12.164Z\",\n  \"employeeId\": 39891805,\n  \"firstName\": \"reprehenderit qui incididunt\",\n  \"lastName\": \"mollit occaec\",\n  \"email\": \"in culpa ipsum deserunt\",\n  \"password\": \"ut nostrud occaecat magna\",\n  \"kioskPin\": \"officia sunt\",\n  \"role\": -47783158,\n  \"isSelected\": true,\n  \"isClockedIn\": false,\n  \"color\": \"dolor co\",\n  \"startTime\": \"1984-04-11T19:53:49.568Z\",\n  \"elapsed\": \"cillum anim Lorem in qui\",\n  \"companyId\": 59523643,\n  \"companyName\": \"ad in magna\",\n  \"isActive\": false,\n  \"permissions\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dateTimeFormat\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"followedOption\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"taggedOption\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"sendSetupSms\": true,\n  \"phone\": \"ut irure aliq\",\n  \"employeeDisplayId\": \"Ut laboris ad\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "/api/mobile/v2/employees/emailsettings/update",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\",\n  \"employeeId\": \"<integer>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"kioskPin\": \"<string>\",\n  \"role\": \"<integer>\",\n  \"isSelected\": \"<boolean>\",\n  \"isClockedIn\": \"<boolean>\",\n  \"color\": \"<string>\",\n  \"startTime\": \"<dateTime>\",\n  \"elapsed\": \"<string>\",\n  \"companyId\": \"<integer>\",\n  \"companyName\": \"<string>\",\n  \"isActive\": \"<boolean>\",\n  \"permissions\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dateTimeFormat\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"followedOption\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"taggedOption\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"sendSetupSms\": \"<boolean>\",\n  \"phone\": \"<string>\",\n  \"employeeDisplayId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/employees/emailsettings/update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"employees",
												"emailsettings",
												"update"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\",\n  \"employeeId\": \"<integer>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"kioskPin\": \"<string>\",\n  \"role\": \"<integer>\",\n  \"isSelected\": \"<boolean>\",\n  \"isClockedIn\": \"<boolean>\",\n  \"color\": \"<string>\",\n  \"startTime\": \"<dateTime>\",\n  \"elapsed\": \"<string>\",\n  \"companyId\": \"<integer>\",\n  \"companyName\": \"<string>\",\n  \"isActive\": \"<boolean>\",\n  \"permissions\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dateTimeFormat\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"followedOption\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"taggedOption\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"sendSetupSms\": \"<boolean>\",\n  \"phone\": \"<string>\",\n  \"employeeDisplayId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/employees/emailsettings/update",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"employees",
														"emailsettings",
														"update"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\",\n  \"employeeId\": \"<integer>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"kioskPin\": \"<string>\",\n  \"role\": \"<integer>\",\n  \"isSelected\": \"<boolean>\",\n  \"isClockedIn\": \"<boolean>\",\n  \"color\": \"<string>\",\n  \"startTime\": \"<dateTime>\",\n  \"elapsed\": \"<string>\",\n  \"companyId\": \"<integer>\",\n  \"companyName\": \"<string>\",\n  \"isActive\": \"<boolean>\",\n  \"permissions\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dateTimeFormat\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"followedOption\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"taggedOption\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"sendSetupSms\": \"<boolean>\",\n  \"phone\": \"<string>\",\n  \"employeeDisplayId\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "/api/mobile/v2/employees/create",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"role\": \"<integer>\",\n  \"companyId\": \"<integer>\",\n  \"isActive\": \"<boolean>\",\n  \"permissions\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"phone\": \"<string>\",\n  \"employeeDisplayId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/employees/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"employees",
												"create"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"role\": \"<integer>\",\n  \"companyId\": \"<integer>\",\n  \"isActive\": \"<boolean>\",\n  \"permissions\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"phone\": \"<string>\",\n  \"employeeDisplayId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/employees/create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"employees",
														"create"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "/api/mobile/v2/employees/update/:employeeId",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"role\": \"<integer>\",\n  \"companyId\": \"<integer>\",\n  \"isActive\": \"<boolean>\",\n  \"permissions\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"phone\": \"<string>\",\n  \"employeeDisplayId\": \"<string>\",\n  \"color\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/employees/update/:employeeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"employees",
												"update",
												":employeeId"
											],
											"variable": [
												{
													"key": "employeeId",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"role\": \"<integer>\",\n  \"companyId\": \"<integer>\",\n  \"isActive\": \"<boolean>\",\n  \"permissions\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"phone\": \"<string>\",\n  \"employeeDisplayId\": \"<string>\",\n  \"color\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/employees/update/:employeeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"employees",
														"update",
														":employeeId"
													],
													"variable": [
														{
															"key": "employeeId",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Feedback/post",
							"item": [
								{
									"name": "/api/mobile/v2/Feedback/post/feedback",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"message\": \"<string>\",\n  \"feedbackMessageType\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/Feedback/post/feedback",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"Feedback",
												"post",
												"feedback"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"message\": \"<string>\",\n  \"feedbackMessageType\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/Feedback/post/feedback",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"Feedback",
														"post",
														"feedback"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "/api/mobile/v2/Feedback/post/feedbackscore",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"score\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/Feedback/post/feedbackscore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"Feedback",
												"post",
												"feedbackscore"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"score\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/Feedback/post/feedbackscore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"Feedback",
														"post",
														"feedbackscore"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "invoice",
							"item": [
								{
									"name": "/api/mobile/v2/invoice/:invoiceId",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/invoice/:invoiceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"invoice",
												":invoiceId"
											],
											"variable": [
												{
													"key": "invoiceId",
													"value": "<uuid>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/invoice/:invoiceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"invoice",
														":invoiceId"
													],
													"variable": [
														{
															"key": "invoiceId",
															"value": "<uuid>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"dateCreated\": \"2009-12-19T15:31:38.901Z\",\n  \"dateUpdated\": \"1968-12-09T22:16:16.683Z\",\n  \"dateDeleted\": \"1962-06-13T06:57:04.749Z\",\n  \"remoteId\": -62767540,\n  \"invoiceId\": \"f1ad7848-72d7-0e65-f38a-deb25d627c6d\",\n  \"customerId\": -62688614,\n  \"invoiceDisplayId\": \"nisi aute sint\",\n  \"issueDate\": \"1951-06-19T02:35:14.020Z\",\n  \"dueDate\": \"1949-01-15T13:33:26.373Z\",\n  \"dueDateType\": -82426121,\n  \"status\": -40658338,\n  \"statusChangeDate\": \"2013-04-27T21:37:31.136Z\",\n  \"discountType\": -1114153,\n  \"discountValue\": -77252408.11459404,\n  \"message\": \"et adipisicing occaecat\",\n  \"footer\": \"reprehenderit elit nisi\",\n  \"jobList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quoteList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"sectionList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachmentList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"emailList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"transactionList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "/api/mobile/v2/invoice/syncpackage",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/invoice/syncpackage",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"invoice",
												"syncpackage"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/invoice/syncpackage",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"invoice",
														"syncpackage"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"inserts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"updates\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deletes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"syncDate\": \"1987-11-26T05:11:47.075Z\",\n  \"hasChanges\": false\n}"
										}
									]
								},
								{
									"name": "/api/mobile/v2/invoice/createList",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"invoiceId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customerId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"invoiceDisplayId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"issueDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dueDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dueDateType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"statusChangeDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"discountType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"discountValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"message\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"footer\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"quoteList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sectionList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachmentList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"emailList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"transactionList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"invoiceId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customerId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"invoiceDisplayId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"issueDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dueDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dueDateType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"statusChangeDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"discountType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"discountValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"message\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"footer\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"quoteList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sectionList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachmentList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"emailList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"transactionList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/invoice/createList",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"invoice",
												"createList"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"invoiceId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customerId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"invoiceDisplayId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"issueDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dueDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dueDateType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"statusChangeDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"discountType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"discountValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"message\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"footer\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"quoteList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sectionList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachmentList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"emailList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"transactionList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"invoiceId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customerId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"invoiceDisplayId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"issueDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dueDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dueDateType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"statusChangeDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"discountType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"discountValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"message\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"footer\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"quoteList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sectionList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachmentList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"emailList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"transactionList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/invoice/createList",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"invoice",
														"createList"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"serverId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"serverGuid\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"recordLevel\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"serverId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"serverGuid\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"recordLevel\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
										}
									]
								},
								{
									"name": "/api/mobile/v2/invoice/sendTransactionList",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"invoiceTransactionId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"invoiceId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"amount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"method\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"methodLabel\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"transactionDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"referenceNumber\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"wePayPaymentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"invoiceTransactionId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"invoiceId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"amount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"method\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"methodLabel\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"transactionDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"referenceNumber\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"wePayPaymentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/invoice/sendTransactionList",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"invoice",
												"sendTransactionList"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"invoiceTransactionId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"invoiceId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"amount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"method\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"methodLabel\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"transactionDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"referenceNumber\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"wePayPaymentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"invoiceTransactionId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"invoiceId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"amount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"method\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"methodLabel\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"transactionDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"referenceNumber\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"wePayPaymentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/invoice/sendTransactionList",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"invoice",
														"sendTransactionList"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"serverId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"recordLevel\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"serverId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"recordLevel\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
										}
									]
								},
								{
									"name": "/api/mobile/v2/invoice/sendInvoice",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"invoiceId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"recipients\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"subject\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"body\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sendCopyToMyself\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"invoiceId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"recipients\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"subject\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"body\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sendCopyToMyself\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/invoice/sendInvoice",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"invoice",
												"sendInvoice"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"invoiceId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"recipients\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"subject\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"body\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sendCopyToMyself\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"invoiceId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"recipients\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"subject\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"body\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sendCopyToMyself\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/invoice/sendInvoice",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"invoice",
														"sendInvoice"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"invoiceId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customerId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"invoiceDisplayId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"issueDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dueDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dueDateType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"statusChangeDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"discountType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"discountValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"message\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"footer\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"quoteList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sectionList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachmentList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"emailList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"transactionList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"invoiceId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customerId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"invoiceDisplayId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"issueDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dueDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dueDateType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"statusChangeDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"discountType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"discountValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"message\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"footer\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"quoteList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sectionList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachmentList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"emailList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"transactionList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
										}
									]
								}
							]
						},
						{
							"name": "quote",
							"item": [
								{
									"name": "/api/mobile/v2/quote/:quoteId",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/quote/:quoteId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"quote",
												":quoteId"
											],
											"variable": [
												{
													"key": "quoteId",
													"value": "<uuid>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/quote/:quoteId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"quote",
														":quoteId"
													],
													"variable": [
														{
															"key": "quoteId",
															"value": "<uuid>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"dateCreated\": \"1951-07-31T02:09:53.516Z\",\n  \"dateUpdated\": \"1952-08-05T00:04:02.124Z\",\n  \"dateDeleted\": \"2022-10-11T12:31:19.747Z\",\n  \"remoteId\": 44463148,\n  \"quoteId\": \"57241dde-4244-ad57-9427-8fabbd677c0c\",\n  \"customerId\": 11204099,\n  \"quoteDisplayId\": \"ullamco eu id\",\n  \"issueDate\": \"1955-07-20T03:47:44.224Z\",\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"statusChangeDate\": \"1948-06-06T05:27:48.933Z\",\n  \"discountType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"discountValue\": -48944697.31128308,\n  \"message\": \"sit laborum eiusmod nostrud consectetur\",\n  \"footer\": \"ex eiusmod\",\n  \"jobList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoiceList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"sectionList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"requestedChangeList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachmentList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"emailList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "/api/mobile/v2/quote/syncpackage",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/quote/syncpackage",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"quote",
												"syncpackage"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/quote/syncpackage",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"quote",
														"syncpackage"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"inserts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"updates\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deletes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"syncDate\": \"1987-11-26T05:11:47.075Z\",\n  \"hasChanges\": false\n}"
										}
									]
								},
								{
									"name": "/api/mobile/v2/quote/createList",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"quoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customerId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"quoteDisplayId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"issueDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"statusChangeDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"discountType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"discountValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"message\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"footer\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"invoiceList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sectionList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"requestedChangeList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachmentList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"emailList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"quoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customerId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"quoteDisplayId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"issueDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"statusChangeDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"discountType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"discountValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"message\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"footer\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"invoiceList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sectionList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"requestedChangeList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachmentList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"emailList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/quote/createList",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"quote",
												"createList"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"quoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customerId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"quoteDisplayId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"issueDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"statusChangeDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"discountType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"discountValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"message\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"footer\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"invoiceList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sectionList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"requestedChangeList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachmentList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"emailList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"quoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customerId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"quoteDisplayId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"issueDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"statusChangeDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"discountType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"discountValue\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"message\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"footer\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"invoiceList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sectionList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"requestedChangeList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachmentList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"emailList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/quote/createList",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"quote",
														"createList"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"serverId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"serverGuid\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"recordLevel\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"serverId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"serverGuid\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"recordLevel\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
										}
									]
								},
								{
									"name": "/api/mobile/v2/quote/requestedChangeList",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"quoteRequestedChangeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"quoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"message\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"quoteRequestedChangeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"quoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"message\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/quote/requestedChangeList",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"quote",
												"requestedChangeList"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"quoteRequestedChangeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"quoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"message\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"quoteRequestedChangeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"quoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"message\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/quote/requestedChangeList",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"quote",
														"requestedChangeList"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"serverId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"recordLevel\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"serverId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"recordLevel\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
										}
									]
								},
								{
									"name": "/api/mobile/v2/quote/statusHistory/createList",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"quoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"quoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/quote/statusHistory/createList",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"quote",
												"statusHistory",
												"createList"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"quoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"quoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/quote/statusHistory/createList",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"quote",
														"statusHistory",
														"createList"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  25028973,\n  68414774\n]"
										}
									]
								},
								{
									"name": "/api/mobile/v2/quote/sendQuote",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"quoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"recipients\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"subject\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"body\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sendCopyToMyself\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"quoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"recipients\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"subject\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"body\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sendCopyToMyself\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/quote/sendQuote",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"quote",
												"sendQuote"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"quoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"recipients\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"subject\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"body\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sendCopyToMyself\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"quoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"remoteId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"recipients\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"subject\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"body\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sendCopyToMyself\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/quote/sendQuote",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"quote",
														"sendQuote"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  25028973,\n  68414774\n]"
										}
									]
								},
								{
									"name": "/api/mobile/v2/quote/send-quote-email",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"quoteId\": \"<uuid>\",\n  \"remoteId\": \"<integer>\",\n  \"recipients\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"subject\": \"<string>\",\n  \"body\": \"<string>\",\n  \"sendCopyToMyself\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/quote/send-quote-email",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"quote",
												"send-quote-email"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"quoteId\": \"<uuid>\",\n  \"remoteId\": \"<integer>\",\n  \"recipients\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"subject\": \"<string>\",\n  \"body\": \"<string>\",\n  \"sendCopyToMyself\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/quote/send-quote-email",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"quote",
														"send-quote-email"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"dateCreated\": \"2015-11-19T01:16:12.023Z\",\n  \"dateUpdated\": \"1972-04-12T03:35:59.578Z\",\n  \"dateDeleted\": \"1988-04-03T12:19:34.551Z\",\n  \"remoteId\": 94589229,\n  \"quoteId\": \"58d62186-0d99-c7b4-400b-cccad9cf6de8\",\n  \"customerId\": 66790534,\n  \"quoteDisplayId\": \"reprehenderit\",\n  \"issueDate\": \"2013-06-29T08:27:09.120Z\",\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"statusChangeDate\": \"1978-05-11T17:51:34.999Z\",\n  \"discountType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"discountValue\": -11659082.616046041,\n  \"message\": \"a\",\n  \"footer\": \"pariatur magna\",\n  \"jobList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoiceList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"sectionList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"requestedChangeList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachmentList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"emailList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "/api/mobile/v2/quote/QuoteSettings",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/quote/QuoteSettings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"quote",
												"QuoteSettings"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/quote/QuoteSettings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"quote",
														"QuoteSettings"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"companyId\": 77101464,\n  \"quoteDisplayIdAuto\": 7106843,\n  \"invoiceDisplayIdAuto\": -30818807,\n  \"logoId\": \"urn:uuid:23084805-874d-41aa-6488-d85098097c42\",\n  \"companyDisplayName\": \"dolor magna sunt\",\n  \"email\": \"voluptate laboris\",\n  \"phone\": \"quis proident elit sed sint\",\n  \"quoteFooter\": \"do quis\",\n  \"invoiceFooter\": \"c\",\n  \"street\": \"voluptate cupidatat proident\",\n  \"city\": \"ipsum eiusmod nostrud\",\n  \"stateProvidence\": \"dolor mollit eu\",\n  \"country\": \"quis ipsu\",\n  \"postalCode\": \"veniam dolore aliqua officia\",\n  \"quoteEmailMessage\": \"enim ut\",\n  \"quoteEmailSubject\": \"Lorem est fugiat do\",\n  \"invoiceEmailMessage\": \"cillum magna minim nu\",\n  \"invoiceEmailSubject\": \"ex eiusmod\",\n  \"dateCreated\": \"1966-12-10T18:29:05.350Z\",\n  \"dateUpdated\": \"2007-09-24T14:28:40.306Z\",\n  \"dateDeleted\": \"1959-02-23T07:14:38.300Z\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "timeoff",
							"item": [
								{
									"name": "policies/{employeeId}",
									"item": [
										{
											"name": "/api/mobile/v2/timeoff/policies/:employeeId",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/timeoff/policies/:employeeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"timeoff",
														"policies",
														":employeeId"
													],
													"variable": [
														{
															"key": "employeeId",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/timeoff/policies/:employeeId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"timeoff",
																"policies",
																":employeeId"
															],
															"variable": [
																{
																	"key": "employeeId",
																	"value": "<integer>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"timeOffPolicyId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"companyId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"hoursRemaining\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"hoursAvailable\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"requestedHours\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"policy\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"accuralMethodDescription\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"timeOffPolicyId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"companyId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"hoursRemaining\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"hoursAvailable\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"requestedHours\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"policy\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"accuralMethodDescription\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
												}
											]
										},
										{
											"name": "/api/mobile/v2/timeoff/policies/:employeeId/:policyId",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/timeoff/policies/:employeeId/:policyId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"timeoff",
														"policies",
														":employeeId",
														":policyId"
													],
													"variable": [
														{
															"key": "policyId",
															"value": "<integer>",
															"description": "(Required) "
														},
														{
															"key": "employeeId",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/timeoff/policies/:employeeId/:policyId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"timeoff",
																"policies",
																":employeeId",
																":policyId"
															],
															"variable": [
																{
																	"key": "policyId",
																	"value": "<integer>",
																	"description": "(Required) "
																},
																{
																	"key": "employeeId",
																	"value": "<integer>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"timeOffPolicyId\": 52583382,\n  \"companyId\": -90664925,\n  \"employeeId\": -22133061,\n  \"hoursRemaining\": 85901907.14755797,\n  \"hoursAvailable\": -90163112.3002574,\n  \"requestedHours\": 1403243.5642413944,\n  \"policy\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"accuralMethodDescription\": \"mollit commodo\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "requests",
									"item": [
										{
											"name": "/api/mobile/v2/timeoff/requests/:policyId/:employeeId/:type",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/timeoff/requests/:policyId/:employeeId/:type",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"timeoff",
														"requests",
														":policyId",
														":employeeId",
														":type"
													],
													"variable": [
														{
															"key": "policyId",
															"value": "<integer>",
															"description": "(Required) "
														},
														{
															"key": "employeeId",
															"value": "<integer>",
															"description": "(Required) "
														},
														{
															"key": "type",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/timeoff/requests/:policyId/:employeeId/:type",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"timeoff",
																"requests",
																":policyId",
																":employeeId",
																":type"
															],
															"variable": [
																{
																	"key": "policyId",
																	"value": "<integer>",
																	"description": "(Required) "
																},
																{
																	"key": "employeeId",
																	"value": "<integer>",
																	"description": "(Required) "
																},
																{
																	"key": "type",
																	"value": "<integer>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"timeOffRequestId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"companyId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"timeOffPolicyId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"response\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"start\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"end\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"hoursTotal\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"approvingEmployeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"policy\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"timeOffDays\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"timeOffRequestId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"companyId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"timeOffPolicyId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"response\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"start\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"end\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"hoursTotal\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"approvingEmployeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"policy\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"timeOffDays\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
												}
											]
										},
										{
											"name": "/api/mobile/v2/timeoff/requests/:id",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/timeoff/requests/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"timeoff",
														"requests",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/timeoff/requests/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"timeoff",
																"requests",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<integer>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"timeOffRequestId\": 74762336,\n  \"companyId\": 84299236,\n  \"employeeId\": 93574336,\n  \"timeOffPolicyId\": 90374391,\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": \"ex laboris dolore\",\n  \"response\": \"non sint anim\",\n  \"start\": \"1957-10-06T12:43:28.708Z\",\n  \"end\": \"1961-07-06T09:43:27.443Z\",\n  \"hoursTotal\": -58819402.27419213,\n  \"approvingEmployeeId\": 96797623,\n  \"dateCreated\": \"1979-07-13T04:14:33.015Z\",\n  \"policy\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timeOffDays\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "/api/mobile/v2/timeoff/post/timeoffrequest",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"timeOffRequestId\": \"<integer>\",\n  \"companyId\": \"<integer>\",\n  \"employeeId\": \"<integer>\",\n  \"timeOffPolicyId\": \"<integer>\",\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": \"<string>\",\n  \"response\": \"<string>\",\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"hoursTotal\": \"<double>\",\n  \"approvingEmployeeId\": \"<integer>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"policy\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timeOffDays\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/timeoff/post/timeoffrequest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"timeoff",
												"post",
												"timeoffrequest"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"timeOffRequestId\": \"<integer>\",\n  \"companyId\": \"<integer>\",\n  \"employeeId\": \"<integer>\",\n  \"timeOffPolicyId\": \"<integer>\",\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": \"<string>\",\n  \"response\": \"<string>\",\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"hoursTotal\": \"<double>\",\n  \"approvingEmployeeId\": \"<integer>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"policy\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timeOffDays\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/timeoff/post/timeoffrequest",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"timeoff",
														"post",
														"timeoffrequest"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payload\": \"in cupidatat nisi magna\"\n}"
										}
									]
								},
								{
									"name": "/api/mobile/v2/timeoff/delete/timeoffrequest/:id",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/timeoff/delete/timeoffrequest/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"timeoff",
												"delete",
												"timeoffrequest",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/timeoff/delete/timeoffrequest/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"timeoff",
														"delete",
														"timeoffrequest",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payload\": \"in cupidatat nisi magna\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "sync/clockevents",
							"item": [
								{
									"name": "post",
									"item": [
										{
											"name": "/api/mobile/v2/sync/clockevents/post/deviceclockchanges",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"utcDeviceTime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"timeZone\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"utcDeviceTime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"timeZone\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/sync/clockevents/post/deviceclockchanges",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"sync",
														"clockevents",
														"post",
														"deviceclockchanges"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"utcDeviceTime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"timeZone\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"utcDeviceTime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"timeZone\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/sync/clockevents/post/deviceclockchanges",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"sync",
																"clockevents",
																"post",
																"deviceclockchanges"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "/api/mobile/v2/sync/clockevents/post/gpstrak/:clockEventId",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"latitude\": \"<double>\",\n  \"longitude\": \"<double>\",\n  \"accuracy\": \"<double>\",\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timeStamp\": \"<dateTime>\",\n  \"timeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timeZoneId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/sync/clockevents/post/gpstrak/:clockEventId?notifyId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"sync",
														"clockevents",
														"post",
														"gpstrak",
														":clockEventId"
													],
													"query": [
														{
															"key": "notifyId",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "clockEventId",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"latitude\": \"<double>\",\n  \"longitude\": \"<double>\",\n  \"accuracy\": \"<double>\",\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timeStamp\": \"<dateTime>\",\n  \"timeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timeZoneId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/sync/clockevents/post/gpstrak/:clockEventId?notifyId=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"sync",
																"clockevents",
																"post",
																"gpstrak",
																":clockEventId"
															],
															"query": [
																{
																	"key": "notifyId",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "clockEventId",
																	"value": "<integer>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "-5836541"
												}
											]
										},
										{
											"name": "/api/mobile/v2/sync/clockevents/post/location",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"clockEventId\": \"<integer>\",\n  \"employeeId\": \"<integer>\",\n  \"latitude\": \"<double>\",\n  \"longitude\": \"<double>\",\n  \"accuracy\": \"<double>\",\n  \"timeStamp\": \"<dateTime>\",\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timeZoneId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/sync/clockevents/post/location",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"sync",
														"clockevents",
														"post",
														"location"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"clockEventId\": \"<integer>\",\n  \"employeeId\": \"<integer>\",\n  \"latitude\": \"<double>\",\n  \"longitude\": \"<double>\",\n  \"accuracy\": \"<double>\",\n  \"timeStamp\": \"<dateTime>\",\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timeZoneId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/sync/clockevents/post/location",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"sync",
																"clockevents",
																"post",
																"location"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "-5836541"
												}
											]
										},
										{
											"name": "/api/mobile/v2/sync/clockevents/post/attachment",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"attachmentId\": \"<uuid>\",\n  \"clockEventId\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/sync/clockevents/post/attachment",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"sync",
														"clockevents",
														"post",
														"attachment"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"attachmentId\": \"<uuid>\",\n  \"clockEventId\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/sync/clockevents/post/attachment",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"sync",
																"clockevents",
																"post",
																"attachment"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "/api/mobile/v2/sync/clockevents/post/attachments/:id",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"attachmentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"clockEventId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"attachmentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"clockEventId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/sync/clockevents/post/attachments/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"sync",
														"clockevents",
														"post",
														"attachments",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"attachmentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"clockEventId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"attachmentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"clockEventId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/sync/clockevents/post/attachments/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"sync",
																"clockevents",
																"post",
																"attachments",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<integer>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "/api/mobile/v2/sync/clockevents/post/facecapture",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"clockEventId\": \"<integer>\",\n  \"attachmentId\": \"<uuid>\",\n  \"attachment\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"state\": \"<integer>\",\n  \"captureAction\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/sync/clockevents/post/facecapture",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"sync",
														"clockevents",
														"post",
														"facecapture"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"clockEventId\": \"<integer>\",\n  \"attachmentId\": \"<uuid>\",\n  \"attachment\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"state\": \"<integer>\",\n  \"captureAction\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/sync/clockevents/post/facecapture",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"sync",
																"clockevents",
																"post",
																"facecapture"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "true"
												}
											]
										},
										{
											"name": "/api/mobile/v2/sync/clockevents/post/break",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"clockEventBreakId\": \"<integer>\",\n  \"clockEventId\": \"<integer>\",\n  \"breakType\": \"<integer>\",\n  \"isPaid\": \"<boolean>\",\n  \"start\": \"<dateTime>\",\n  \"startPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"end\": \"<dateTime>\",\n  \"endPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"minutes\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/sync/clockevents/post/break",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"sync",
														"clockevents",
														"post",
														"break"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"clockEventBreakId\": \"<integer>\",\n  \"clockEventId\": \"<integer>\",\n  \"breakType\": \"<integer>\",\n  \"isPaid\": \"<boolean>\",\n  \"start\": \"<dateTime>\",\n  \"startPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"end\": \"<dateTime>\",\n  \"endPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"minutes\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/sync/clockevents/post/break",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"sync",
																"clockevents",
																"post",
																"break"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "-5836541"
												}
											]
										},
										{
											"name": "/api/mobile/v2/sync/clockevents/post/breaks",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"clockEventBreakId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"clockEventId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"breakType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isPaid\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"start\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startPosition\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"end\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endPosition\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"minutes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"clockEventBreakId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"clockEventId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"breakType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isPaid\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"start\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startPosition\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"end\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endPosition\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"minutes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/sync/clockevents/post/breaks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"sync",
														"clockevents",
														"post",
														"breaks"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"clockEventBreakId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"clockEventId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"breakType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isPaid\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"start\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startPosition\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"end\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endPosition\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"minutes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"clockEventBreakId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"clockEventId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"breakType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isPaid\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"start\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startPosition\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"end\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endPosition\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"minutes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/sync/clockevents/post/breaks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"sync",
																"clockevents",
																"post",
																"breaks"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"ad9\": -1115060,\n  \"ut_0b\": 26252156\n}"
												}
											]
										},
										{
											"name": "/api/mobile/v2/sync/clockevents/post/clockevent",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"currentStatus\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"result\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"clockEventId\": \"<integer>\",\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeId\": \"<integer>\",\n  \"employeeName\": \"<string>\",\n  \"employeeColor\": \"<string>\",\n  \"jobId\": \"<integer>\",\n  \"jobName\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"taskId\": \"<integer>\",\n  \"taskName\": \"<string>\",\n  \"previousClockEventId\": \"<integer>\",\n  \"actingEmployeeId\": \"<integer>\",\n  \"notes\": \"<string>\",\n  \"minutesBillable\": \"<integer>\",\n  \"minutes\": \"<integer>\",\n  \"eventType\": \"<integer>\",\n  \"startPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"job\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"task\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"breaks\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"locations\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"exceptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceAttachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"edits\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"timeChanges\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attestationResponses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deviceUtcTime\": \"<dateTime>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"createdDate\": \"<dateTime>\",\n  \"startTimeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTimeZoneId\": \"<string>\",\n  \"endTimeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTimeZoneId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/sync/clockevents/post/clockevent",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"sync",
														"clockevents",
														"post",
														"clockevent"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"currentStatus\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"result\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"clockEventId\": \"<integer>\",\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeId\": \"<integer>\",\n  \"employeeName\": \"<string>\",\n  \"employeeColor\": \"<string>\",\n  \"jobId\": \"<integer>\",\n  \"jobName\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"taskId\": \"<integer>\",\n  \"taskName\": \"<string>\",\n  \"previousClockEventId\": \"<integer>\",\n  \"actingEmployeeId\": \"<integer>\",\n  \"notes\": \"<string>\",\n  \"minutesBillable\": \"<integer>\",\n  \"minutes\": \"<integer>\",\n  \"eventType\": \"<integer>\",\n  \"startPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"job\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"task\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"breaks\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"locations\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"exceptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceAttachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"edits\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"timeChanges\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attestationResponses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deviceUtcTime\": \"<dateTime>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"createdDate\": \"<dateTime>\",\n  \"startTimeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTimeZoneId\": \"<string>\",\n  \"endTimeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTimeZoneId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/sync/clockevents/post/clockevent",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"sync",
																"clockevents",
																"post",
																"clockevent"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"currentStatus\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"result\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"clockEventId\": \"<integer>\",\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeId\": \"<integer>\",\n  \"employeeName\": \"<string>\",\n  \"employeeColor\": \"<string>\",\n  \"jobId\": \"<integer>\",\n  \"jobName\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"taskId\": \"<integer>\",\n  \"taskName\": \"<string>\",\n  \"previousClockEventId\": \"<integer>\",\n  \"actingEmployeeId\": \"<integer>\",\n  \"notes\": \"<string>\",\n  \"minutesBillable\": \"<integer>\",\n  \"minutes\": \"<integer>\",\n  \"eventType\": \"<integer>\",\n  \"startPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"job\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"task\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"breaks\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"locations\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"exceptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceAttachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"edits\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"timeChanges\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attestationResponses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deviceUtcTime\": \"<dateTime>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"createdDate\": \"<dateTime>\",\n  \"startTimeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTimeZoneId\": \"<string>\",\n  \"endTimeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTimeZoneId\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "/api/mobile/v2/sync/clockevents/post/clockevents",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"currentStatus\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"result\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"clockEventId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"start\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"end\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeColor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobNumber\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"taskId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"taskName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"previousClockEventId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"actingEmployeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"notes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"minutesBillable\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"minutes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startPosition\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endPosition\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"job\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"task\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"breaks\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"locations\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"exceptions\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"faceAttachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"edits\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"timeChanges\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attestationResponses\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"deviceUtcTime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"updatedDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"createdDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTimeZoneOffset\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTimeZoneId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTimeZoneOffset\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTimeZoneId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"currentStatus\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"result\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"clockEventId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"start\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"end\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeColor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobNumber\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"taskId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"taskName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"previousClockEventId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"actingEmployeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"notes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"minutesBillable\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"minutes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startPosition\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endPosition\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"job\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"task\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"breaks\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"locations\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"exceptions\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"faceAttachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"edits\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"timeChanges\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attestationResponses\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"deviceUtcTime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"updatedDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"createdDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTimeZoneOffset\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTimeZoneId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTimeZoneOffset\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTimeZoneId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/sync/clockevents/post/clockevents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"sync",
														"clockevents",
														"post",
														"clockevents"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"currentStatus\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"result\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"clockEventId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"start\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"end\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeColor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobNumber\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"taskId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"taskName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"previousClockEventId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"actingEmployeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"notes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"minutesBillable\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"minutes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startPosition\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endPosition\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"job\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"task\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"breaks\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"locations\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"exceptions\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"faceAttachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"edits\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"timeChanges\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attestationResponses\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"deviceUtcTime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"updatedDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"createdDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTimeZoneOffset\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTimeZoneId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTimeZoneOffset\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTimeZoneId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"currentStatus\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"result\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"clockEventId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"start\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"end\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeColor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobNumber\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"taskId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"taskName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"previousClockEventId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"actingEmployeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"notes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"minutesBillable\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"minutes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startPosition\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endPosition\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"job\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"task\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"breaks\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"locations\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"exceptions\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"faceAttachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"edits\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"timeChanges\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attestationResponses\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"deviceUtcTime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"updatedDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"createdDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTimeZoneOffset\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTimeZoneId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTimeZoneOffset\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTimeZoneId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/sync/clockevents/post/clockevents",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"sync",
																"clockevents",
																"post",
																"clockevents"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"currentStatus\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"result\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"clockEventId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"start\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"end\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeColor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobNumber\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"taskId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"taskName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"previousClockEventId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"actingEmployeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"notes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"minutesBillable\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"minutes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startPosition\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endPosition\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"job\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"task\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"breaks\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"locations\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"exceptions\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"faceAttachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"edits\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"timeChanges\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attestationResponses\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"deviceUtcTime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"updatedDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"createdDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTimeZoneOffset\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTimeZoneId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTimeZoneOffset\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTimeZoneId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"currentStatus\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"result\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"clockEventId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"start\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"end\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeColor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobNumber\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"taskId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"taskName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"previousClockEventId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"actingEmployeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"notes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"minutesBillable\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"minutes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startPosition\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endPosition\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"job\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"task\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"breaks\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"locations\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"exceptions\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"faceAttachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"edits\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"timeChanges\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attestationResponses\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"deviceUtcTime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"updatedDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"createdDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTimeZoneOffset\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTimeZoneId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTimeZoneOffset\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTimeZoneId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "/api/mobile/v2/sync/clockevents/delete/clockEvent/:ceId/attachment/:attId",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/sync/clockevents/delete/clockEvent/:ceId/attachment/:attId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"sync",
												"clockevents",
												"delete",
												"clockEvent",
												":ceId",
												"attachment",
												":attId"
											],
											"variable": [
												{
													"key": "ceId",
													"value": "<integer>",
													"description": "(Required) "
												},
												{
													"key": "attId",
													"value": "<uuid>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/sync/clockevents/delete/clockEvent/:ceId/attachment/:attId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"sync",
														"clockevents",
														"delete",
														"clockEvent",
														":ceId",
														"attachment",
														":attId"
													],
													"variable": [
														{
															"key": "ceId",
															"value": "<integer>",
															"description": "(Required) "
														},
														{
															"key": "attId",
															"value": "<uuid>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "auth",
							"item": [
								{
									"name": "login",
									"item": [
										{
											"name": "/api/mobile/v2/auth/login",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/auth/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"auth",
														"login"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/auth/login",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"auth",
																"login"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "/api/mobile/v2/auth/login/link",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/auth/login/link",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"auth",
														"login",
														"link"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/auth/login/link",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"auth",
																"login",
																"link"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorMessage\": \"veniam in\",\n  \"authenticatedEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "password",
									"item": [
										{
											"name": "/api/mobile/v2/auth/password/link",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/auth/password/link",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"auth",
														"password",
														"link"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/auth/password/link",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"auth",
																"password",
																"link"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "/api/mobile/v2/auth/password/token",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/auth/password/token",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"auth",
														"password",
														"token"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/auth/password/token",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"auth",
																"password",
																"token"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"token\": \"cillum pariatur\"\n}"
												}
											]
										},
										{
											"name": "/api/mobile/v2/auth/password/change",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"newPassword\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/auth/password/change",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"auth",
														"password",
														"change"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"newPassword\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/auth/password/change",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"auth",
																"password",
																"change"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": -28443099,\n  \"errorMessage\": \"nulla veni\",\n  \"token\": \"in aute id\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "get",
									"item": [
										{
											"name": "/api/mobile/v2/auth/get/permissions",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/auth/get/permissions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"auth",
														"get",
														"permissions"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/auth/get/permissions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"auth",
																"get",
																"permissions"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"employeeId\": 79001751,\n  \"mobileJobAdd\": false,\n  \"mobileTaskAdd\": true,\n  \"mobileCrewManage\": false,\n  \"locationServicesRequired\": true,\n  \"locationInBackground\": false,\n  \"editOwnTime\": false,\n  \"editOwnTimeNotes\": true,\n  \"editJobs\": false,\n  \"editCustomers\": true,\n  \"viewQuotes\": false,\n  \"editQuotes\": true,\n  \"viewInvoices\": false,\n  \"editInvoices\": false,\n  \"kioskEnabled\": true,\n  \"kioskRole\": 40238411,\n  \"requirePhotoCapture\": false,\n  \"approveTime\": true,\n  \"viewWhosWorking\": false,\n  \"viewTimeSheets\": true,\n  \"editTimeSheets\": false,\n  \"viewSchedules\": false,\n  \"editSchedules\": true,\n  \"restrictionTypeEmployee\": -19280425,\n  \"restrictEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"usesTimeOff\": false\n}"
												}
											]
										},
										{
											"name": "/api/mobile/v2/auth/get/companysetings",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/auth/get/companysetings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"auth",
														"get",
														"companysetings"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/auth/get/companysetings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"auth",
																"get",
																"companysetings"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"companyId\": 94824263,\n  \"name\": \"sit proident\",\n  \"timeRounding\": -18278996,\n  \"autoBreakMinutes\": -26970229,\n  \"autoBreakThresholdMinutes\": -59638019,\n  \"jobStages\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"signupStep\": 23399155\n}"
												}
											]
										}
									]
								},
								{
									"name": "/api/mobile/v2/auth/loginV2",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/auth/loginV2",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"auth",
												"loginV2"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/auth/loginV2",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"auth",
														"loginV2"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"responseDate\": \"1974-05-08T00:00:32.502Z\",\n  \"model\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
										}
									]
								},
								{
									"name": "/api/mobile/v2/auth/link",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/auth/link",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"auth",
												"link"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/auth/link",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"auth",
														"link"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "/api/mobile/v2/auth/send-reset-password",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/auth/send-reset-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"auth",
												"send-reset-password"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/auth/send-reset-password",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"auth",
														"send-reset-password"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "clockevents",
							"item": [
								{
									"name": "get",
									"item": [
										{
											"name": "{id}",
											"item": [
												{
													"name": "/api/mobile/v2/clockevents/get/:id",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/plain"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/clockevents/get/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"clockevents",
																"get",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<integer>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/mobile/v2/clockevents/get/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"mobile",
																		"v2",
																		"clockevents",
																		"get",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<integer>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"currentStatus\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"result\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"clockEventId\": \"<integer>\",\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeId\": \"<integer>\",\n  \"employeeName\": \"<string>\",\n  \"employeeColor\": \"<string>\",\n  \"jobId\": \"<integer>\",\n  \"jobName\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"taskId\": \"<integer>\",\n  \"taskName\": \"<string>\",\n  \"previousClockEventId\": \"<integer>\",\n  \"actingEmployeeId\": \"<integer>\",\n  \"notes\": \"<string>\",\n  \"minutesBillable\": \"<integer>\",\n  \"minutes\": \"<integer>\",\n  \"eventType\": \"<integer>\",\n  \"startPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"job\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"task\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"breaks\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"locations\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"exceptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceAttachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"edits\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"timeChanges\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attestationResponses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deviceUtcTime\": \"<dateTime>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"createdDate\": \"<dateTime>\",\n  \"startTimeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTimeZoneId\": \"<string>\",\n  \"endTimeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTimeZoneId\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "/api/mobile/v2/clockevents/get/:id/mn2",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/plain"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/clockevents/get/:id/mn2",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"clockevents",
																"get",
																":id",
																"mn2"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<integer>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/mobile/v2/clockevents/get/:id/mn2",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"mobile",
																		"v2",
																		"clockevents",
																		"get",
																		":id",
																		"mn2"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<integer>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"currentStatus\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"result\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"clockEventId\": \"<integer>\",\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeId\": \"<integer>\",\n  \"employeeName\": \"<string>\",\n  \"employeeColor\": \"<string>\",\n  \"jobId\": \"<integer>\",\n  \"jobName\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"taskId\": \"<integer>\",\n  \"taskName\": \"<string>\",\n  \"previousClockEventId\": \"<integer>\",\n  \"actingEmployeeId\": \"<integer>\",\n  \"notes\": \"<string>\",\n  \"minutesBillable\": \"<integer>\",\n  \"minutes\": \"<integer>\",\n  \"eventType\": \"<integer>\",\n  \"startPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"job\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"task\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"breaks\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"locations\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"exceptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceAttachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"edits\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"timeChanges\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attestationResponses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deviceUtcTime\": \"<dateTime>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"createdDate\": \"<dateTime>\",\n  \"startTimeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTimeZoneId\": \"<string>\",\n  \"endTimeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTimeZoneId\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "/api/mobile/v2/clockevents/get",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/clockevents/get",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"clockevents",
														"get"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/clockevents/get",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"clockevents",
																"get"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"currentStatus\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"result\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"clockEventId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"start\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"end\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeColor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobNumber\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"taskId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"taskName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"previousClockEventId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"actingEmployeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"notes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"minutesBillable\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"minutes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startPosition\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endPosition\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"job\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"task\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"breaks\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"locations\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"exceptions\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"faceAttachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"edits\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"timeChanges\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attestationResponses\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"deviceUtcTime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"updatedDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"createdDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTimeZoneOffset\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTimeZoneId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTimeZoneOffset\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTimeZoneId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"currentStatus\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"result\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"clockEventId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"start\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"end\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeColor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobNumber\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"taskId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"taskName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"previousClockEventId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"actingEmployeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"notes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"minutesBillable\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"minutes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startPosition\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endPosition\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"job\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"task\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"breaks\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"locations\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"exceptions\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"faceAttachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"edits\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"timeChanges\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attestationResponses\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"deviceUtcTime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"updatedDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"createdDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTimeZoneOffset\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTimeZoneId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTimeZoneOffset\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTimeZoneId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
												}
											]
										},
										{
											"name": "/api/mobile/v2/clockevents/get/inprogress",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/clockevents/get/inprogress",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"clockevents",
														"get",
														"inprogress"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/clockevents/get/inprogress",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"clockevents",
																"get",
																"inprogress"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"currentStatus\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"result\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"clockEventId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"start\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"end\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeColor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobNumber\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"taskId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"taskName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"previousClockEventId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"actingEmployeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"notes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"minutesBillable\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"minutes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startPosition\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endPosition\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"job\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"task\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"breaks\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"locations\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"exceptions\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"faceAttachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"edits\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"timeChanges\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attestationResponses\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"deviceUtcTime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"updatedDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"createdDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTimeZoneOffset\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTimeZoneId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTimeZoneOffset\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTimeZoneId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"currentStatus\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"result\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"clockEventId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"start\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"end\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeColor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobNumber\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"taskId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"taskName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"previousClockEventId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"actingEmployeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"notes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"minutesBillable\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"minutes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startPosition\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endPosition\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"job\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"task\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"breaks\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"locations\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"exceptions\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"faceAttachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"edits\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"timeChanges\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attestationResponses\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"deviceUtcTime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"updatedDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"createdDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTimeZoneOffset\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTimeZoneId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTimeZoneOffset\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTimeZoneId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "create",
									"item": [
										{
											"name": "/api/mobile/v2/clockevents/create",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"currentStatus\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"result\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"clockEventId\": \"<integer>\",\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeId\": \"<integer>\",\n  \"employeeName\": \"<string>\",\n  \"employeeColor\": \"<string>\",\n  \"jobId\": \"<integer>\",\n  \"jobName\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"taskId\": \"<integer>\",\n  \"taskName\": \"<string>\",\n  \"previousClockEventId\": \"<integer>\",\n  \"actingEmployeeId\": \"<integer>\",\n  \"notes\": \"<string>\",\n  \"minutesBillable\": \"<integer>\",\n  \"minutes\": \"<integer>\",\n  \"eventType\": \"<integer>\",\n  \"startPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"job\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"task\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"breaks\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"locations\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"exceptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceAttachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"edits\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"timeChanges\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attestationResponses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deviceUtcTime\": \"<dateTime>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"createdDate\": \"<dateTime>\",\n  \"startTimeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTimeZoneId\": \"<string>\",\n  \"endTimeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTimeZoneId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/clockevents/create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"clockevents",
														"create"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"currentStatus\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"result\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"clockEventId\": \"<integer>\",\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeId\": \"<integer>\",\n  \"employeeName\": \"<string>\",\n  \"employeeColor\": \"<string>\",\n  \"jobId\": \"<integer>\",\n  \"jobName\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"taskId\": \"<integer>\",\n  \"taskName\": \"<string>\",\n  \"previousClockEventId\": \"<integer>\",\n  \"actingEmployeeId\": \"<integer>\",\n  \"notes\": \"<string>\",\n  \"minutesBillable\": \"<integer>\",\n  \"minutes\": \"<integer>\",\n  \"eventType\": \"<integer>\",\n  \"startPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"job\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"task\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"breaks\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"locations\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"exceptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceAttachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"edits\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"timeChanges\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attestationResponses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deviceUtcTime\": \"<dateTime>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"createdDate\": \"<dateTime>\",\n  \"startTimeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTimeZoneId\": \"<string>\",\n  \"endTimeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTimeZoneId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/clockevents/create",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"clockevents",
																"create"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"currentStatus\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"result\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"clockEventId\": \"<integer>\",\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeId\": \"<integer>\",\n  \"employeeName\": \"<string>\",\n  \"employeeColor\": \"<string>\",\n  \"jobId\": \"<integer>\",\n  \"jobName\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"taskId\": \"<integer>\",\n  \"taskName\": \"<string>\",\n  \"previousClockEventId\": \"<integer>\",\n  \"actingEmployeeId\": \"<integer>\",\n  \"notes\": \"<string>\",\n  \"minutesBillable\": \"<integer>\",\n  \"minutes\": \"<integer>\",\n  \"eventType\": \"<integer>\",\n  \"startPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"job\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"task\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"breaks\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"locations\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"exceptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceAttachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"edits\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"timeChanges\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attestationResponses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deviceUtcTime\": \"<dateTime>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"createdDate\": \"<dateTime>\",\n  \"startTimeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTimeZoneId\": \"<string>\",\n  \"endTimeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTimeZoneId\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "/api/mobile/v2/clockevents/create/mn2",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"currentStatus\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"result\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"clockEventId\": \"<integer>\",\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeId\": \"<integer>\",\n  \"employeeName\": \"<string>\",\n  \"employeeColor\": \"<string>\",\n  \"jobId\": \"<integer>\",\n  \"jobName\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"taskId\": \"<integer>\",\n  \"taskName\": \"<string>\",\n  \"previousClockEventId\": \"<integer>\",\n  \"actingEmployeeId\": \"<integer>\",\n  \"notes\": \"<string>\",\n  \"minutesBillable\": \"<integer>\",\n  \"minutes\": \"<integer>\",\n  \"eventType\": \"<integer>\",\n  \"startPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"job\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"task\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"breaks\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"locations\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"exceptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceAttachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"edits\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"timeChanges\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attestationResponses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deviceUtcTime\": \"<dateTime>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"createdDate\": \"<dateTime>\",\n  \"startTimeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTimeZoneId\": \"<string>\",\n  \"endTimeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTimeZoneId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/clockevents/create/mn2",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"clockevents",
														"create",
														"mn2"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"currentStatus\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"result\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"clockEventId\": \"<integer>\",\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeId\": \"<integer>\",\n  \"employeeName\": \"<string>\",\n  \"employeeColor\": \"<string>\",\n  \"jobId\": \"<integer>\",\n  \"jobName\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"taskId\": \"<integer>\",\n  \"taskName\": \"<string>\",\n  \"previousClockEventId\": \"<integer>\",\n  \"actingEmployeeId\": \"<integer>\",\n  \"notes\": \"<string>\",\n  \"minutesBillable\": \"<integer>\",\n  \"minutes\": \"<integer>\",\n  \"eventType\": \"<integer>\",\n  \"startPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"job\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"task\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"breaks\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"locations\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"exceptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceAttachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"edits\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"timeChanges\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attestationResponses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deviceUtcTime\": \"<dateTime>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"createdDate\": \"<dateTime>\",\n  \"startTimeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTimeZoneId\": \"<string>\",\n  \"endTimeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTimeZoneId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/clockevents/create/mn2",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"clockevents",
																"create",
																"mn2"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "update",
									"item": [
										{
											"name": "own/timesheet",
											"item": [
												{
													"name": "/api/mobile/v2/clockevents/update/own/timesheet/notes",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"currentStatus\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"result\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"clockEventId\": \"<integer>\",\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeId\": \"<integer>\",\n  \"employeeName\": \"<string>\",\n  \"employeeColor\": \"<string>\",\n  \"jobId\": \"<integer>\",\n  \"jobName\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"taskId\": \"<integer>\",\n  \"taskName\": \"<string>\",\n  \"previousClockEventId\": \"<integer>\",\n  \"actingEmployeeId\": \"<integer>\",\n  \"notes\": \"<string>\",\n  \"minutesBillable\": \"<integer>\",\n  \"minutes\": \"<integer>\",\n  \"eventType\": \"<integer>\",\n  \"startPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"job\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"task\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"breaks\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"locations\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"exceptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceAttachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"edits\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"timeChanges\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attestationResponses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deviceUtcTime\": \"<dateTime>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"createdDate\": \"<dateTime>\",\n  \"startTimeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTimeZoneId\": \"<string>\",\n  \"endTimeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTimeZoneId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/clockevents/update/own/timesheet/notes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"clockevents",
																"update",
																"own",
																"timesheet",
																"notes"
															]
														}
													},
													"response": [
														{
															"name": "Success",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"currentStatus\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"result\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"clockEventId\": \"<integer>\",\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeId\": \"<integer>\",\n  \"employeeName\": \"<string>\",\n  \"employeeColor\": \"<string>\",\n  \"jobId\": \"<integer>\",\n  \"jobName\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"taskId\": \"<integer>\",\n  \"taskName\": \"<string>\",\n  \"previousClockEventId\": \"<integer>\",\n  \"actingEmployeeId\": \"<integer>\",\n  \"notes\": \"<string>\",\n  \"minutesBillable\": \"<integer>\",\n  \"minutes\": \"<integer>\",\n  \"eventType\": \"<integer>\",\n  \"startPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"job\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"task\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"breaks\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"locations\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"exceptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceAttachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"edits\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"timeChanges\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attestationResponses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deviceUtcTime\": \"<dateTime>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"createdDate\": \"<dateTime>\",\n  \"startTimeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTimeZoneId\": \"<string>\",\n  \"endTimeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTimeZoneId\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/mobile/v2/clockevents/update/own/timesheet/notes",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"mobile",
																		"v2",
																		"clockevents",
																		"update",
																		"own",
																		"timesheet",
																		"notes"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "/api/mobile/v2/clockevents/update/own/timesheet/notesandattachments",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"currentStatus\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"result\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"clockEventId\": \"<integer>\",\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeId\": \"<integer>\",\n  \"employeeName\": \"<string>\",\n  \"employeeColor\": \"<string>\",\n  \"jobId\": \"<integer>\",\n  \"jobName\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"taskId\": \"<integer>\",\n  \"taskName\": \"<string>\",\n  \"previousClockEventId\": \"<integer>\",\n  \"actingEmployeeId\": \"<integer>\",\n  \"notes\": \"<string>\",\n  \"minutesBillable\": \"<integer>\",\n  \"minutes\": \"<integer>\",\n  \"eventType\": \"<integer>\",\n  \"startPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"job\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"task\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"breaks\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"locations\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"exceptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceAttachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"edits\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"timeChanges\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attestationResponses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deviceUtcTime\": \"<dateTime>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"createdDate\": \"<dateTime>\",\n  \"startTimeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTimeZoneId\": \"<string>\",\n  \"endTimeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTimeZoneId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/clockevents/update/own/timesheet/notesandattachments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"clockevents",
																"update",
																"own",
																"timesheet",
																"notesandattachments"
															]
														}
													},
													"response": [
														{
															"name": "Success",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"currentStatus\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"result\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"clockEventId\": \"<integer>\",\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeId\": \"<integer>\",\n  \"employeeName\": \"<string>\",\n  \"employeeColor\": \"<string>\",\n  \"jobId\": \"<integer>\",\n  \"jobName\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"taskId\": \"<integer>\",\n  \"taskName\": \"<string>\",\n  \"previousClockEventId\": \"<integer>\",\n  \"actingEmployeeId\": \"<integer>\",\n  \"notes\": \"<string>\",\n  \"minutesBillable\": \"<integer>\",\n  \"minutes\": \"<integer>\",\n  \"eventType\": \"<integer>\",\n  \"startPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"job\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"task\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"breaks\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"locations\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"exceptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceAttachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"edits\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"timeChanges\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attestationResponses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deviceUtcTime\": \"<dateTime>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"createdDate\": \"<dateTime>\",\n  \"startTimeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTimeZoneId\": \"<string>\",\n  \"endTimeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTimeZoneId\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/mobile/v2/clockevents/update/own/timesheet/notesandattachments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"mobile",
																		"v2",
																		"clockevents",
																		"update",
																		"own",
																		"timesheet",
																		"notesandattachments"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "/api/mobile/v2/clockevents/update",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"currentStatus\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"result\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"clockEventId\": \"<integer>\",\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeId\": \"<integer>\",\n  \"employeeName\": \"<string>\",\n  \"employeeColor\": \"<string>\",\n  \"jobId\": \"<integer>\",\n  \"jobName\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"taskId\": \"<integer>\",\n  \"taskName\": \"<string>\",\n  \"previousClockEventId\": \"<integer>\",\n  \"actingEmployeeId\": \"<integer>\",\n  \"notes\": \"<string>\",\n  \"minutesBillable\": \"<integer>\",\n  \"minutes\": \"<integer>\",\n  \"eventType\": \"<integer>\",\n  \"startPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"job\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"task\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"breaks\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"locations\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"exceptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceAttachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"edits\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"timeChanges\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attestationResponses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deviceUtcTime\": \"<dateTime>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"createdDate\": \"<dateTime>\",\n  \"startTimeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTimeZoneId\": \"<string>\",\n  \"endTimeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTimeZoneId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/clockevents/update",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"clockevents",
														"update"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"currentStatus\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"result\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"clockEventId\": \"<integer>\",\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeId\": \"<integer>\",\n  \"employeeName\": \"<string>\",\n  \"employeeColor\": \"<string>\",\n  \"jobId\": \"<integer>\",\n  \"jobName\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"taskId\": \"<integer>\",\n  \"taskName\": \"<string>\",\n  \"previousClockEventId\": \"<integer>\",\n  \"actingEmployeeId\": \"<integer>\",\n  \"notes\": \"<string>\",\n  \"minutesBillable\": \"<integer>\",\n  \"minutes\": \"<integer>\",\n  \"eventType\": \"<integer>\",\n  \"startPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"job\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"task\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"breaks\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"locations\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"exceptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceAttachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"edits\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"timeChanges\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attestationResponses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deviceUtcTime\": \"<dateTime>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"createdDate\": \"<dateTime>\",\n  \"startTimeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTimeZoneId\": \"<string>\",\n  \"endTimeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTimeZoneId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/clockevents/update",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"clockevents",
																"update"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "/api/mobile/v2/clockevents/update/mn2",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"currentStatus\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"result\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"clockEventId\": \"<integer>\",\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeId\": \"<integer>\",\n  \"employeeName\": \"<string>\",\n  \"employeeColor\": \"<string>\",\n  \"jobId\": \"<integer>\",\n  \"jobName\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"taskId\": \"<integer>\",\n  \"taskName\": \"<string>\",\n  \"previousClockEventId\": \"<integer>\",\n  \"actingEmployeeId\": \"<integer>\",\n  \"notes\": \"<string>\",\n  \"minutesBillable\": \"<integer>\",\n  \"minutes\": \"<integer>\",\n  \"eventType\": \"<integer>\",\n  \"startPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"job\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"task\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"breaks\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"locations\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"exceptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceAttachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"edits\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"timeChanges\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attestationResponses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deviceUtcTime\": \"<dateTime>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"createdDate\": \"<dateTime>\",\n  \"startTimeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTimeZoneId\": \"<string>\",\n  \"endTimeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTimeZoneId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/clockevents/update/mn2",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"clockevents",
														"update",
														"mn2"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"currentStatus\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"result\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"clockEventId\": \"<integer>\",\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeId\": \"<integer>\",\n  \"employeeName\": \"<string>\",\n  \"employeeColor\": \"<string>\",\n  \"jobId\": \"<integer>\",\n  \"jobName\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"taskId\": \"<integer>\",\n  \"taskName\": \"<string>\",\n  \"previousClockEventId\": \"<integer>\",\n  \"actingEmployeeId\": \"<integer>\",\n  \"notes\": \"<string>\",\n  \"minutesBillable\": \"<integer>\",\n  \"minutes\": \"<integer>\",\n  \"eventType\": \"<integer>\",\n  \"startPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"job\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"task\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"breaks\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"locations\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"exceptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceAttachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"edits\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"timeChanges\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attestationResponses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deviceUtcTime\": \"<dateTime>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"createdDate\": \"<dateTime>\",\n  \"startTimeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTimeZoneId\": \"<string>\",\n  \"endTimeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTimeZoneId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/clockevents/update/mn2",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"clockevents",
																"update",
																"mn2"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "/api/mobile/v2/clockevents/update/mn3",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"currentStatus\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"result\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"clockEventId\": \"<integer>\",\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeId\": \"<integer>\",\n  \"employeeName\": \"<string>\",\n  \"employeeColor\": \"<string>\",\n  \"jobId\": \"<integer>\",\n  \"jobName\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"taskId\": \"<integer>\",\n  \"taskName\": \"<string>\",\n  \"previousClockEventId\": \"<integer>\",\n  \"actingEmployeeId\": \"<integer>\",\n  \"notes\": \"<string>\",\n  \"minutesBillable\": \"<integer>\",\n  \"minutes\": \"<integer>\",\n  \"eventType\": \"<integer>\",\n  \"startPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"job\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"task\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"breaks\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"locations\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"exceptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceAttachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"edits\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"timeChanges\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attestationResponses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deviceUtcTime\": \"<dateTime>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"createdDate\": \"<dateTime>\",\n  \"startTimeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTimeZoneId\": \"<string>\",\n  \"endTimeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTimeZoneId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/clockevents/update/mn3",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"clockevents",
														"update",
														"mn3"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"currentStatus\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"result\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"clockEventId\": \"<integer>\",\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeId\": \"<integer>\",\n  \"employeeName\": \"<string>\",\n  \"employeeColor\": \"<string>\",\n  \"jobId\": \"<integer>\",\n  \"jobName\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"taskId\": \"<integer>\",\n  \"taskName\": \"<string>\",\n  \"previousClockEventId\": \"<integer>\",\n  \"actingEmployeeId\": \"<integer>\",\n  \"notes\": \"<string>\",\n  \"minutesBillable\": \"<integer>\",\n  \"minutes\": \"<integer>\",\n  \"eventType\": \"<integer>\",\n  \"startPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endPosition\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"job\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"task\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"breaks\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"locations\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"exceptions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"faceAttachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"edits\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"timeChanges\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attestationResponses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deviceUtcTime\": \"<dateTime>\",\n  \"updatedDate\": \"<dateTime>\",\n  \"createdDate\": \"<dateTime>\",\n  \"startTimeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTimeZoneId\": \"<string>\",\n  \"endTimeZoneOffset\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTimeZoneId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/clockevents/update/mn3",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"clockevents",
																"update",
																"mn3"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "/api/mobile/v2/clockevents/delete/:id",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/clockevents/delete/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"clockevents",
												"delete",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/clockevents/delete/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"clockevents",
														"delete",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "jobs",
							"item": [
								{
									"name": "get",
									"item": [
										{
											"name": "syncpackage",
											"item": [
												{
													"name": "/api/mobile/v2/jobs/get/syncpackage",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/plain"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/jobs/get/syncpackage",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"jobs",
																"get",
																"syncpackage"
															]
														}
													},
													"response": [
														{
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/mobile/v2/jobs/get/syncpackage",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"mobile",
																		"v2",
																		"jobs",
																		"get",
																		"syncpackage"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"inserts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"updates\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deletes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"syncDate\": \"1987-11-26T05:11:47.075Z\",\n  \"hasChanges\": false\n}"
														}
													]
												},
												{
													"name": "/api/mobile/v2/jobs/get/syncpackage/mn2",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/plain"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/jobs/get/syncpackage/mn2",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"jobs",
																"get",
																"syncpackage",
																"mn2"
															]
														}
													},
													"response": [
														{
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/mobile/v2/jobs/get/syncpackage/mn2",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"mobile",
																		"v2",
																		"jobs",
																		"get",
																		"syncpackage",
																		"mn2"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"inserts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"updates\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deletes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"syncDate\": \"2016-04-29T15:47:50.342Z\",\n  \"hasChanges\": true\n}"
														}
													]
												}
											]
										},
										{
											"name": "/api/mobile/v2/jobs/get/:id",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/jobs/get/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"jobs",
														"get",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/jobs/get/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"jobs",
																"get",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<integer>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"dateCreated\": \"1959-04-11T02:47:29.944Z\",\n  \"dateUpdated\": \"2001-06-27T08:45:13.787Z\",\n  \"dateDeleted\": \"1965-01-09T00:59:10.195Z\",\n  \"jobId\": -29180726,\n  \"name\": \"anim minim\",\n  \"jobNumber\": \"labore sed amet\",\n  \"description\": \"consectetur\",\n  \"jobColor\": \"exe\",\n  \"restrictionTypeEmployee\": -63666161,\n  \"restrictEmployeeIds\": \"aliqua in\",\n  \"restrictEmployeeIdsList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictionTypeTask\": 85994801,\n  \"restrictTaskIds\": \"culpa reprehenderit velit\",\n  \"restrictTaskIdsList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"geofence\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobStage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customerId\": 81672828,\n  \"isActive\": false\n}"
												}
											]
										},
										{
											"name": "/api/mobile/v2/jobs/get/active",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/jobs/get/active",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"jobs",
														"get",
														"active"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/jobs/get/active",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"jobs",
																"get",
																"active"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobNumber\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobColor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"restrictionTypeEmployee\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"restrictEmployeeIds\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"restrictEmployeeIdsList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"restrictionTypeTask\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"restrictTaskIds\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"restrictTaskIdsList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"restrictGroupIds\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"geofence\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobAddress\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobStage\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customerId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isActive\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobNumber\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobColor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"restrictionTypeEmployee\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"restrictEmployeeIds\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"restrictEmployeeIdsList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"restrictionTypeTask\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"restrictTaskIds\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"restrictTaskIdsList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"restrictGroupIds\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"geofence\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobAddress\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobStage\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customerId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isActive\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "/api/mobile/v2/jobs/haschanges",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/jobs/haschanges",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"jobs",
												"haschanges"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/jobs/haschanges",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"jobs",
														"haschanges"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "true"
										}
									]
								},
								{
									"name": "/api/mobile/v2/jobs/create",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\",\n  \"jobId\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"description\": \"<string>\",\n  \"jobColor\": \"<string>\",\n  \"restrictionTypeEmployee\": \"<integer>\",\n  \"restrictEmployeeIds\": \"<string>\",\n  \"restrictEmployeeIdsList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictionTypeTask\": \"<integer>\",\n  \"restrictTaskIds\": \"<string>\",\n  \"restrictTaskIdsList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"geofence\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobStage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customerId\": \"<integer>\",\n  \"isActive\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/jobs/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"jobs",
												"create"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\",\n  \"jobId\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"description\": \"<string>\",\n  \"jobColor\": \"<string>\",\n  \"restrictionTypeEmployee\": \"<integer>\",\n  \"restrictEmployeeIds\": \"<string>\",\n  \"restrictEmployeeIdsList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictionTypeTask\": \"<integer>\",\n  \"restrictTaskIds\": \"<string>\",\n  \"restrictTaskIdsList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"geofence\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobStage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customerId\": \"<integer>\",\n  \"isActive\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/jobs/create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"jobs",
														"create"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\",\n  \"jobId\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"description\": \"<string>\",\n  \"jobColor\": \"<string>\",\n  \"restrictionTypeEmployee\": \"<integer>\",\n  \"restrictEmployeeIds\": \"<string>\",\n  \"restrictEmployeeIdsList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictionTypeTask\": \"<integer>\",\n  \"restrictTaskIds\": \"<string>\",\n  \"restrictTaskIdsList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"geofence\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobStage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customerId\": \"<integer>\",\n  \"isActive\": \"<boolean>\"\n}"
										}
									]
								},
								{
									"name": "/api/mobile/v2/jobs/update",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\",\n  \"jobId\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"description\": \"<string>\",\n  \"jobColor\": \"<string>\",\n  \"restrictionTypeEmployee\": \"<integer>\",\n  \"restrictEmployeeIds\": \"<string>\",\n  \"restrictEmployeeIdsList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictionTypeTask\": \"<integer>\",\n  \"restrictTaskIds\": \"<string>\",\n  \"restrictTaskIdsList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"geofence\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobStage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customerId\": \"<integer>\",\n  \"isActive\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/jobs/update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"jobs",
												"update"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\",\n  \"jobId\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"description\": \"<string>\",\n  \"jobColor\": \"<string>\",\n  \"restrictionTypeEmployee\": \"<integer>\",\n  \"restrictEmployeeIds\": \"<string>\",\n  \"restrictEmployeeIdsList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictionTypeTask\": \"<integer>\",\n  \"restrictTaskIds\": \"<string>\",\n  \"restrictTaskIdsList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"geofence\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobStage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customerId\": \"<integer>\",\n  \"isActive\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/jobs/update",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"jobs",
														"update"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\",\n  \"jobId\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"description\": \"<string>\",\n  \"jobColor\": \"<string>\",\n  \"restrictionTypeEmployee\": \"<integer>\",\n  \"restrictEmployeeIds\": \"<string>\",\n  \"restrictEmployeeIdsList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictionTypeTask\": \"<integer>\",\n  \"restrictTaskIds\": \"<string>\",\n  \"restrictTaskIdsList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"geofence\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobStage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customerId\": \"<integer>\",\n  \"isActive\": \"<boolean>\"\n}"
										}
									]
								},
								{
									"name": "/api/mobile/v2/jobs/updatestage",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\",\n  \"jobId\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"description\": \"<string>\",\n  \"jobColor\": \"<string>\",\n  \"restrictionTypeEmployee\": \"<integer>\",\n  \"restrictEmployeeIds\": \"<string>\",\n  \"restrictEmployeeIdsList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictionTypeTask\": \"<integer>\",\n  \"restrictTaskIds\": \"<string>\",\n  \"restrictTaskIdsList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"geofence\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobStage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customerId\": \"<integer>\",\n  \"isActive\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/jobs/updatestage",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"jobs",
												"updatestage"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\",\n  \"jobId\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"description\": \"<string>\",\n  \"jobColor\": \"<string>\",\n  \"restrictionTypeEmployee\": \"<integer>\",\n  \"restrictEmployeeIds\": \"<string>\",\n  \"restrictEmployeeIdsList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictionTypeTask\": \"<integer>\",\n  \"restrictTaskIds\": \"<string>\",\n  \"restrictTaskIdsList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"geofence\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobStage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customerId\": \"<integer>\",\n  \"isActive\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/jobs/updatestage",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"jobs",
														"updatestage"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "true"
										}
									]
								},
								{
									"name": "/api/mobile/v2/jobs/updatestageV2",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\",\n  \"jobId\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"description\": \"<string>\",\n  \"jobColor\": \"<string>\",\n  \"restrictionTypeEmployee\": \"<integer>\",\n  \"restrictEmployeeIds\": \"<string>\",\n  \"restrictEmployeeIdsList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictionTypeTask\": \"<integer>\",\n  \"restrictTaskIds\": \"<string>\",\n  \"restrictTaskIdsList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"geofence\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobStage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customerId\": \"<integer>\",\n  \"isActive\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/jobs/updatestageV2",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"jobs",
												"updatestageV2"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\",\n  \"jobId\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"description\": \"<string>\",\n  \"jobColor\": \"<string>\",\n  \"restrictionTypeEmployee\": \"<integer>\",\n  \"restrictEmployeeIds\": \"<string>\",\n  \"restrictEmployeeIdsList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictionTypeTask\": \"<integer>\",\n  \"restrictTaskIds\": \"<string>\",\n  \"restrictTaskIdsList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"geofence\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobStage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customerId\": \"<integer>\",\n  \"isActive\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/jobs/updatestageV2",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"jobs",
														"updatestageV2"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\",\n  \"jobId\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"description\": \"<string>\",\n  \"jobColor\": \"<string>\",\n  \"restrictionTypeEmployee\": \"<integer>\",\n  \"restrictEmployeeIds\": \"<string>\",\n  \"restrictEmployeeIdsList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictionTypeTask\": \"<integer>\",\n  \"restrictTaskIds\": \"<string>\",\n  \"restrictTaskIdsList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"geofence\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobStage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customerId\": \"<integer>\",\n  \"isActive\": \"<boolean>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "registration",
							"item": [
								{
									"name": "/api/mobile/v2/registration/update",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"installationId\": \"<string>\",\n  \"platform\": \"<string>\",\n  \"handle\": \"<string>\",\n  \"tags\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/registration/update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"registration",
												"update"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"installationId\": \"<string>\",\n  \"platform\": \"<string>\",\n  \"handle\": \"<string>\",\n  \"tags\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/registration/update",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"registration",
														"update"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "/api/mobile/v2/registration/delete/:id",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/registration/delete/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"registration",
												"delete",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/registration/delete/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"registration",
														"delete",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "/api/mobile/v2/registration/timestamp/utc",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/registration/timestamp/utc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"registration",
												"timestamp",
												"utc"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/registration/timestamp/utc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"registration",
														"timestamp",
														"utc"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"1993-12-13T01:20:20.577Z\""
										}
									]
								},
								{
									"name": "/api/mobile/v2/registration/employeedevices",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/registration/employeedevices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"registration",
												"employeedevices"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/registration/employeedevices",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"registration",
														"employeedevices"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"installationId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"platform\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"handle\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"installationId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"platform\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"handle\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
										}
									]
								},
								{
									"name": "/api/mobile/v2/registration/companydevices",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/registration/companydevices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"registration",
												"companydevices"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/registration/companydevices",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"registration",
														"companydevices"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"installationId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"platform\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"handle\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"installationId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"platform\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"handle\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
										}
									]
								}
							]
						},
						{
							"name": "schedule",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "/api/mobile/v2/schedule/:id",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/schedule/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"schedule",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/schedule/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"schedule",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<integer>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "/api/mobile/v2/schedule/:id/following",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/schedule/:id/following",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"schedule",
														":id",
														"following"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/schedule/:id/following",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"schedule",
																":id",
																"following"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<integer>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "/api/mobile/v2/schedule/:id/series",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/schedule/:id/series",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"schedule",
														":id",
														"series"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/schedule/:id/series",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"schedule",
																":id",
																"series"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<integer>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "/api/mobile/v2/schedule",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"scheduleEventId\": \"<integer>\",\n  \"scheduleEventRecurrenceId\": \"<integer>\",\n  \"jobId\": \"<integer>\",\n  \"taskId\": \"<integer>\",\n  \"notes\": \"<string>\",\n  \"isAllDay\": \"<boolean>\",\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"recurrence\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/schedule",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"schedule"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"scheduleEventId\": \"<integer>\",\n  \"scheduleEventRecurrenceId\": \"<integer>\",\n  \"jobId\": \"<integer>\",\n  \"taskId\": \"<integer>\",\n  \"notes\": \"<string>\",\n  \"isAllDay\": \"<boolean>\",\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"recurrence\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/schedule",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"schedule"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"scheduleEventId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobNumber\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobColor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobDescription\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"street1\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"street2\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"street3\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"street4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"street5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"city\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"stateProv\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"country\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"postalCode\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"notes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isAllDay\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"task\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"start\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"end\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"streetCombined\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"scheduleEventRecurrenceId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeColor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"doesRepeat\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"recurrence\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"scheduleEventId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobNumber\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobColor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobDescription\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"street1\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"street2\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"street3\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"street4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"street5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"city\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"stateProv\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"country\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"postalCode\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"notes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isAllDay\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"task\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"start\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"end\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"streetCombined\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"scheduleEventRecurrenceId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeColor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"doesRepeat\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"recurrence\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
										}
									]
								},
								{
									"name": "/api/mobile/v2/schedule",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"scheduleEventId\": \"<integer>\",\n  \"scheduleEventRecurrenceId\": \"<integer>\",\n  \"jobId\": \"<integer>\",\n  \"taskId\": \"<integer>\",\n  \"notes\": \"<string>\",\n  \"isAllDay\": \"<boolean>\",\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"recurrence\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/schedule?updateFutureOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"schedule"
											],
											"query": [
												{
													"key": "updateFutureOnly",
													"value": "false"
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"scheduleEventId\": \"<integer>\",\n  \"scheduleEventRecurrenceId\": \"<integer>\",\n  \"jobId\": \"<integer>\",\n  \"taskId\": \"<integer>\",\n  \"notes\": \"<string>\",\n  \"isAllDay\": \"<boolean>\",\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"recurrence\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/schedule?updateFutureOnly=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"schedule"
													],
													"query": [
														{
															"key": "updateFutureOnly",
															"value": "false"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"scheduleEventId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobNumber\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobColor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobDescription\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"street1\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"street2\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"street3\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"street4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"street5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"city\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"stateProv\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"country\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"postalCode\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"notes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isAllDay\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"task\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"start\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"end\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"streetCombined\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"scheduleEventRecurrenceId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeColor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"doesRepeat\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"recurrence\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"scheduleEventId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobNumber\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobColor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobDescription\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"street1\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"street2\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"street3\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"street4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"street5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"city\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"stateProv\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"country\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"postalCode\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"notes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isAllDay\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"task\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"start\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"end\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"streetCombined\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"scheduleEventRecurrenceId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeColor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"doesRepeat\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"recurrence\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
										}
									]
								},
								{
									"name": "/api/mobile/v2/schedule/get",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/schedule/get",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"schedule",
												"get"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/schedule/get",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"schedule",
														"get"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"scheduleEventId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobNumber\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobColor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobDescription\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"street1\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"street2\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"street3\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"street4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"street5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"city\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"stateProv\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"country\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"postalCode\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"notes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isAllDay\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"task\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"start\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"end\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"streetCombined\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"scheduleEventId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobNumber\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobColor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobDescription\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"street1\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"street2\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"street3\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"street4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"street5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"city\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"stateProv\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"country\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"postalCode\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"notes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isAllDay\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"task\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"start\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"end\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"streetCombined\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
										}
									]
								},
								{
									"name": "/api/mobile/v2/schedule/admin",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/schedule/admin?dateTime=<dateTime>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"schedule",
												"admin"
											],
											"query": [
												{
													"key": "dateTime",
													"value": "<dateTime>"
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/schedule/admin?dateTime=<dateTime>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"schedule",
														"admin"
													],
													"query": [
														{
															"key": "dateTime",
															"value": "<dateTime>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "/api/mobile/v2/schedule/:employeeId/:weekIndex",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/schedule/:employeeId/:weekIndex",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"schedule",
												":employeeId",
												":weekIndex"
											],
											"variable": [
												{
													"key": "employeeId",
													"value": "<integer>",
													"description": "(Required) "
												},
												{
													"key": "weekIndex",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/schedule/:employeeId/:weekIndex",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"schedule",
														":employeeId",
														":weekIndex"
													],
													"variable": [
														{
															"key": "employeeId",
															"value": "<integer>",
															"description": "(Required) "
														},
														{
															"key": "weekIndex",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"weekStart\": \"1946-06-15T02:05:48.851Z\",\n  \"weekEnd\": \"2006-08-18T08:11:32.135Z\",\n  \"scheduledHours\": -79583160.98598827,\n  \"schedules\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"timeOffRequests\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "/api/mobile/v2/schedule/job/:jobId/:weekIndex",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/schedule/job/:jobId/:weekIndex",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"schedule",
												"job",
												":jobId",
												":weekIndex"
											],
											"variable": [
												{
													"key": "jobId",
													"value": "<integer>",
													"description": "(Required) "
												},
												{
													"key": "weekIndex",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/schedule/job/:jobId/:weekIndex",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"schedule",
														"job",
														":jobId",
														":weekIndex"
													],
													"variable": [
														{
															"key": "jobId",
															"value": "<integer>",
															"description": "(Required) "
														},
														{
															"key": "weekIndex",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"weekStart\": \"1976-12-09T12:02:28.925Z\",\n  \"weekEnd\": \"1953-05-02T08:00:03.134Z\",\n  \"scheduledHours\": -87061066.49416001,\n  \"schedules\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"timeOffRequests\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "/api/mobile/v2/schedule/haschanges",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/schedule/haschanges",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"schedule",
												"haschanges"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/schedule/haschanges",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"schedule",
														"haschanges"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "true"
										}
									]
								},
								{
									"name": "/api/mobile/v2/schedule/notify",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sendEmail\": \"<boolean>\",\n  \"sendPushNotification\": \"<boolean>\",\n  \"days\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/schedule/notify",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"schedule",
												"notify"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sendEmail\": \"<boolean>\",\n  \"sendPushNotification\": \"<boolean>\",\n  \"days\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/schedule/notify",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"schedule",
														"notify"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "storage",
							"item": [
								{
									"name": "attachment",
									"item": [
										{
											"name": "/api/mobile/v2/storage/attachment/create",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"fileName\": \"<string>\",\n  \"sizeInBytes\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/storage/attachment/create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"storage",
														"attachment",
														"create"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"fileName\": \"<string>\",\n  \"sizeInBytes\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/storage/attachment/create",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"storage",
																"attachment",
																"create"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"attachmentId\": \"urn:uuid:2736277e-f493-df7c-cbe1-ce058cd191a5\",\n  \"fileName\": \"incididunt laborum pariatur culpa\",\n  \"sizeBytes\": 78129559,\n  \"blobName\": \"sit cupidatat culpa\",\n  \"blobUrl\": \"occaecat do sint est\",\n  \"thumbnailUrl\": \"tempor ut aliqua non\",\n  \"dateCreated\": \"2016-04-15T00:23:09.476Z\"\n}"
												}
											]
										},
										{
											"name": "/api/mobile/v2/storage/attachment/refresh",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/storage/attachment/refresh",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"storage",
														"attachment",
														"refresh"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/storage/attachment/refresh",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"storage",
																"attachment",
																"refresh"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"attachmentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"blobUrl\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateExpire\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"thumbnailBlobUrl\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"attachmentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"blobUrl\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateExpire\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"thumbnailBlobUrl\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "/api/mobile/v2/storage/security/sas",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/storage/security/sas",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"storage",
												"security",
												"sas"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/storage/security/sas",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"storage",
														"security",
														"sas"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"endpoint\": \"velit ipsum\",\n  \"sasToken\": \"Ut aliquip culpa\",\n  \"containerName\": \"consequat ex veniam\",\n  \"retrivalDate\": \"2003-04-25T01:28:53.213Z\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "tasks",
							"item": [
								{
									"name": "get",
									"item": [
										{
											"name": "syncpackage",
											"item": [
												{
													"name": "/api/mobile/v2/tasks/get/syncpackage",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/plain"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/tasks/get/syncpackage",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"tasks",
																"get",
																"syncpackage"
															]
														}
													},
													"response": [
														{
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/mobile/v2/tasks/get/syncpackage",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"mobile",
																		"v2",
																		"tasks",
																		"get",
																		"syncpackage"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"inserts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"updates\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deletes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"syncDate\": \"1987-11-26T05:11:47.075Z\",\n  \"hasChanges\": false\n}"
														}
													]
												},
												{
													"name": "/api/mobile/v2/tasks/get/syncpackage/mn2",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/plain"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/tasks/get/syncpackage/mn2",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"tasks",
																"get",
																"syncpackage",
																"mn2"
															]
														}
													},
													"response": [
														{
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/mobile/v2/tasks/get/syncpackage/mn2",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"mobile",
																		"v2",
																		"tasks",
																		"get",
																		"syncpackage",
																		"mn2"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"inserts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"updates\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deletes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"syncDate\": \"2016-04-29T15:47:50.342Z\",\n  \"hasChanges\": true\n}"
														}
													]
												}
											]
										},
										{
											"name": "/api/mobile/v2/tasks/get/:id",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/tasks/get/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"tasks",
														"get",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/tasks/get/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"tasks",
																"get",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<integer>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"dateCreated\": \"1959-09-13T18:41:09.420Z\",\n  \"dateUpdated\": \"1991-04-12T20:42:30.135Z\",\n  \"dateDeleted\": \"1986-06-03T04:39:21.939Z\",\n  \"taskId\": 51104865,\n  \"name\": \"enim nostrud\",\n  \"code\": \"esse sed dolor s\",\n  \"restrictionTypeEmployee\": 39863513,\n  \"restrictEmployeeIds\": \"fugiat sed irure aute\",\n  \"restrictEmployeeIdsList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"isActive\": false\n}"
												}
											]
										},
										{
											"name": "/api/mobile/v2/tasks/get/active",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/tasks/get/active",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"tasks",
														"get",
														"active"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/mobile/v2/tasks/get/active",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"mobile",
																"v2",
																"tasks",
																"get",
																"active"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"taskId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"code\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"restrictionTypeEmployee\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"restrictEmployeeIds\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"restrictEmployeeIdsList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"restrictGroupIds\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isActive\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"dateCreated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateUpdated\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dateDeleted\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"taskId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"code\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"restrictionTypeEmployee\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"restrictEmployeeIds\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"restrictEmployeeIdsList\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"restrictGroupIds\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isActive\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "/api/mobile/v2/tasks/haschanges",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/tasks/haschanges",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"tasks",
												"haschanges"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/tasks/haschanges",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"tasks",
														"haschanges"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "true"
										}
									]
								},
								{
									"name": "/api/mobile/v2/tasks/create",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\",\n  \"taskId\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"code\": \"<string>\",\n  \"restrictionTypeEmployee\": \"<integer>\",\n  \"restrictEmployeeIds\": \"<string>\",\n  \"restrictEmployeeIdsList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"isActive\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/tasks/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"tasks",
												"create"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\",\n  \"taskId\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"code\": \"<string>\",\n  \"restrictionTypeEmployee\": \"<integer>\",\n  \"restrictEmployeeIds\": \"<string>\",\n  \"restrictEmployeeIdsList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"isActive\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/tasks/create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"tasks",
														"create"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\",\n  \"taskId\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"code\": \"<string>\",\n  \"restrictionTypeEmployee\": \"<integer>\",\n  \"restrictEmployeeIds\": \"<string>\",\n  \"restrictEmployeeIdsList\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"isActive\": \"<boolean>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "timesheet/get",
							"item": [
								{
									"name": "/api/mobile/v2/timesheet/get",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/timesheet/get",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"timesheet",
												"get"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/timesheet/get",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"timesheet",
														"get"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"start\": \"2009-11-21T16:18:35.783Z\",\n  \"end\": \"1984-12-28T00:03:14.000Z\",\n  \"totalMinutesBillable\": -54100550,\n  \"totalMinutesBreak\": 39543308,\n  \"totalMinutesRegular\": -79126019,\n  \"totalMinutesOvertime\": -57076966,\n  \"totalMinutesDoubletime\": -81332484,\n  \"totalMinutesTimeOff\": 31932207,\n  \"clockEvents\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"timeOffRequests\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "/api/mobile/v2/timesheet/get/:id",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/timesheet/get/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"timesheet",
												"get",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/timesheet/get/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"timesheet",
														"get",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"start\": \"1983-02-17T03:55:09.417Z\",\n  \"end\": \"1974-06-11T08:41:37.740Z\",\n  \"totalMinutesBillable\": -7038320,\n  \"totalMinutesBreak\": 95840410,\n  \"totalMinutesRegular\": 70233676,\n  \"totalMinutesOvertime\": -54057383,\n  \"totalMinutesDoubletime\": -46221781,\n  \"totalMinutesTimeOff\": 65579106,\n  \"clockEvents\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"timeOffRequests\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "/api/mobile/v2/timesheet/get/audit/:clockeventEditsId",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/timesheet/get/audit/:clockeventEditsId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"timesheet",
												"get",
												"audit",
												":clockeventEditsId"
											],
											"variable": [
												{
													"key": "clockeventEditsId",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/mobile/v2/timesheet/get/audit/:clockeventEditsId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"mobile",
														"v2",
														"timesheet",
														"get",
														"audit",
														":clockeventEditsId"
													],
													"variable": [
														{
															"key": "clockeventEditsId",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"auditLogId\": 1713460,\n  \"description\": \"pariatur sed ex\",\n  \"dateCreated\": \"2012-10-15T16:12:43.969Z\",\n  \"changes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "/api/mobile/v2/groups/get/syncpackage",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/mobile/v2/groups/get/syncpackage",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"mobile",
										"v2",
										"groups",
										"get",
										"syncpackage"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/groups/get/syncpackage",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"groups",
												"get",
												"syncpackage"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"inserts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"updates\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deletes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"syncDate\": \"1987-11-26T05:11:47.075Z\",\n  \"hasChanges\": false\n}"
								}
							]
						},
						{
							"name": "/api/mobile/v2/reminders/get/syncpackage",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/mobile/v2/reminders/get/syncpackage?lastSyncDate=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"mobile",
										"v2",
										"reminders",
										"get",
										"syncpackage"
									],
									"query": [
										{
											"key": "lastSyncDate",
											"value": "<dateTime>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/reminders/get/syncpackage?lastSyncDate=<dateTime>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"reminders",
												"get",
												"syncpackage"
											],
											"query": [
												{
													"key": "lastSyncDate",
													"value": "<dateTime>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"inserts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"updates\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deletes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"syncDate\": \"1987-11-26T05:11:47.075Z\",\n  \"hasChanges\": false\n}"
								}
							]
						},
						{
							"name": "/api/mobile/v2/support",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/mobile/v2/support",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"mobile",
										"v2",
										"support"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/mobile/v2/support",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"mobile",
												"v2",
												"support"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "MYOB",
					"item": [
						{
							"name": "/api/MYOB/SyncMYOBEmployees",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"sunt_36\": {},\n  \"dolorf\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/MYOB/SyncMYOBEmployees",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"MYOB",
										"SyncMYOBEmployees"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"est_\": {},\n  \"sint_6ba\": {},\n  \"proident__c\": {},\n  \"deserunt_8\": {}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/MYOB/SyncMYOBEmployees",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"MYOB",
												"SyncMYOBEmployees"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/MYOB/SyncMYOBCustomers",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"sunt_36\": {},\n  \"dolorf\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/MYOB/SyncMYOBCustomers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"MYOB",
										"SyncMYOBCustomers"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"est_\": {},\n  \"sint_6ba\": {},\n  \"proident__c\": {},\n  \"deserunt_8\": {}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/MYOB/SyncMYOBCustomers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"MYOB",
												"SyncMYOBCustomers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/MYOB/SyncMYOBJobs",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"sunt_36\": {},\n  \"dolorf\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/MYOB/SyncMYOBJobs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"MYOB",
										"SyncMYOBJobs"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"est_\": {},\n  \"sint_6ba\": {},\n  \"proident__c\": {},\n  \"deserunt_8\": {}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/MYOB/SyncMYOBJobs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"MYOB",
												"SyncMYOBJobs"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/MYOB/SyncMYOBActivities",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"sunt_36\": {},\n  \"dolorf\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/MYOB/SyncMYOBActivities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"MYOB",
										"SyncMYOBActivities"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"est_\": {},\n  \"sint_6ba\": {},\n  \"proident__c\": {},\n  \"deserunt_8\": {}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/MYOB/SyncMYOBActivities",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"MYOB",
												"SyncMYOBActivities"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/MYOB/SyncMYOBPayrollCategories",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/MYOB/SyncMYOBPayrollCategories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"MYOB",
										"SyncMYOBPayrollCategories"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/MYOB/SyncMYOBPayrollCategories",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"MYOB",
												"SyncMYOBPayrollCategories"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/MYOB/GetMappedJobs",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/MYOB/GetMappedJobs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"MYOB",
										"GetMappedJobs"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/MYOB/GetMappedJobs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"MYOB",
												"GetMappedJobs"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/MYOB/GetMappedEmployees",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/MYOB/GetMappedEmployees",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"MYOB",
										"GetMappedEmployees"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/MYOB/GetMappedEmployees",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"MYOB",
												"GetMappedEmployees"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/MYOB/GetMappedCustomers",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/MYOB/GetMappedCustomers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"MYOB",
										"GetMappedCustomers"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/MYOB/GetMappedCustomers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"MYOB",
												"GetMappedCustomers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/MYOB/GetMappedTasks",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/MYOB/GetMappedTasks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"MYOB",
										"GetMappedTasks"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/MYOB/GetMappedTasks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"MYOB",
												"GetMappedTasks"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/MYOB/GetMappedTimeOffPolicies",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/MYOB/GetMappedTimeOffPolicies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"MYOB",
										"GetMappedTimeOffPolicies"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/MYOB/GetMappedTimeOffPolicies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"MYOB",
												"GetMappedTimeOffPolicies"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/MYOB/UpdateEmployeeMapping",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"myobEmployeeId\": \"<integer>\",\n  \"companyId\": \"<integer>\",\n  \"employeeId\": \"<integer>\",\n  \"uid\": \"<uuid>\",\n  \"companyName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"isIndvidual\": \"<boolean>\",\n  \"displayID\": \"<string>\",\n  \"isActive\": \"<boolean>\",\n  \"rowVersion\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/MYOB/UpdateEmployeeMapping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"MYOB",
										"UpdateEmployeeMapping"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"myobEmployeeId\": \"<integer>\",\n  \"companyId\": \"<integer>\",\n  \"employeeId\": \"<integer>\",\n  \"uid\": \"<uuid>\",\n  \"companyName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"isIndvidual\": \"<boolean>\",\n  \"displayID\": \"<string>\",\n  \"isActive\": \"<boolean>\",\n  \"rowVersion\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/MYOB/UpdateEmployeeMapping",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"MYOB",
												"UpdateEmployeeMapping"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/MYOB/UpdateCustomerMapping",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"myobCustomerId\": \"<integer>\",\n  \"companyId\": \"<integer>\",\n  \"customerId\": \"<integer>\",\n  \"uid\": \"<uuid>\",\n  \"companyName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"isIndvidual\": \"<boolean>\",\n  \"displayID\": \"<string>\",\n  \"isActive\": \"<boolean>\",\n  \"rowVersion\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/MYOB/UpdateCustomerMapping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"MYOB",
										"UpdateCustomerMapping"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"myobCustomerId\": \"<integer>\",\n  \"companyId\": \"<integer>\",\n  \"customerId\": \"<integer>\",\n  \"uid\": \"<uuid>\",\n  \"companyName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"isIndvidual\": \"<boolean>\",\n  \"displayID\": \"<string>\",\n  \"isActive\": \"<boolean>\",\n  \"rowVersion\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/MYOB/UpdateCustomerMapping",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"MYOB",
												"UpdateCustomerMapping"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/MYOB/UpdateJobMapping",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"myobJobId\": \"<integer>\",\n  \"companyId\": \"<integer>\",\n  \"jobId\": \"<integer>\",\n  \"uid\": \"<uuid>\",\n  \"number\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"isActive\": \"<boolean>\",\n  \"rowVersion\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/MYOB/UpdateJobMapping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"MYOB",
										"UpdateJobMapping"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"myobJobId\": \"<integer>\",\n  \"companyId\": \"<integer>\",\n  \"jobId\": \"<integer>\",\n  \"uid\": \"<uuid>\",\n  \"number\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"isActive\": \"<boolean>\",\n  \"rowVersion\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/MYOB/UpdateJobMapping",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"MYOB",
												"UpdateJobMapping"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/MYOB/UpdateActivityMapping",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"myobActivityId\": \"<integer>\",\n  \"companyId\": \"<integer>\",\n  \"taskId\": \"<integer>\",\n  \"uid\": \"<uuid>\",\n  \"displayID\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"isActive\": \"<boolean>\",\n  \"rowVersion\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/MYOB/UpdateActivityMapping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"MYOB",
										"UpdateActivityMapping"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"myobActivityId\": \"<integer>\",\n  \"companyId\": \"<integer>\",\n  \"taskId\": \"<integer>\",\n  \"uid\": \"<uuid>\",\n  \"displayID\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"isActive\": \"<boolean>\",\n  \"rowVersion\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/MYOB/UpdateActivityMapping",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"MYOB",
												"UpdateActivityMapping"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/MYOB/UpdatePayrollCategoryMapping",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"myobPayrollCategoryId\": \"<integer>\",\n  \"companyId\": \"<integer>\",\n  \"timeOffPolicyId\": \"<integer>\",\n  \"uid\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"rowVersion\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/MYOB/UpdatePayrollCategoryMapping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"MYOB",
										"UpdatePayrollCategoryMapping"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"myobPayrollCategoryId\": \"<integer>\",\n  \"companyId\": \"<integer>\",\n  \"timeOffPolicyId\": \"<integer>\",\n  \"uid\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"rowVersion\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/MYOB/UpdatePayrollCategoryMapping",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"MYOB",
												"UpdatePayrollCategoryMapping"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/MYOB/SearchMYOBJobs",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/MYOB/SearchMYOBJobs?skip=<integer>&take=<integer>&searchTerm=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"MYOB",
										"SearchMYOBJobs"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										},
										{
											"key": "searchTerm",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/MYOB/SearchMYOBJobs?skip=<integer>&take=<integer>&searchTerm=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"MYOB",
												"SearchMYOBJobs"
											],
											"query": [
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												},
												{
													"key": "searchTerm",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/MYOB/SearchMYOBEmployees",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/MYOB/SearchMYOBEmployees?skip=<integer>&take=<integer>&searchTerm=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"MYOB",
										"SearchMYOBEmployees"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										},
										{
											"key": "searchTerm",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/MYOB/SearchMYOBEmployees?skip=<integer>&take=<integer>&searchTerm=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"MYOB",
												"SearchMYOBEmployees"
											],
											"query": [
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												},
												{
													"key": "searchTerm",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/MYOB/SearchMYOBCustomers",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/MYOB/SearchMYOBCustomers?skip=<integer>&take=<integer>&searchTerm=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"MYOB",
										"SearchMYOBCustomers"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										},
										{
											"key": "searchTerm",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/MYOB/SearchMYOBCustomers?skip=<integer>&take=<integer>&searchTerm=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"MYOB",
												"SearchMYOBCustomers"
											],
											"query": [
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												},
												{
													"key": "searchTerm",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/MYOB/SearchMYOBActivities",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/MYOB/SearchMYOBActivities?skip=<integer>&take=<integer>&searchTerm=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"MYOB",
										"SearchMYOBActivities"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										},
										{
											"key": "searchTerm",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/MYOB/SearchMYOBActivities?skip=<integer>&take=<integer>&searchTerm=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"MYOB",
												"SearchMYOBActivities"
											],
											"query": [
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												},
												{
													"key": "searchTerm",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/MYOB/SearchMYOBPayrollCategories",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/MYOB/SearchMYOBPayrollCategories?skip=<integer>&take=<integer>&searchTerm=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"MYOB",
										"SearchMYOBPayrollCategories"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										},
										{
											"key": "searchTerm",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/MYOB/SearchMYOBPayrollCategories?skip=<integer>&take=<integer>&searchTerm=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"MYOB",
												"SearchMYOBPayrollCategories"
											],
											"query": [
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												},
												{
													"key": "searchTerm",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/MYOB/SaveCompanyFileCredentials",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"uri\": \"<string>\",\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/MYOB/SaveCompanyFileCredentials",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"MYOB",
										"SaveCompanyFileCredentials"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"uri\": \"<string>\",\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/MYOB/SaveCompanyFileCredentials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"MYOB",
												"SaveCompanyFileCredentials"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/MYOB/SaveSettings",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"payrollCategoryIdReg\": \"<integer>\",\n  \"payrollCategoryIdOvertime\": \"<integer>\",\n  \"payrollCategoryIdDoubletime\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/MYOB/SaveSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"MYOB",
										"SaveSettings"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"payrollCategoryIdReg\": \"<integer>\",\n  \"payrollCategoryIdOvertime\": \"<integer>\",\n  \"payrollCategoryIdDoubletime\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/MYOB/SaveSettings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"MYOB",
												"SaveSettings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/MYOB/ValidateExportTime",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"skipValidateAndConfirm\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/MYOB/ValidateExportTime",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"MYOB",
										"ValidateExportTime"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"skipValidateAndConfirm\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/MYOB/ValidateExportTime",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"MYOB",
												"ValidateExportTime"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/MYOB/ExportTime",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"skipValidateAndConfirm\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/MYOB/ExportTime",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"MYOB",
										"ExportTime"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"skipValidateAndConfirm\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/MYOB/ExportTime",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"MYOB",
												"ExportTime"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/MYOB/disconnect",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/MYOB/disconnect",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"MYOB",
										"disconnect"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/MYOB/disconnect",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"MYOB",
												"disconnect"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Notification",
					"item": [
						{
							"name": "/api/Notification/GetCardsSkipTake",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Notification/GetCardsSkipTake?take=<integer>&olderThan=<integer>&newerThan=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Notification",
										"GetCardsSkipTake"
									],
									"query": [
										{
											"key": "take",
											"value": "<integer>"
										},
										{
											"key": "olderThan",
											"value": "<integer>"
										},
										{
											"key": "newerThan",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Notification/GetCardsSkipTake?take=<integer>&olderThan=<integer>&newerThan=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Notification",
												"GetCardsSkipTake"
											],
											"query": [
												{
													"key": "take",
													"value": "<integer>"
												},
												{
													"key": "olderThan",
													"value": "<integer>"
												},
												{
													"key": "newerThan",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Notification/GetDependencies",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"authorIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"customerIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quoteIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoiceIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"clockEventIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Notification/GetDependencies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Notification",
										"GetDependencies"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"authorIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"customerIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quoteIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoiceIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"clockEventIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Notification/GetDependencies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Notification",
												"GetDependencies"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Notification/CheckForNewNotifications",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Notification/CheckForNewNotifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Notification",
										"CheckForNewNotifications"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Notification/CheckForNewNotifications",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Notification",
												"CheckForNewNotifications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "OvertimePolicy",
					"item": [
						{
							"name": "/api/OvertimePolicy/Get",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/OvertimePolicy/Get?id=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"OvertimePolicy",
										"Get"
									],
									"query": [
										{
											"key": "id",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/OvertimePolicy/Get?id=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"OvertimePolicy",
												"Get"
											],
											"query": [
												{
													"key": "id",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/OvertimePolicy/GetCompanyPolicies",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/OvertimePolicy/GetCompanyPolicies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"OvertimePolicy",
										"GetCompanyPolicies"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/OvertimePolicy/GetCompanyPolicies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"OvertimePolicy",
												"GetCompanyPolicies"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/OvertimePolicy/SaveOvertimePolicy",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"overtimePolicyId\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"overtimeCARules\": \"<boolean>\",\n  \"otWeeklyThresholdMins\": \"<integer>\",\n  \"otDailyThresholdMins\": \"<integer>\",\n  \"dtDailyThresholdMins\": \"<integer>\",\n  \"saturdayOvertimeRule\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"sundayOvertimeRule\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dateCreated\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isCompanyDefault\": \"<boolean>\",\n  \"employees\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"removeEmployees\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/OvertimePolicy/SaveOvertimePolicy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"OvertimePolicy",
										"SaveOvertimePolicy"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"overtimePolicyId\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"overtimeCARules\": \"<boolean>\",\n  \"otWeeklyThresholdMins\": \"<integer>\",\n  \"otDailyThresholdMins\": \"<integer>\",\n  \"dtDailyThresholdMins\": \"<integer>\",\n  \"saturdayOvertimeRule\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"sundayOvertimeRule\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dateCreated\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isCompanyDefault\": \"<boolean>\",\n  \"employees\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"removeEmployees\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/OvertimePolicy/SaveOvertimePolicy",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"OvertimePolicy",
												"SaveOvertimePolicy"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/OvertimePolicy/Delete",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"overtimePolicyId\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"overtimeCARules\": \"<boolean>\",\n  \"otWeeklyThresholdMins\": \"<integer>\",\n  \"otDailyThresholdMins\": \"<integer>\",\n  \"dtDailyThresholdMins\": \"<integer>\",\n  \"saturdayOvertimeRule\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"sundayOvertimeRule\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dateCreated\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isCompanyDefault\": \"<boolean>\",\n  \"employees\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"removeEmployees\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/OvertimePolicy/Delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"OvertimePolicy",
										"Delete"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"overtimePolicyId\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"overtimeCARules\": \"<boolean>\",\n  \"otWeeklyThresholdMins\": \"<integer>\",\n  \"otDailyThresholdMins\": \"<integer>\",\n  \"dtDailyThresholdMins\": \"<integer>\",\n  \"saturdayOvertimeRule\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"sundayOvertimeRule\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dateCreated\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isCompanyDefault\": \"<boolean>\",\n  \"employees\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"removeEmployees\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/OvertimePolicy/Delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"OvertimePolicy",
												"Delete"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/OvertimePolicy/SaveOvertimePolicyEmployees",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"overtimePolicyId\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"overtimeCARules\": \"<boolean>\",\n  \"otWeeklyThresholdMins\": \"<integer>\",\n  \"otDailyThresholdMins\": \"<integer>\",\n  \"dtDailyThresholdMins\": \"<integer>\",\n  \"saturdayOvertimeRule\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"sundayOvertimeRule\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dateCreated\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isCompanyDefault\": \"<boolean>\",\n  \"employees\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"removeEmployees\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/OvertimePolicy/SaveOvertimePolicyEmployees",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"OvertimePolicy",
										"SaveOvertimePolicyEmployees"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"overtimePolicyId\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"overtimeCARules\": \"<boolean>\",\n  \"otWeeklyThresholdMins\": \"<integer>\",\n  \"otDailyThresholdMins\": \"<integer>\",\n  \"dtDailyThresholdMins\": \"<integer>\",\n  \"saturdayOvertimeRule\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"sundayOvertimeRule\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dateCreated\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isCompanyDefault\": \"<boolean>\",\n  \"employees\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"removeEmployees\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/OvertimePolicy/SaveOvertimePolicyEmployees",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"OvertimePolicy",
												"SaveOvertimePolicyEmployees"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/OvertimePolicy/SaveCompanyOTPolicyDefault",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"overtimePolicyId\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"overtimeCARules\": \"<boolean>\",\n  \"otWeeklyThresholdMins\": \"<integer>\",\n  \"otDailyThresholdMins\": \"<integer>\",\n  \"dtDailyThresholdMins\": \"<integer>\",\n  \"saturdayOvertimeRule\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"sundayOvertimeRule\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dateCreated\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isCompanyDefault\": \"<boolean>\",\n  \"employees\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"removeEmployees\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/OvertimePolicy/SaveCompanyOTPolicyDefault",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"OvertimePolicy",
										"SaveCompanyOTPolicyDefault"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"overtimePolicyId\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"overtimeCARules\": \"<boolean>\",\n  \"otWeeklyThresholdMins\": \"<integer>\",\n  \"otDailyThresholdMins\": \"<integer>\",\n  \"dtDailyThresholdMins\": \"<integer>\",\n  \"saturdayOvertimeRule\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"sundayOvertimeRule\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dateCreated\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isCompanyDefault\": \"<boolean>\",\n  \"employees\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"removeEmployees\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/OvertimePolicy/SaveCompanyOTPolicyDefault",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"OvertimePolicy",
												"SaveCompanyOTPolicyDefault"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/OvertimePolicy/GetPolicySkipTake",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/OvertimePolicy/GetPolicySkipTake?query=<string>&sortDirection=<string>&sortColumn=<string>&skip=<integer>&take=<integer>&locationIds=<integer>&locationIds=<integer>&departmentIds=<integer>&departmentIds=<integer>&otPolicyId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"OvertimePolicy",
										"GetPolicySkipTake"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "sortDirection",
											"value": "<string>"
										},
										{
											"key": "sortColumn",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										},
										{
											"key": "locationIds",
											"value": "<integer>"
										},
										{
											"key": "locationIds",
											"value": "<integer>"
										},
										{
											"key": "departmentIds",
											"value": "<integer>"
										},
										{
											"key": "departmentIds",
											"value": "<integer>"
										},
										{
											"key": "otPolicyId",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/OvertimePolicy/GetPolicySkipTake?query=<string>&sortDirection=<string>&sortColumn=<string>&skip=<integer>&take=<integer>&locationIds=<integer>&locationIds=<integer>&departmentIds=<integer>&departmentIds=<integer>&otPolicyId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"OvertimePolicy",
												"GetPolicySkipTake"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>"
												},
												{
													"key": "sortDirection",
													"value": "<string>"
												},
												{
													"key": "sortColumn",
													"value": "<string>"
												},
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												},
												{
													"key": "locationIds",
													"value": "<integer>"
												},
												{
													"key": "locationIds",
													"value": "<integer>"
												},
												{
													"key": "departmentIds",
													"value": "<integer>"
												},
												{
													"key": "departmentIds",
													"value": "<integer>"
												},
												{
													"key": "otPolicyId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Paychex",
					"item": [
						{
							"name": "/api/Paychex/UpdateCompanySettings",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"paychexCompanyId\": \"<string>\",\n  \"payComponentRegular\": \"<string>\",\n  \"payComponentOvertime\": \"<string>\",\n  \"payComponentDoubletime\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Paychex/UpdateCompanySettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Paychex",
										"UpdateCompanySettings"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"paychexCompanyId\": \"<string>\",\n  \"payComponentRegular\": \"<string>\",\n  \"payComponentOvertime\": \"<string>\",\n  \"payComponentDoubletime\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Paychex/UpdateCompanySettings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Paychex",
												"UpdateCompanySettings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Paychex/Disconnect",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Paychex/Disconnect",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Paychex",
										"Disconnect"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Paychex/Disconnect",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Paychex",
												"Disconnect"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Paychex/GetEmployeeMappings",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Paychex/GetEmployeeMappings?query=<string>&skip=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Paychex",
										"GetEmployeeMappings"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Paychex/GetEmployeeMappings?query=<string>&skip=<integer>&take=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Paychex",
												"GetEmployeeMappings"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>"
												},
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Paychex/UpdateEmployeeMapping",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"companyId\": \"<integer>\",\n  \"employeeId\": \"<integer>\",\n  \"paychexWorkerId\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Paychex/UpdateEmployeeMapping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Paychex",
										"UpdateEmployeeMapping"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"companyId\": \"<integer>\",\n  \"employeeId\": \"<integer>\",\n  \"paychexWorkerId\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Paychex/UpdateEmployeeMapping",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Paychex",
												"UpdateEmployeeMapping"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Paychex/RemoveEmployeeMapping",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"companyId\": \"<integer>\",\n  \"employeeId\": \"<integer>\",\n  \"paychexWorkerId\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Paychex/RemoveEmployeeMapping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Paychex",
										"RemoveEmployeeMapping"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"companyId\": \"<integer>\",\n  \"employeeId\": \"<integer>\",\n  \"paychexWorkerId\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Paychex/RemoveEmployeeMapping",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Paychex",
												"RemoveEmployeeMapping"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Paychex/GetTaskMappings",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Paychex/GetTaskMappings?query=<string>&skip=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Paychex",
										"GetTaskMappings"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Paychex/GetTaskMappings?query=<string>&skip=<integer>&take=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Paychex",
												"GetTaskMappings"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>"
												},
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Paychex/UpdateTaskMapping",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"companyId\": \"<integer>\",\n  \"taskId\": \"<integer>\",\n  \"payComponentRegular\": \"<string>\",\n  \"payComponentOvertime\": \"<string>\",\n  \"payComponentDoubletime\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Paychex/UpdateTaskMapping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Paychex",
										"UpdateTaskMapping"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"companyId\": \"<integer>\",\n  \"taskId\": \"<integer>\",\n  \"payComponentRegular\": \"<string>\",\n  \"payComponentOvertime\": \"<string>\",\n  \"payComponentDoubletime\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Paychex/UpdateTaskMapping",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Paychex",
												"UpdateTaskMapping"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Paychex/RemoveTaskMapping",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"companyId\": \"<integer>\",\n  \"taskId\": \"<integer>\",\n  \"payComponentRegular\": \"<string>\",\n  \"payComponentOvertime\": \"<string>\",\n  \"payComponentDoubletime\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Paychex/RemoveTaskMapping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Paychex",
										"RemoveTaskMapping"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"companyId\": \"<integer>\",\n  \"taskId\": \"<integer>\",\n  \"payComponentRegular\": \"<string>\",\n  \"payComponentOvertime\": \"<string>\",\n  \"payComponentDoubletime\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Paychex/RemoveTaskMapping",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Paychex",
												"RemoveTaskMapping"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Paychex/GetTimeOffPolicyMappings",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Paychex/GetTimeOffPolicyMappings?query=<string>&skip=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Paychex",
										"GetTimeOffPolicyMappings"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Paychex/GetTimeOffPolicyMappings?query=<string>&skip=<integer>&take=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Paychex",
												"GetTimeOffPolicyMappings"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>"
												},
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Paychex/UpdateTimeOffPolicyMapping",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"timeOffPolicyId\": \"<integer>\",\n  \"policyType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"policyTypeReadable\": \"<string>\",\n  \"policyName\": \"<string>\",\n  \"isTimeOffLimit\": \"<string>\",\n  \"accrualHours\": \"<double>\",\n  \"accrualMethod\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isWaitingPeriod\": \"<string>\",\n  \"waitingPeriodDays\": \"<integer>\",\n  \"isCarryoverLimit\": \"<string>\",\n  \"maxCarryOverHours\": \"<double>\",\n  \"maxBalanceHours\": \"<double>\",\n  \"payrollMappingId\": \"<string>\",\n  \"enrolledCount\": \"<integer>\",\n  \"holidayDate\": \"<dateTime>\",\n  \"hoursTotal\": \"<double>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"hasApproval\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Paychex/UpdateTimeOffPolicyMapping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Paychex",
										"UpdateTimeOffPolicyMapping"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"timeOffPolicyId\": \"<integer>\",\n  \"policyType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"policyTypeReadable\": \"<string>\",\n  \"policyName\": \"<string>\",\n  \"isTimeOffLimit\": \"<string>\",\n  \"accrualHours\": \"<double>\",\n  \"accrualMethod\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isWaitingPeriod\": \"<string>\",\n  \"waitingPeriodDays\": \"<integer>\",\n  \"isCarryoverLimit\": \"<string>\",\n  \"maxCarryOverHours\": \"<double>\",\n  \"maxBalanceHours\": \"<double>\",\n  \"payrollMappingId\": \"<string>\",\n  \"enrolledCount\": \"<integer>\",\n  \"holidayDate\": \"<dateTime>\",\n  \"hoursTotal\": \"<double>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"hasApproval\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Paychex/UpdateTimeOffPolicyMapping",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Paychex",
												"UpdateTimeOffPolicyMapping"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Paychex/RemoveTimeOffPolicyMapping",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"timeOffPolicyId\": \"<integer>\",\n  \"policyType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"policyTypeReadable\": \"<string>\",\n  \"policyName\": \"<string>\",\n  \"isTimeOffLimit\": \"<string>\",\n  \"accrualHours\": \"<double>\",\n  \"accrualMethod\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isWaitingPeriod\": \"<string>\",\n  \"waitingPeriodDays\": \"<integer>\",\n  \"isCarryoverLimit\": \"<string>\",\n  \"maxCarryOverHours\": \"<double>\",\n  \"maxBalanceHours\": \"<double>\",\n  \"payrollMappingId\": \"<string>\",\n  \"enrolledCount\": \"<integer>\",\n  \"holidayDate\": \"<dateTime>\",\n  \"hoursTotal\": \"<double>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"hasApproval\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Paychex/RemoveTimeOffPolicyMapping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Paychex",
										"RemoveTimeOffPolicyMapping"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"timeOffPolicyId\": \"<integer>\",\n  \"policyType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"policyTypeReadable\": \"<string>\",\n  \"policyName\": \"<string>\",\n  \"isTimeOffLimit\": \"<string>\",\n  \"accrualHours\": \"<double>\",\n  \"accrualMethod\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isWaitingPeriod\": \"<string>\",\n  \"waitingPeriodDays\": \"<integer>\",\n  \"isCarryoverLimit\": \"<string>\",\n  \"maxCarryOverHours\": \"<double>\",\n  \"maxBalanceHours\": \"<double>\",\n  \"payrollMappingId\": \"<string>\",\n  \"enrolledCount\": \"<integer>\",\n  \"holidayDate\": \"<dateTime>\",\n  \"hoursTotal\": \"<double>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"hasApproval\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Paychex/RemoveTimeOffPolicyMapping",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Paychex",
												"RemoveTimeOffPolicyMapping"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Paychex/ValidateExportTime",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"skipValidateAndConfirm\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Paychex/ValidateExportTime",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Paychex",
										"ValidateExportTime"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"skipValidateAndConfirm\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Paychex/ValidateExportTime",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Paychex",
												"ValidateExportTime"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Paychex/DownloadCSV",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"skipValidateAndConfirm\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Paychex/DownloadCSV",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Paychex",
										"DownloadCSV"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"skipValidateAndConfirm\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Paychex/DownloadCSV",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Paychex",
												"DownloadCSV"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Plan",
					"item": [
						{
							"name": "/api/Plan/Get",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Plan/Get",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Plan",
										"Get"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Plan/Get",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Plan",
												"Get"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Plan/GetPaymentHistory",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Plan/GetPaymentHistory?limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Plan",
										"GetPaymentHistory"
									],
									"query": [
										{
											"key": "limit",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Plan/GetPaymentHistory?limit=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Plan",
												"GetPaymentHistory"
											],
											"query": [
												{
													"key": "limit",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Plan/GetInvoiceUpcoming",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Plan/GetInvoiceUpcoming",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Plan",
										"GetInvoiceUpcoming"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Plan/GetInvoiceUpcoming",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Plan",
												"GetInvoiceUpcoming"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Plan/GetInvoiceUpcoming2",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Plan/GetInvoiceUpcoming2",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Plan",
										"GetInvoiceUpcoming2"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Plan/GetInvoiceUpcoming2",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Plan",
												"GetInvoiceUpcoming2"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Plan/GetPricingChangePreview",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Plan/GetPricingChangePreview?newPlanLevel=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Plan",
										"GetPricingChangePreview"
									],
									"query": [
										{
											"key": "newPlanLevel",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Plan/GetPricingChangePreview?newPlanLevel=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Plan",
												"GetPricingChangePreview"
											],
											"query": [
												{
													"key": "newPlanLevel",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Plan/GetInvoices",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Plan/GetInvoices?limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Plan",
										"GetInvoices"
									],
									"query": [
										{
											"key": "limit",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Plan/GetInvoices?limit=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Plan",
												"GetInvoices"
											],
											"query": [
												{
													"key": "limit",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Plan/GetCard",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Plan/GetCard",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Plan",
										"GetCard"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Plan/GetCard",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Plan",
												"GetCard"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Plan/SwitchBillingPlan",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Plan/SwitchBillingPlan",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Plan",
										"SwitchBillingPlan"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Plan/SwitchBillingPlan",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Plan",
												"SwitchBillingPlan"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Plan/SwitchPricingPlan",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<integer>",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Plan/SwitchPricingPlan",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Plan",
										"SwitchPricingPlan"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "<integer>",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Plan/SwitchPricingPlan",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Plan",
												"SwitchPricingPlan"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Plan/StartSelfServeTrial",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Plan/StartSelfServeTrial",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Plan",
										"StartSelfServeTrial"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Plan/StartSelfServeTrial",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Plan",
												"StartSelfServeTrial"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Plan/UpdateCard",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<string>",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Plan/UpdateCard",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Plan",
										"UpdateCard"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "<string>",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Plan/UpdateCard",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Plan",
												"UpdateCard"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Plan/InsertViewedCancelDialogTag",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Plan/InsertViewedCancelDialogTag?stripeCustomerId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Plan",
										"InsertViewedCancelDialogTag"
									],
									"query": [
										{
											"key": "stripeCustomerId",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Plan/InsertViewedCancelDialogTag?stripeCustomerId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Plan",
												"InsertViewedCancelDialogTag"
											],
											"query": [
												{
													"key": "stripeCustomerId",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Plan/InsertConsultationRequest",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Plan/InsertConsultationRequest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Plan",
										"InsertConsultationRequest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Plan/InsertConsultationRequest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Plan",
												"InsertConsultationRequest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Plan/FreezeSubscription",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Plan/FreezeSubscription",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Plan",
										"FreezeSubscription"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Plan/FreezeSubscription",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Plan",
												"FreezeSubscription"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Plan/ExtendFreeTrial",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Plan/ExtendFreeTrial",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Plan",
										"ExtendFreeTrial"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Plan/ExtendFreeTrial",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Plan",
												"ExtendFreeTrial"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Plan/CancelSubscription",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Plan/CancelSubscription?cancellationSelection=<string>&cancellationReason=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Plan",
										"CancelSubscription"
									],
									"query": [
										{
											"key": "cancellationSelection",
											"value": "<string>"
										},
										{
											"key": "cancellationReason",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Plan/CancelSubscription?cancellationSelection=<string>&cancellationReason=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Plan",
												"CancelSubscription"
											],
											"query": [
												{
													"key": "cancellationSelection",
													"value": "<string>"
												},
												{
													"key": "cancellationReason",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "QIP",
					"item": [
						{
							"name": "/api/QIP/GetTaxRates",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QIP/GetTaxRates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"GetTaxRates"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QIP/GetTaxRates",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"GetTaxRates"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/SaveTaxRates",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"taxRateId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"rate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"order\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"taxRateId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"rate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"order\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QIP/SaveTaxRates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"SaveTaxRates"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"taxRateId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"rate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"order\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"taxRateId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"rate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"order\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QIP/SaveTaxRates",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"SaveTaxRates"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/AddTaxRate",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"taxRateId\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"rate\": \"<double>\",\n  \"order\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QIP/AddTaxRate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"AddTaxRate"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"taxRateId\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"rate\": \"<double>\",\n  \"order\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QIP/AddTaxRate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"AddTaxRate"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/GetCustomerBalance",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QIP/GetCustomerBalance?customerId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"GetCustomerBalance"
									],
									"query": [
										{
											"key": "customerId",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QIP/GetCustomerBalance?customerId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"GetCustomerBalance"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/GetCustomerTransactions",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QIP/GetCustomerTransactions?customerId=<integer>&skip=<integer>&take=3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"GetCustomerTransactions"
									],
									"query": [
										{
											"key": "customerId",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "3"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QIP/GetCustomerTransactions?customerId=<integer>&skip=<integer>&take=3",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"GetCustomerTransactions"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>"
												},
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "3"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/GetQipSettings",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QIP/GetQipSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"GetQipSettings"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QIP/GetQipSettings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"GetQipSettings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/GetQuoteNewId",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QIP/GetQuoteNewId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"GetQuoteNewId"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QIP/GetQuoteNewId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"GetQuoteNewId"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/GetInvoiceNewId",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QIP/GetInvoiceNewId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"GetInvoiceNewId"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QIP/GetInvoiceNewId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"GetInvoiceNewId"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/GetQuotes",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QIP/GetQuotes?query=<string>&skip=<integer>&take=<integer>&orderBy=<string>&customerFilter=<integer>&jobFilter=<integer>&statusFilter=<integer>&startDateFilter=<dateTime>&endDateFilter=<dateTime>&getJobs=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"GetQuotes"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										},
										{
											"key": "orderBy",
											"value": "<string>"
										},
										{
											"key": "customerFilter",
											"value": "<integer>"
										},
										{
											"key": "jobFilter",
											"value": "<integer>"
										},
										{
											"key": "statusFilter",
											"value": "<integer>"
										},
										{
											"key": "startDateFilter",
											"value": "<dateTime>"
										},
										{
											"key": "endDateFilter",
											"value": "<dateTime>"
										},
										{
											"key": "getJobs",
											"value": "<boolean>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QIP/GetQuotes?query=<string>&skip=<integer>&take=<integer>&orderBy=<string>&customerFilter=<integer>&jobFilter=<integer>&statusFilter=<integer>&startDateFilter=<dateTime>&endDateFilter=<dateTime>&getJobs=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"GetQuotes"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>"
												},
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												},
												{
													"key": "orderBy",
													"value": "<string>"
												},
												{
													"key": "customerFilter",
													"value": "<integer>"
												},
												{
													"key": "jobFilter",
													"value": "<integer>"
												},
												{
													"key": "statusFilter",
													"value": "<integer>"
												},
												{
													"key": "startDateFilter",
													"value": "<dateTime>"
												},
												{
													"key": "endDateFilter",
													"value": "<dateTime>"
												},
												{
													"key": "getJobs",
													"value": "<boolean>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/GetAllQuotesByCompanyId",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QIP/GetAllQuotesByCompanyId?getJobs=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"GetAllQuotesByCompanyId"
									],
									"query": [
										{
											"key": "getJobs",
											"value": "false"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QIP/GetAllQuotesByCompanyId?getJobs=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"GetAllQuotesByCompanyId"
											],
											"query": [
												{
													"key": "getJobs",
													"value": "false"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/GetMerchantCodes",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QIP/GetMerchantCodes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"GetMerchantCodes"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QIP/GetMerchantCodes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"GetMerchantCodes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/GetQuote",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QIP/GetQuote?quoteId=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"GetQuote"
									],
									"query": [
										{
											"key": "quoteId",
											"value": "<uuid>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QIP/GetQuote?quoteId=<uuid>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"GetQuote"
											],
											"query": [
												{
													"key": "quoteId",
													"value": "<uuid>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/GetInvoices",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QIP/GetInvoices?query=<string>&skip=<integer>&take=<integer>&orderBy=<string>&customerFilter=<integer>&jobFilter=<integer>&statusFilter=<integer>&startDateFilter=<dateTime>&endDateFilter=<dateTime>&getJobs=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"GetInvoices"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										},
										{
											"key": "orderBy",
											"value": "<string>"
										},
										{
											"key": "customerFilter",
											"value": "<integer>"
										},
										{
											"key": "jobFilter",
											"value": "<integer>"
										},
										{
											"key": "statusFilter",
											"value": "<integer>"
										},
										{
											"key": "startDateFilter",
											"value": "<dateTime>"
										},
										{
											"key": "endDateFilter",
											"value": "<dateTime>"
										},
										{
											"key": "getJobs",
											"value": "<boolean>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QIP/GetInvoices?query=<string>&skip=<integer>&take=<integer>&orderBy=<string>&customerFilter=<integer>&jobFilter=<integer>&statusFilter=<integer>&startDateFilter=<dateTime>&endDateFilter=<dateTime>&getJobs=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"GetInvoices"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>"
												},
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												},
												{
													"key": "orderBy",
													"value": "<string>"
												},
												{
													"key": "customerFilter",
													"value": "<integer>"
												},
												{
													"key": "jobFilter",
													"value": "<integer>"
												},
												{
													"key": "statusFilter",
													"value": "<integer>"
												},
												{
													"key": "startDateFilter",
													"value": "<dateTime>"
												},
												{
													"key": "endDateFilter",
													"value": "<dateTime>"
												},
												{
													"key": "getJobs",
													"value": "<boolean>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/GetAllInvoicesByCompanyId",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QIP/GetAllInvoicesByCompanyId?getJobs=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"GetAllInvoicesByCompanyId"
									],
									"query": [
										{
											"key": "getJobs",
											"value": "false"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QIP/GetAllInvoicesByCompanyId?getJobs=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"GetAllInvoicesByCompanyId"
											],
											"query": [
												{
													"key": "getJobs",
													"value": "false"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/GetInvoice",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QIP/GetInvoice?invoiceId=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"GetInvoice"
									],
									"query": [
										{
											"key": "invoiceId",
											"value": "<uuid>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QIP/GetInvoice?invoiceId=<uuid>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"GetInvoice"
											],
											"query": [
												{
													"key": "invoiceId",
													"value": "<uuid>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/GetCustomerQuotesAndInvoices",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QIP/GetCustomerQuotesAndInvoices?customerId=<integer>&query=<string>&typeFilter=<integer>&statusFilter=<integer>&skip=<integer>&take=<integer>&orderBy=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"GetCustomerQuotesAndInvoices"
									],
									"query": [
										{
											"key": "customerId",
											"value": "<integer>"
										},
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "typeFilter",
											"value": "<integer>"
										},
										{
											"key": "statusFilter",
											"value": "<integer>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										},
										{
											"key": "orderBy",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QIP/GetCustomerQuotesAndInvoices?customerId=<integer>&query=<string>&typeFilter=<integer>&statusFilter=<integer>&skip=<integer>&take=<integer>&orderBy=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"GetCustomerQuotesAndInvoices"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>"
												},
												{
													"key": "query",
													"value": "<string>"
												},
												{
													"key": "typeFilter",
													"value": "<integer>"
												},
												{
													"key": "statusFilter",
													"value": "<integer>"
												},
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												},
												{
													"key": "orderBy",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/SaveQuote",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"quoteId\": \"<uuid>\",\n  \"quoteDisplayId\": \"<string>\",\n  \"customerId\": \"<integer>\",\n  \"customer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobs\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"issueDate\": \"<dateTime>\",\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"statusChangeDate\": \"<dateTime>\",\n  \"lineItems\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"emailAddresses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"amount\": \"<double>\",\n  \"message\": \"<string>\",\n  \"footer\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\",\n  \"total\": \"<double>\",\n  \"subtotal\": \"<double>\",\n  \"taxSubtotals\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"discountType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"discountValue\": \"<double>\",\n  \"requestedChanges\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QIP/SaveQuote?checkForDuplicateDisplayId=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"SaveQuote"
									],
									"query": [
										{
											"key": "checkForDuplicateDisplayId",
											"value": "false"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"quoteId\": \"<uuid>\",\n  \"quoteDisplayId\": \"<string>\",\n  \"customerId\": \"<integer>\",\n  \"customer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobs\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"issueDate\": \"<dateTime>\",\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"statusChangeDate\": \"<dateTime>\",\n  \"lineItems\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"emailAddresses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"amount\": \"<double>\",\n  \"message\": \"<string>\",\n  \"footer\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\",\n  \"total\": \"<double>\",\n  \"subtotal\": \"<double>\",\n  \"taxSubtotals\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"discountType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"discountValue\": \"<double>\",\n  \"requestedChanges\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QIP/SaveQuote?checkForDuplicateDisplayId=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"SaveQuote"
											],
											"query": [
												{
													"key": "checkForDuplicateDisplayId",
													"value": "false"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/SaveInvoice",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"invoiceId\": \"<uuid>\",\n  \"invoiceDisplayId\": \"<string>\",\n  \"customerId\": \"<integer>\",\n  \"customer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobs\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"issueDate\": \"<dateTime>\",\n  \"dueDate\": \"<dateTime>\",\n  \"dueDateType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"statusDescription\": \"<string>\",\n  \"statusChangeDate\": \"<dateTime>\",\n  \"lineItems\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"amount\": \"<double>\",\n  \"balanceDue\": \"<double>\",\n  \"payableBalance\": \"<double>\",\n  \"message\": \"<string>\",\n  \"footer\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\",\n  \"total\": \"<double>\",\n  \"subtotal\": \"<double>\",\n  \"taxSubtotals\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"discountType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"discountValue\": \"<double>\",\n  \"discount\": \"<double>\",\n  \"transactions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"emailAddresses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"taxRateTotals\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quickBooks\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"xeroInvoiceId\": \"<uuid>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QIP/SaveInvoice?checkForDuplicateDisplayId=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"SaveInvoice"
									],
									"query": [
										{
											"key": "checkForDuplicateDisplayId",
											"value": "false"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"invoiceId\": \"<uuid>\",\n  \"invoiceDisplayId\": \"<string>\",\n  \"customerId\": \"<integer>\",\n  \"customer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobs\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"issueDate\": \"<dateTime>\",\n  \"dueDate\": \"<dateTime>\",\n  \"dueDateType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"statusDescription\": \"<string>\",\n  \"statusChangeDate\": \"<dateTime>\",\n  \"lineItems\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"amount\": \"<double>\",\n  \"balanceDue\": \"<double>\",\n  \"payableBalance\": \"<double>\",\n  \"message\": \"<string>\",\n  \"footer\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\",\n  \"total\": \"<double>\",\n  \"subtotal\": \"<double>\",\n  \"taxSubtotals\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"discountType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"discountValue\": \"<double>\",\n  \"discount\": \"<double>\",\n  \"transactions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"emailAddresses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"taxRateTotals\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quickBooks\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"xeroInvoiceId\": \"<uuid>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QIP/SaveInvoice?checkForDuplicateDisplayId=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"SaveInvoice"
											],
											"query": [
												{
													"key": "checkForDuplicateDisplayId",
													"value": "false"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/ExportInvoiceToQbo",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QIP/ExportInvoiceToQbo?invoiceId=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"ExportInvoiceToQbo"
									],
									"query": [
										{
											"key": "invoiceId",
											"value": "<uuid>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QIP/ExportInvoiceToQbo?invoiceId=<uuid>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"ExportInvoiceToQbo"
											],
											"query": [
												{
													"key": "invoiceId",
													"value": "<uuid>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/DeleteQuote",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"quoteId\": \"<uuid>\",\n  \"quoteDisplayId\": \"<string>\",\n  \"customerId\": \"<integer>\",\n  \"customer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobs\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"issueDate\": \"<dateTime>\",\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"statusChangeDate\": \"<dateTime>\",\n  \"lineItems\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"emailAddresses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"amount\": \"<double>\",\n  \"message\": \"<string>\",\n  \"footer\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\",\n  \"total\": \"<double>\",\n  \"subtotal\": \"<double>\",\n  \"taxSubtotals\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"discountType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"discountValue\": \"<double>\",\n  \"requestedChanges\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QIP/DeleteQuote",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"DeleteQuote"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"quoteId\": \"<uuid>\",\n  \"quoteDisplayId\": \"<string>\",\n  \"customerId\": \"<integer>\",\n  \"customer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobs\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"issueDate\": \"<dateTime>\",\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"statusChangeDate\": \"<dateTime>\",\n  \"lineItems\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"emailAddresses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"amount\": \"<double>\",\n  \"message\": \"<string>\",\n  \"footer\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\",\n  \"total\": \"<double>\",\n  \"subtotal\": \"<double>\",\n  \"taxSubtotals\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"discountType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"discountValue\": \"<double>\",\n  \"requestedChanges\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QIP/DeleteQuote",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"DeleteQuote"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/DeleteInvoice",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"invoiceId\": \"<uuid>\",\n  \"invoiceDisplayId\": \"<string>\",\n  \"customerId\": \"<integer>\",\n  \"customer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobs\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"issueDate\": \"<dateTime>\",\n  \"dueDate\": \"<dateTime>\",\n  \"dueDateType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"statusDescription\": \"<string>\",\n  \"statusChangeDate\": \"<dateTime>\",\n  \"lineItems\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"amount\": \"<double>\",\n  \"balanceDue\": \"<double>\",\n  \"payableBalance\": \"<double>\",\n  \"message\": \"<string>\",\n  \"footer\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\",\n  \"total\": \"<double>\",\n  \"subtotal\": \"<double>\",\n  \"taxSubtotals\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"discountType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"discountValue\": \"<double>\",\n  \"discount\": \"<double>\",\n  \"transactions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"emailAddresses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"taxRateTotals\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quickBooks\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"xeroInvoiceId\": \"<uuid>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QIP/DeleteInvoice",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"DeleteInvoice"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"invoiceId\": \"<uuid>\",\n  \"invoiceDisplayId\": \"<string>\",\n  \"customerId\": \"<integer>\",\n  \"customer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobs\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"issueDate\": \"<dateTime>\",\n  \"dueDate\": \"<dateTime>\",\n  \"dueDateType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"statusDescription\": \"<string>\",\n  \"statusChangeDate\": \"<dateTime>\",\n  \"lineItems\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"amount\": \"<double>\",\n  \"balanceDue\": \"<double>\",\n  \"payableBalance\": \"<double>\",\n  \"message\": \"<string>\",\n  \"footer\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\",\n  \"total\": \"<double>\",\n  \"subtotal\": \"<double>\",\n  \"taxSubtotals\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"discountType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"discountValue\": \"<double>\",\n  \"discount\": \"<double>\",\n  \"transactions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"emailAddresses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"taxRateTotals\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quickBooks\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"xeroInvoiceId\": \"<uuid>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QIP/DeleteInvoice",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"DeleteInvoice"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/BulkDeleteQuotes",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customerId\": \"<integer>\",\n  \"customerIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\",\n  \"status\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QIP/BulkDeleteQuotes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"BulkDeleteQuotes"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customerId\": \"<integer>\",\n  \"customerIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\",\n  \"status\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QIP/BulkDeleteQuotes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"BulkDeleteQuotes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/BulkDeleteInvoices",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customerId\": \"<integer>\",\n  \"customerIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\",\n  \"status\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QIP/BulkDeleteInvoices",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"BulkDeleteInvoices"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customerId\": \"<integer>\",\n  \"customerIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\",\n  \"status\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QIP/BulkDeleteInvoices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"BulkDeleteInvoices"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/DeleteQuoteAttachment",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QIP/DeleteQuoteAttachment?quoteId=<uuid>&commentId=<integer>&attachmentId=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"DeleteQuoteAttachment"
									],
									"query": [
										{
											"key": "quoteId",
											"value": "<uuid>"
										},
										{
											"key": "commentId",
											"value": "<integer>"
										},
										{
											"key": "attachmentId",
											"value": "<uuid>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QIP/DeleteQuoteAttachment?quoteId=<uuid>&commentId=<integer>&attachmentId=<uuid>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"DeleteQuoteAttachment"
											],
											"query": [
												{
													"key": "quoteId",
													"value": "<uuid>"
												},
												{
													"key": "commentId",
													"value": "<integer>"
												},
												{
													"key": "attachmentId",
													"value": "<uuid>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/DeleteInvoiceAttachment",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QIP/DeleteInvoiceAttachment?invoiceId=<uuid>&commentId=<integer>&attachmentId=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"DeleteInvoiceAttachment"
									],
									"query": [
										{
											"key": "invoiceId",
											"value": "<uuid>"
										},
										{
											"key": "commentId",
											"value": "<integer>"
										},
										{
											"key": "attachmentId",
											"value": "<uuid>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QIP/DeleteInvoiceAttachment?invoiceId=<uuid>&commentId=<integer>&attachmentId=<uuid>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"DeleteInvoiceAttachment"
											],
											"query": [
												{
													"key": "invoiceId",
													"value": "<uuid>"
												},
												{
													"key": "commentId",
													"value": "<integer>"
												},
												{
													"key": "attachmentId",
													"value": "<uuid>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/GetQuotesForCustomers",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customerId\": \"<integer>\",\n  \"customerIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\",\n  \"status\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QIP/GetQuotesForCustomers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"GetQuotesForCustomers"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customerId\": \"<integer>\",\n  \"customerIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\",\n  \"status\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QIP/GetQuotesForCustomers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"GetQuotesForCustomers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/GetInvoicesForCustomers",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customerId\": \"<integer>\",\n  \"customerIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\",\n  \"status\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QIP/GetInvoicesForCustomers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"GetInvoicesForCustomers"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customerId\": \"<integer>\",\n  \"customerIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\",\n  \"status\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QIP/GetInvoicesForCustomers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"GetInvoicesForCustomers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/BulkCopyQuotes",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customerId\": \"<integer>\",\n  \"customerIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\",\n  \"status\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QIP/BulkCopyQuotes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"BulkCopyQuotes"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customerId\": \"<integer>\",\n  \"customerIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\",\n  \"status\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QIP/BulkCopyQuotes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"BulkCopyQuotes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/BulkCopyInvoices",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customerId\": \"<integer>\",\n  \"customerIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\",\n  \"status\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QIP/BulkCopyInvoices",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"BulkCopyInvoices"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customerId\": \"<integer>\",\n  \"customerIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\",\n  \"status\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QIP/BulkCopyInvoices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"BulkCopyInvoices"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/BulkAssignCustomerInvoices",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customerId\": \"<integer>\",\n  \"customerIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\",\n  \"status\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QIP/BulkAssignCustomerInvoices",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"BulkAssignCustomerInvoices"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customerId\": \"<integer>\",\n  \"customerIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\",\n  \"status\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QIP/BulkAssignCustomerInvoices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"BulkAssignCustomerInvoices"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/BulkAssignCustomerQuotes",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customerId\": \"<integer>\",\n  \"customerIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\",\n  \"status\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QIP/BulkAssignCustomerQuotes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"BulkAssignCustomerQuotes"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customerId\": \"<integer>\",\n  \"customerIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\",\n  \"status\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QIP/BulkAssignCustomerQuotes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"BulkAssignCustomerQuotes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/SaveDisplaySettings",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"displayName\": \"<string>\",\n  \"logo\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"street\": \"<string>\",\n  \"city\": \"<string>\",\n  \"stateProv\": \"<string>\",\n  \"country\": \"<string>\",\n  \"postalCode\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"email\": \"<string>\",\n  \"defaultFooterQuote\": \"<string>\",\n  \"defaultFooterInvoice\": \"<string>\",\n  \"emailMessageQuote\": \"<string>\",\n  \"emailMessageInvoice\": \"<string>\",\n  \"quoteEmailSubject\": \"<string>\",\n  \"invoiceEmailSubject\": \"<string>\",\n  \"quoteDisplayIdAuto\": \"<integer>\",\n  \"invoiceDisplayIdAuto\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QIP/SaveDisplaySettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"SaveDisplaySettings"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"displayName\": \"<string>\",\n  \"logo\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"street\": \"<string>\",\n  \"city\": \"<string>\",\n  \"stateProv\": \"<string>\",\n  \"country\": \"<string>\",\n  \"postalCode\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"email\": \"<string>\",\n  \"defaultFooterQuote\": \"<string>\",\n  \"defaultFooterInvoice\": \"<string>\",\n  \"emailMessageQuote\": \"<string>\",\n  \"emailMessageInvoice\": \"<string>\",\n  \"quoteEmailSubject\": \"<string>\",\n  \"invoiceEmailSubject\": \"<string>\",\n  \"quoteDisplayIdAuto\": \"<integer>\",\n  \"invoiceDisplayIdAuto\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QIP/SaveDisplaySettings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"SaveDisplaySettings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/SaveEmailSettings",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"displayName\": \"<string>\",\n  \"logo\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"street\": \"<string>\",\n  \"city\": \"<string>\",\n  \"stateProv\": \"<string>\",\n  \"country\": \"<string>\",\n  \"postalCode\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"email\": \"<string>\",\n  \"defaultFooterQuote\": \"<string>\",\n  \"defaultFooterInvoice\": \"<string>\",\n  \"emailMessageQuote\": \"<string>\",\n  \"emailMessageInvoice\": \"<string>\",\n  \"quoteEmailSubject\": \"<string>\",\n  \"invoiceEmailSubject\": \"<string>\",\n  \"quoteDisplayIdAuto\": \"<integer>\",\n  \"invoiceDisplayIdAuto\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QIP/SaveEmailSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"SaveEmailSettings"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"displayName\": \"<string>\",\n  \"logo\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"street\": \"<string>\",\n  \"city\": \"<string>\",\n  \"stateProv\": \"<string>\",\n  \"country\": \"<string>\",\n  \"postalCode\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"email\": \"<string>\",\n  \"defaultFooterQuote\": \"<string>\",\n  \"defaultFooterInvoice\": \"<string>\",\n  \"emailMessageQuote\": \"<string>\",\n  \"emailMessageInvoice\": \"<string>\",\n  \"quoteEmailSubject\": \"<string>\",\n  \"invoiceEmailSubject\": \"<string>\",\n  \"quoteDisplayIdAuto\": \"<integer>\",\n  \"invoiceDisplayIdAuto\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QIP/SaveEmailSettings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"SaveEmailSettings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/UpdateQuoteStatus",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"quoteId\": \"<uuid>\",\n  \"quoteDisplayId\": \"<string>\",\n  \"customerId\": \"<integer>\",\n  \"customer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobs\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"issueDate\": \"<dateTime>\",\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"statusChangeDate\": \"<dateTime>\",\n  \"lineItems\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"emailAddresses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"amount\": \"<double>\",\n  \"message\": \"<string>\",\n  \"footer\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\",\n  \"total\": \"<double>\",\n  \"subtotal\": \"<double>\",\n  \"taxSubtotals\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"discountType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"discountValue\": \"<double>\",\n  \"requestedChanges\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QIP/UpdateQuoteStatus",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"UpdateQuoteStatus"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"quoteId\": \"<uuid>\",\n  \"quoteDisplayId\": \"<string>\",\n  \"customerId\": \"<integer>\",\n  \"customer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobs\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"issueDate\": \"<dateTime>\",\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"statusChangeDate\": \"<dateTime>\",\n  \"lineItems\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"emailAddresses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"amount\": \"<double>\",\n  \"message\": \"<string>\",\n  \"footer\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\",\n  \"total\": \"<double>\",\n  \"subtotal\": \"<double>\",\n  \"taxSubtotals\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"discountType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"discountValue\": \"<double>\",\n  \"requestedChanges\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QIP/UpdateQuoteStatus",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"UpdateQuoteStatus"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/BulkUpdateQuoteStatus",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customerId\": \"<integer>\",\n  \"customerIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\",\n  \"status\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QIP/BulkUpdateQuoteStatus",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"BulkUpdateQuoteStatus"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customerId\": \"<integer>\",\n  \"customerIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\",\n  \"status\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QIP/BulkUpdateQuoteStatus",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"BulkUpdateQuoteStatus"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/UpdateInvoiceStatus",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"invoiceId\": \"<uuid>\",\n  \"invoiceDisplayId\": \"<string>\",\n  \"customerId\": \"<integer>\",\n  \"customer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobs\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"issueDate\": \"<dateTime>\",\n  \"dueDate\": \"<dateTime>\",\n  \"dueDateType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"statusDescription\": \"<string>\",\n  \"statusChangeDate\": \"<dateTime>\",\n  \"lineItems\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"amount\": \"<double>\",\n  \"balanceDue\": \"<double>\",\n  \"payableBalance\": \"<double>\",\n  \"message\": \"<string>\",\n  \"footer\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\",\n  \"total\": \"<double>\",\n  \"subtotal\": \"<double>\",\n  \"taxSubtotals\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"discountType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"discountValue\": \"<double>\",\n  \"discount\": \"<double>\",\n  \"transactions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"emailAddresses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"taxRateTotals\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quickBooks\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"xeroInvoiceId\": \"<uuid>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QIP/UpdateInvoiceStatus",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"UpdateInvoiceStatus"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"invoiceId\": \"<uuid>\",\n  \"invoiceDisplayId\": \"<string>\",\n  \"customerId\": \"<integer>\",\n  \"customer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobs\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"issueDate\": \"<dateTime>\",\n  \"dueDate\": \"<dateTime>\",\n  \"dueDateType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"statusDescription\": \"<string>\",\n  \"statusChangeDate\": \"<dateTime>\",\n  \"lineItems\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"amount\": \"<double>\",\n  \"balanceDue\": \"<double>\",\n  \"payableBalance\": \"<double>\",\n  \"message\": \"<string>\",\n  \"footer\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\",\n  \"total\": \"<double>\",\n  \"subtotal\": \"<double>\",\n  \"taxSubtotals\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"discountType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"discountValue\": \"<double>\",\n  \"discount\": \"<double>\",\n  \"transactions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"emailAddresses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"taxRateTotals\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quickBooks\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"xeroInvoiceId\": \"<uuid>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QIP/UpdateInvoiceStatus",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"UpdateInvoiceStatus"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/BulkUpdateInvoiceStatus",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customerId\": \"<integer>\",\n  \"customerIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\",\n  \"status\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QIP/BulkUpdateInvoiceStatus",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"BulkUpdateInvoiceStatus"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customerId\": \"<integer>\",\n  \"customerIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\",\n  \"status\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QIP/BulkUpdateInvoiceStatus",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"BulkUpdateInvoiceStatus"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/GetQuotesForInvoice",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QIP/GetQuotesForInvoice?invoiceId=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"GetQuotesForInvoice"
									],
									"query": [
										{
											"key": "invoiceId",
											"value": "<uuid>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QIP/GetQuotesForInvoice?invoiceId=<uuid>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"GetQuotesForInvoice"
											],
											"query": [
												{
													"key": "invoiceId",
													"value": "<uuid>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/GetQuotesForJob",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QIP/GetQuotesForJob?jobId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"GetQuotesForJob"
									],
									"query": [
										{
											"key": "jobId",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QIP/GetQuotesForJob?jobId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"GetQuotesForJob"
											],
											"query": [
												{
													"key": "jobId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/GetInvoicesForQuote",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QIP/GetInvoicesForQuote?quoteId=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"GetInvoicesForQuote"
									],
									"query": [
										{
											"key": "quoteId",
											"value": "<uuid>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QIP/GetInvoicesForQuote?quoteId=<uuid>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"GetInvoicesForQuote"
											],
											"query": [
												{
													"key": "quoteId",
													"value": "<uuid>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/GetInvoicesForJob",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QIP/GetInvoicesForJob?jobId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"GetInvoicesForJob"
									],
									"query": [
										{
											"key": "jobId",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QIP/GetInvoicesForJob?jobId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"GetInvoicesForJob"
											],
											"query": [
												{
													"key": "jobId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/ManageQuoteAssociations",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"removePriorLinks\": \"<boolean>\",\n  \"customerChanged\": \"<boolean>\",\n  \"customerId\": \"<integer>\",\n  \"quoteIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoiceIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QIP/ManageQuoteAssociations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"ManageQuoteAssociations"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"removePriorLinks\": \"<boolean>\",\n  \"customerChanged\": \"<boolean>\",\n  \"customerId\": \"<integer>\",\n  \"quoteIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoiceIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QIP/ManageQuoteAssociations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"ManageQuoteAssociations"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/ManageInvoiceAssociations",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"removePriorLinks\": \"<boolean>\",\n  \"customerChanged\": \"<boolean>\",\n  \"customerId\": \"<integer>\",\n  \"quoteIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoiceIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QIP/ManageInvoiceAssociations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"ManageInvoiceAssociations"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"removePriorLinks\": \"<boolean>\",\n  \"customerChanged\": \"<boolean>\",\n  \"customerId\": \"<integer>\",\n  \"quoteIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoiceIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QIP/ManageInvoiceAssociations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"ManageInvoiceAssociations"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/ManageJobAssociations",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"removePriorLinks\": \"<boolean>\",\n  \"customerChanged\": \"<boolean>\",\n  \"customerId\": \"<integer>\",\n  \"quoteIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoiceIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QIP/ManageJobAssociations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"ManageJobAssociations"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"removePriorLinks\": \"<boolean>\",\n  \"customerChanged\": \"<boolean>\",\n  \"customerId\": \"<integer>\",\n  \"quoteIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoiceIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QIP/ManageJobAssociations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"ManageJobAssociations"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/AddTransaction",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"transactionId\": \"<integer>\",\n  \"invoiceId\": \"<uuid>\",\n  \"amount\": \"<double>\",\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"method\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"methodLabel\": \"<string>\",\n  \"transactionDate\": \"<dateTime>\",\n  \"referenceNumber\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"wePayPaymentId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QIP/AddTransaction",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"AddTransaction"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"transactionId\": \"<integer>\",\n  \"invoiceId\": \"<uuid>\",\n  \"amount\": \"<double>\",\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"method\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"methodLabel\": \"<string>\",\n  \"transactionDate\": \"<dateTime>\",\n  \"referenceNumber\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"wePayPaymentId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QIP/AddTransaction",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"AddTransaction"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/DeleteTransaction",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QIP/DeleteTransaction?transactionId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"DeleteTransaction"
									],
									"query": [
										{
											"key": "transactionId",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QIP/DeleteTransaction?transactionId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"DeleteTransaction"
											],
											"query": [
												{
													"key": "transactionId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/InitWepayAcct",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"legalEntityId\": \"<string>\",\n  \"accountId\": \"<string>\",\n  \"statementDescription\": \"<string>\",\n  \"email\": \"<string>\",\n  \"merchantCode\": \"<string>\",\n  \"isCanadianMerchant\": \"<boolean>\",\n  \"acceptsCanadianDebit\": \"<boolean>\",\n  \"wePayEnv\": \"<string>\",\n  \"wePayAuditLogType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"statusMessage\": \"<string>\",\n  \"statusError\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QIP/InitWepayAcct",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"InitWepayAcct"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"legalEntityId\": \"<string>\",\n  \"accountId\": \"<string>\",\n  \"statementDescription\": \"<string>\",\n  \"email\": \"<string>\",\n  \"merchantCode\": \"<string>\",\n  \"isCanadianMerchant\": \"<boolean>\",\n  \"acceptsCanadianDebit\": \"<boolean>\",\n  \"wePayEnv\": \"<string>\",\n  \"wePayAuditLogType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"statusMessage\": \"<string>\",\n  \"statusError\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QIP/InitWepayAcct",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"InitWepayAcct"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/UpdateStatementDescription",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"legalEntityId\": \"<string>\",\n  \"accountId\": \"<string>\",\n  \"statementDescription\": \"<string>\",\n  \"email\": \"<string>\",\n  \"merchantCode\": \"<string>\",\n  \"isCanadianMerchant\": \"<boolean>\",\n  \"acceptsCanadianDebit\": \"<boolean>\",\n  \"wePayEnv\": \"<string>\",\n  \"wePayAuditLogType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"statusMessage\": \"<string>\",\n  \"statusError\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QIP/UpdateStatementDescription",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"UpdateStatementDescription"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"legalEntityId\": \"<string>\",\n  \"accountId\": \"<string>\",\n  \"statementDescription\": \"<string>\",\n  \"email\": \"<string>\",\n  \"merchantCode\": \"<string>\",\n  \"isCanadianMerchant\": \"<boolean>\",\n  \"acceptsCanadianDebit\": \"<boolean>\",\n  \"wePayEnv\": \"<string>\",\n  \"wePayAuditLogType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"statusMessage\": \"<string>\",\n  \"statusError\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QIP/UpdateStatementDescription",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"UpdateStatementDescription"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/GetInvoiceEdits",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QIP/GetInvoiceEdits?invoiceId=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"GetInvoiceEdits"
									],
									"query": [
										{
											"key": "invoiceId",
											"value": "<uuid>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QIP/GetInvoiceEdits?invoiceId=<uuid>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"GetInvoiceEdits"
											],
											"query": [
												{
													"key": "invoiceId",
													"value": "<uuid>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/GetQuoteEdits",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QIP/GetQuoteEdits?quoteId=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"GetQuoteEdits"
									],
									"query": [
										{
											"key": "quoteId",
											"value": "<uuid>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QIP/GetQuoteEdits?quoteId=<uuid>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"GetQuoteEdits"
											],
											"query": [
												{
													"key": "quoteId",
													"value": "<uuid>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QIP/SendQuoteInvoice",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"quoteId\": \"<uuid>\",\n  \"invoiceId\": \"<uuid>\",\n  \"displayId\": \"<string>\",\n  \"recipients\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"subject\": \"<string>\",\n  \"body\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QIP/SendQuoteInvoice",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QIP",
										"SendQuoteInvoice"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"quoteId\": \"<uuid>\",\n  \"invoiceId\": \"<uuid>\",\n  \"displayId\": \"<string>\",\n  \"recipients\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"subject\": \"<string>\",\n  \"body\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QIP/SendQuoteInvoice",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QIP",
												"SendQuoteInvoice"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "QuickBooks",
					"item": [
						{
							"name": "/api/QuickBooks/GetQWCFile",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/GetQWCFile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"GetQWCFile"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/GetQWCFile",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"GetQWCFile"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/UpdateCompanySettings",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"syncSetting\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customersImportType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobsImportType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timeActivityFormat\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"addressDisplayPreference\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"markTimeEntriesBillable\": \"<boolean>\",\n  \"isRefreshTokenExpired\": \"<boolean>\",\n  \"hasAccessToken\": \"<boolean>\",\n  \"hourlyRate\": \"<double>\",\n  \"payrollItems\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"payrollIdRegular\": \"<string>\",\n  \"payrollIdOvertime\": \"<string>\",\n  \"payrollIdDoubletime\": \"<string>\",\n  \"payrollPotential\": \"<boolean>\",\n  \"enableCustomers\": \"<boolean>\",\n  \"country\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/UpdateCompanySettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"UpdateCompanySettings"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"syncSetting\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customersImportType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"jobsImportType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timeActivityFormat\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"addressDisplayPreference\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"markTimeEntriesBillable\": \"<boolean>\",\n  \"isRefreshTokenExpired\": \"<boolean>\",\n  \"hasAccessToken\": \"<boolean>\",\n  \"hourlyRate\": \"<double>\",\n  \"payrollItems\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"payrollIdRegular\": \"<string>\",\n  \"payrollIdOvertime\": \"<string>\",\n  \"payrollIdDoubletime\": \"<string>\",\n  \"payrollPotential\": \"<boolean>\",\n  \"enableCustomers\": \"<boolean>\",\n  \"country\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/UpdateCompanySettings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"UpdateCompanySettings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/DeleteCompanyFileSettings",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/DeleteCompanyFileSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"DeleteCompanyFileSettings"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/DeleteCompanyFileSettings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"DeleteCompanyFileSettings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/GetCompanyFileSettings",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/GetCompanyFileSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"GetCompanyFileSettings"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/GetCompanyFileSettings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"GetCompanyFileSettings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/UpdateCompanyFileSettings",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"autoImport\": \"<boolean>\",\n  \"payrollIdRegular\": \"<string>\",\n  \"payrollIdOvertime\": \"<string>\",\n  \"payrollIdDoubletime\": \"<string>\",\n  \"markTimeEntriesBillable\": \"<boolean>\",\n  \"splitCustomerNameStyle\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"addressDisplayPreference\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"importJobsOnly\": \"<boolean>\",\n  \"jobsImportType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customersImportType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/UpdateCompanyFileSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"UpdateCompanyFileSettings"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"autoImport\": \"<boolean>\",\n  \"payrollIdRegular\": \"<string>\",\n  \"payrollIdOvertime\": \"<string>\",\n  \"payrollIdDoubletime\": \"<string>\",\n  \"markTimeEntriesBillable\": \"<boolean>\",\n  \"splitCustomerNameStyle\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"addressDisplayPreference\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"importJobsOnly\": \"<boolean>\",\n  \"jobsImportType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customersImportType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/UpdateCompanyFileSettings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"UpdateCompanyFileSettings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/ClearExportQueue",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/ClearExportQueue",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"ClearExportQueue"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/ClearExportQueue",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"ClearExportQueue"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/GetUnmappedCSTasks",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/GetUnmappedCSTasks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"GetUnmappedCSTasks"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/GetUnmappedCSTasks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"GetUnmappedCSTasks"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/GetItemNameMatches",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/GetItemNameMatches",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"GetItemNameMatches"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/GetItemNameMatches",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"GetItemNameMatches"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/GetAccounts",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/GetAccounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"GetAccounts"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/GetAccounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"GetAccounts"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/GetQBConnectionExists",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/GetQBConnectionExists",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"GetQBConnectionExists"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/GetQBConnectionExists",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"GetQBConnectionExists"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/cleanQBConnections",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/cleanQBConnections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"cleanQBConnections"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/cleanQBConnections",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"cleanQBConnections"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/GetUnmappedQBItems",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/GetUnmappedQBItems",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"GetUnmappedQBItems"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/GetUnmappedQBItems",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"GetUnmappedQBItems"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/GetQBItems",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/GetQBItems",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"GetQBItems"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/GetQBItems",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"GetQBItems"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/GetQBPayrollItems",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/GetQBPayrollItems",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"GetQBPayrollItems"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/GetQBPayrollItems",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"GetQBPayrollItems"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/GetUnmappedCSEmployees",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/GetUnmappedCSEmployees",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"GetUnmappedCSEmployees"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/GetUnmappedCSEmployees",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"GetUnmappedCSEmployees"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/GetUnmappedQBEmployees",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/GetUnmappedQBEmployees",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"GetUnmappedQBEmployees"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/GetUnmappedQBEmployees",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"GetUnmappedQBEmployees"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/GetQBEmployeeNameMatches",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/GetQBEmployeeNameMatches",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"GetQBEmployeeNameMatches"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/GetQBEmployeeNameMatches",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"GetQBEmployeeNameMatches"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/GetQBEmployees",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/GetQBEmployees",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"GetQBEmployees"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/GetQBEmployees",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"GetQBEmployees"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/GetVendors",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/GetVendors",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"GetVendors"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/GetVendors",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"GetVendors"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/ValidateExportTime2",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"skipValidateAndConfirm\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/ValidateExportTime2",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"ValidateExportTime2"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"skipValidateAndConfirm\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/ValidateExportTime2",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"ValidateExportTime2"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/ExportTime2",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"skipValidateAndConfirm\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/ExportTime2",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"ExportTime2"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"skipValidateAndConfirm\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/ExportTime2",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"ExportTime2"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/GetCustomers",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/GetCustomers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"GetCustomers"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/GetCustomers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"GetCustomers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/GetCustomerMappings",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/GetCustomerMappings?query=<string>&sort=<string>&skip=<integer>&take=<integer>&activeOnly=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"GetCustomerMappings"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "sort",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										},
										{
											"key": "activeOnly",
											"value": "<boolean>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/GetCustomerMappings?query=<string>&sort=<string>&skip=<integer>&take=<integer>&activeOnly=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"GetCustomerMappings"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>"
												},
												{
													"key": "sort",
													"value": "<string>"
												},
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												},
												{
													"key": "activeOnly",
													"value": "<boolean>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/GetEmployeeMappings",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/GetEmployeeMappings?query=<string>&sort=<string>&skip=<integer>&take=<integer>&activeOnly=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"GetEmployeeMappings"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "sort",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										},
										{
											"key": "activeOnly",
											"value": "<boolean>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/GetEmployeeMappings?query=<string>&sort=<string>&skip=<integer>&take=<integer>&activeOnly=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"GetEmployeeMappings"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>"
												},
												{
													"key": "sort",
													"value": "<string>"
												},
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												},
												{
													"key": "activeOnly",
													"value": "<boolean>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/GetVendorMappings",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/GetVendorMappings?query=<string>&sort=<string>&skip=<integer>&take=<integer>&activeOnly=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"GetVendorMappings"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "sort",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										},
										{
											"key": "activeOnly",
											"value": "<boolean>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/GetVendorMappings?query=<string>&sort=<string>&skip=<integer>&take=<integer>&activeOnly=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"GetVendorMappings"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>"
												},
												{
													"key": "sort",
													"value": "<string>"
												},
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												},
												{
													"key": "activeOnly",
													"value": "<boolean>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/GetItemMappings",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/GetItemMappings?query=<string>&sort=<string>&skip=<integer>&take=<integer>&activeOnly=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"GetItemMappings"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "sort",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										},
										{
											"key": "activeOnly",
											"value": "<boolean>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/GetItemMappings?query=<string>&sort=<string>&skip=<integer>&take=<integer>&activeOnly=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"GetItemMappings"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>"
												},
												{
													"key": "sort",
													"value": "<string>"
												},
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												},
												{
													"key": "activeOnly",
													"value": "<boolean>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/GetClassMappings",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/GetClassMappings?query=<string>&sort=<string>&skip=<integer>&take=<integer>&activeOnly=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"GetClassMappings"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "sort",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										},
										{
											"key": "activeOnly",
											"value": "<boolean>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/GetClassMappings?query=<string>&sort=<string>&skip=<integer>&take=<integer>&activeOnly=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"GetClassMappings"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>"
												},
												{
													"key": "sort",
													"value": "<string>"
												},
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												},
												{
													"key": "activeOnly",
													"value": "<boolean>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/GetTimeOffMappings",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/GetTimeOffMappings?query=<string>&sort=<string>&skip=<integer>&take=<integer>&activeOnly=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"GetTimeOffMappings"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "sort",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										},
										{
											"key": "activeOnly",
											"value": "<boolean>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/GetTimeOffMappings?query=<string>&sort=<string>&skip=<integer>&take=<integer>&activeOnly=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"GetTimeOffMappings"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>"
												},
												{
													"key": "sort",
													"value": "<string>"
												},
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												},
												{
													"key": "activeOnly",
													"value": "<boolean>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/DeleteTimeOffMapping",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"qbPayrollItem\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timeOffPolicy\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/DeleteTimeOffMapping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"DeleteTimeOffMapping"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"qbPayrollItem\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timeOffPolicy\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/DeleteTimeOffMapping",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"DeleteTimeOffMapping"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/GetUnmappedCSJobToClasses",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/GetUnmappedCSJobToClasses",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"GetUnmappedCSJobToClasses"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/GetUnmappedCSJobToClasses",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"GetUnmappedCSJobToClasses"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/GetUnmappedCSGroupToClasses",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/GetUnmappedCSGroupToClasses",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"GetUnmappedCSGroupToClasses"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/GetUnmappedCSGroupToClasses",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"GetUnmappedCSGroupToClasses"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/GetUnmappedCustomers",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/GetUnmappedCustomers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"GetUnmappedCustomers"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/GetUnmappedCustomers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"GetUnmappedCustomers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/GetUnmappedCustomersSkipTake",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/GetUnmappedCustomersSkipTake?skip=<integer>&take=<integer>&active=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"GetUnmappedCustomersSkipTake"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										},
										{
											"key": "active",
											"value": "true"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/GetUnmappedCustomersSkipTake?skip=<integer>&take=<integer>&active=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"GetUnmappedCustomersSkipTake"
											],
											"query": [
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												},
												{
													"key": "active",
													"value": "true"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/GetUnmappedJobs",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/GetUnmappedJobs?enableCustomers=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"GetUnmappedJobs"
									],
									"query": [
										{
											"key": "enableCustomers",
											"value": "false"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/GetUnmappedJobs?enableCustomers=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"GetUnmappedJobs"
											],
											"query": [
												{
													"key": "enableCustomers",
													"value": "false"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/GetCustomerNameMatches",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/GetCustomerNameMatches?skip=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"GetCustomerNameMatches"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/GetCustomerNameMatches?skip=<integer>&take=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"GetCustomerNameMatches"
											],
											"query": [
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/PostItems",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"taskId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"active\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"createTime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastModifiedInQB\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"payrollIdRegular\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"payrollIdOvertime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"payrollIdDoubletime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"incomeAccountId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"taskId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"active\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"createTime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastModifiedInQB\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"payrollIdRegular\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"payrollIdOvertime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"payrollIdDoubletime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"incomeAccountId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/PostItems",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"PostItems"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"taskId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"active\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"createTime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastModifiedInQB\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"payrollIdRegular\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"payrollIdOvertime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"payrollIdDoubletime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"incomeAccountId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"taskId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"active\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"createTime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastModifiedInQB\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"payrollIdRegular\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"payrollIdOvertime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"payrollIdDoubletime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"incomeAccountId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/PostItems",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"PostItems"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/UpdateCustomerMapping",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"job\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"csCustomer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"markTimeEntriesBillable\": \"<boolean>\",\n  \"hourlyRate\": \"<double>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/UpdateCustomerMapping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"UpdateCustomerMapping"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"job\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"csCustomer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"markTimeEntriesBillable\": \"<boolean>\",\n  \"hourlyRate\": \"<double>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/UpdateCustomerMapping",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"UpdateCustomerMapping"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/RemoveCustomerMapping",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"job\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"csCustomer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"markTimeEntriesBillable\": \"<boolean>\",\n  \"hourlyRate\": \"<double>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/RemoveCustomerMapping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"RemoveCustomerMapping"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"job\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"csCustomer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"markTimeEntriesBillable\": \"<boolean>\",\n  \"hourlyRate\": \"<double>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/RemoveCustomerMapping",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"RemoveCustomerMapping"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/RemoveClassMapping",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"qbClass\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"mappingType\": \"<string>\",\n  \"csJob\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"csGroup\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/RemoveClassMapping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"RemoveClassMapping"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"qbClass\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"mappingType\": \"<string>\",\n  \"csJob\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"csGroup\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/RemoveClassMapping",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"RemoveClassMapping"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/UpdateEmployeeMapping",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"qbEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"csEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"markTimeEntriesBillable\": \"<boolean>\",\n  \"hourlyRate\": \"<double>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/UpdateEmployeeMapping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"UpdateEmployeeMapping"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"qbEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"csEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"markTimeEntriesBillable\": \"<boolean>\",\n  \"hourlyRate\": \"<double>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/UpdateEmployeeMapping",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"UpdateEmployeeMapping"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/RemoveEmployeeMapping",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"qbEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"csEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"markTimeEntriesBillable\": \"<boolean>\",\n  \"hourlyRate\": \"<double>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/RemoveEmployeeMapping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"RemoveEmployeeMapping"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"qbEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"csEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"markTimeEntriesBillable\": \"<boolean>\",\n  \"hourlyRate\": \"<double>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/RemoveEmployeeMapping",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"RemoveEmployeeMapping"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/UpdateVendorMapping",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"qbVendor\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"csEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"markTimeEntriesBillable\": \"<boolean>\",\n  \"hourlyRate\": \"<double>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/UpdateVendorMapping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"UpdateVendorMapping"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"qbVendor\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"csEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"markTimeEntriesBillable\": \"<boolean>\",\n  \"hourlyRate\": \"<double>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/UpdateVendorMapping",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"UpdateVendorMapping"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/RemoveVendorMapping",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"qbVendor\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"csEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"markTimeEntriesBillable\": \"<boolean>\",\n  \"hourlyRate\": \"<double>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/RemoveVendorMapping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"RemoveVendorMapping"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"qbVendor\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"csEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"markTimeEntriesBillable\": \"<boolean>\",\n  \"hourlyRate\": \"<double>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/RemoveVendorMapping",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"RemoveVendorMapping"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/UpdateItemMapping",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"qbItem\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"csTask\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payrollItemRegular\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payrollItemOvertime\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payrollItemDoubletime\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"markTimeEntriesBillable\": \"<boolean>\",\n  \"hourlyRate\": \"<double>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/UpdateItemMapping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"UpdateItemMapping"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"qbItem\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"csTask\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payrollItemRegular\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payrollItemOvertime\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payrollItemDoubletime\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"markTimeEntriesBillable\": \"<boolean>\",\n  \"hourlyRate\": \"<double>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/UpdateItemMapping",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"UpdateItemMapping"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/RemoveItemMapping",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"qbItem\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"csTask\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payrollItemRegular\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payrollItemOvertime\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payrollItemDoubletime\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"markTimeEntriesBillable\": \"<boolean>\",\n  \"hourlyRate\": \"<double>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/RemoveItemMapping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"RemoveItemMapping"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"qbItem\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"csTask\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payrollItemRegular\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payrollItemOvertime\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"payrollItemDoubletime\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"markTimeEntriesBillable\": \"<boolean>\",\n  \"hourlyRate\": \"<double>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/RemoveItemMapping",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"RemoveItemMapping"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/UpdateClassMapping",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"qbClass\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"mappingType\": \"<string>\",\n  \"csJob\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"csGroup\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/UpdateClassMapping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"UpdateClassMapping"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"qbClass\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"mappingType\": \"<string>\",\n  \"csJob\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"csGroup\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/UpdateClassMapping",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"UpdateClassMapping"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/UpdateTimeOffMapping",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"qbPayrollItem\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timeOffPolicy\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/UpdateTimeOffMapping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"UpdateTimeOffMapping"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"qbPayrollItem\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timeOffPolicy\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/UpdateTimeOffMapping",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"UpdateTimeOffMapping"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/PostCustomers",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customerId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"displayName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"job\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"active\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"createTime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastModifiedInQB\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"markTimeEntriesBillable\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"hourlyRate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"importType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customerId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"displayName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"job\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"active\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"createTime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastModifiedInQB\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"markTimeEntriesBillable\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"hourlyRate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"importType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/PostCustomers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"PostCustomers"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customerId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"displayName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"job\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"active\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"createTime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastModifiedInQB\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"markTimeEntriesBillable\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"hourlyRate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"importType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"jobId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customerId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"displayName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"job\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"active\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"createTime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastModifiedInQB\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"markTimeEntriesBillable\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"hourlyRate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"importType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/PostCustomers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"PostCustomers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/PostEmployees",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"givenName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"familyName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"emailAddress\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"active\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"createTime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastModifiedInQB\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"markTimeEntriesBillable\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"hourlyRate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"errorMessage\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"givenName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"familyName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"emailAddress\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"active\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"createTime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastModifiedInQB\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"markTimeEntriesBillable\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"hourlyRate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"errorMessage\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/PostEmployees",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"PostEmployees"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"givenName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"familyName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"emailAddress\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"active\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"createTime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastModifiedInQB\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"markTimeEntriesBillable\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"hourlyRate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"errorMessage\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"givenName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"familyName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"emailAddress\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"active\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"createTime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastModifiedInQB\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"markTimeEntriesBillable\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"hourlyRate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"errorMessage\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/PostEmployees",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"PostEmployees"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/PostVendors",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"displayName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"givenName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"familyName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"emailAddress\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"active\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"createTime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastModifiedInQB\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"markTimeEntriesBillable\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"hourlyRate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"errorMessage\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"displayName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"givenName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"familyName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"emailAddress\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"active\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"createTime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastModifiedInQB\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"markTimeEntriesBillable\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"hourlyRate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"errorMessage\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/PostVendors",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"PostVendors"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"displayName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"givenName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"familyName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"emailAddress\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"active\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"createTime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastModifiedInQB\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"markTimeEntriesBillable\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"hourlyRate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"errorMessage\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"employeeId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"displayName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"givenName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"familyName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"emailAddress\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"active\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"createTime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastModifiedInQB\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"markTimeEntriesBillable\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"hourlyRate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"errorMessage\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/PostVendors",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"PostVendors"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/QuickBooks/SearchSyncLogs",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/QuickBooks/SearchSyncLogs?beginDate=<dateTime>&endDate=<dateTime>&searchTerm=<string>&sortColumn=<string>&sortDirection=<string>&skip=<integer>&take=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"QuickBooks",
										"SearchSyncLogs"
									],
									"query": [
										{
											"key": "beginDate",
											"value": "<dateTime>"
										},
										{
											"key": "endDate",
											"value": "<dateTime>"
										},
										{
											"key": "searchTerm",
											"value": "<string>"
										},
										{
											"key": "sortColumn",
											"value": "<string>"
										},
										{
											"key": "sortDirection",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/QuickBooks/SearchSyncLogs?beginDate=<dateTime>&endDate=<dateTime>&searchTerm=<string>&sortColumn=<string>&sortDirection=<string>&skip=<integer>&take=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"QuickBooks",
												"SearchSyncLogs"
											],
											"query": [
												{
													"key": "beginDate",
													"value": "<dateTime>"
												},
												{
													"key": "endDate",
													"value": "<dateTime>"
												},
												{
													"key": "searchTerm",
													"value": "<string>"
												},
												{
													"key": "sortColumn",
													"value": "<string>"
												},
												{
													"key": "sortDirection",
													"value": "<string>"
												},
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Sage",
					"item": [
						{
							"name": "/api/Sage/ValidateExportTime",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"skipValidateAndConfirm\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Sage/ValidateExportTime",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Sage",
										"ValidateExportTime"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"skipValidateAndConfirm\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Sage/ValidateExportTime",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Sage",
												"ValidateExportTime"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Sage/ExportTime",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"skipValidateAndConfirm\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Sage/ExportTime",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Sage",
										"ExportTime"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"skipValidateAndConfirm\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Sage/ExportTime",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Sage",
												"ExportTime"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Sage/SyncSageEmployees",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"sunt_36\": {},\n  \"dolorf\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Sage/SyncSageEmployees",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Sage",
										"SyncSageEmployees"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"est_\": {},\n  \"sint_6ba\": {},\n  \"proident__c\": {},\n  \"deserunt_8\": {}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Sage/SyncSageEmployees",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Sage",
												"SyncSageEmployees"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Sage/getsageemployees",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Sage/getsageemployees",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Sage",
										"getsageemployees"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Sage/getsageemployees",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Sage",
												"getsageemployees"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Sage/searchSageEmployees",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Sage/searchSageEmployees?skip=<integer>&take=<integer>&searchTerm=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Sage",
										"searchSageEmployees"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										},
										{
											"key": "searchTerm",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Sage/searchSageEmployees?skip=<integer>&take=<integer>&searchTerm=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Sage",
												"searchSageEmployees"
											],
											"query": [
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												},
												{
													"key": "searchTerm",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Sage/syncSageJobs",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"sunt_36\": {},\n  \"dolorf\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Sage/syncSageJobs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Sage",
										"syncSageJobs"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"est_\": {},\n  \"sint_6ba\": {},\n  \"proident__c\": {},\n  \"deserunt_8\": {}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Sage/syncSageJobs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Sage",
												"syncSageJobs"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Sage/getSageJobs",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Sage/getSageJobs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Sage",
										"getSageJobs"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Sage/getSageJobs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Sage",
												"getSageJobs"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Sage/GetMappedJobs",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Sage/GetMappedJobs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Sage",
										"GetMappedJobs"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Sage/GetMappedJobs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Sage",
												"GetMappedJobs"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Sage/GetMappedEmployees",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Sage/GetMappedEmployees",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Sage",
										"GetMappedEmployees"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Sage/GetMappedEmployees",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Sage",
												"GetMappedEmployees"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Sage/GetMappedTasks",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Sage/GetMappedTasks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Sage",
										"GetMappedTasks"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Sage/GetMappedTasks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Sage",
												"GetMappedTasks"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Sage/searchSageJobs",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Sage/searchSageJobs?skip=<integer>&take=<integer>&searchTerm=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Sage",
										"searchSageJobs"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										},
										{
											"key": "searchTerm",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Sage/searchSageJobs?skip=<integer>&take=<integer>&searchTerm=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Sage",
												"searchSageJobs"
											],
											"query": [
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												},
												{
													"key": "searchTerm",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Sage/syncSageCostCodes",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"sunt_36\": {},\n  \"dolorf\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Sage/syncSageCostCodes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Sage",
										"syncSageCostCodes"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"est_\": {},\n  \"sint_6ba\": {},\n  \"proident__c\": {},\n  \"deserunt_8\": {}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Sage/syncSageCostCodes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Sage",
												"syncSageCostCodes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Sage/getSageCostCodes",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Sage/getSageCostCodes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Sage",
										"getSageCostCodes"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Sage/getSageCostCodes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Sage",
												"getSageCostCodes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Sage/searchSageCostCodes",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Sage/searchSageCostCodes?skip=<integer>&take=<integer>&searchTerm=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Sage",
										"searchSageCostCodes"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										},
										{
											"key": "searchTerm",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Sage/searchSageCostCodes?skip=<integer>&take=<integer>&searchTerm=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Sage",
												"searchSageCostCodes"
											],
											"query": [
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												},
												{
													"key": "searchTerm",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Sage/getSageSyncLogs",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Sage/getSageSyncLogs?start=<dateTime>&end=<dateTime>&searchTerm=<string>&skip=<integer>&take=<integer>&sortColumn=<string>&sortDirection=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Sage",
										"getSageSyncLogs"
									],
									"query": [
										{
											"key": "start",
											"value": "<dateTime>"
										},
										{
											"key": "end",
											"value": "<dateTime>"
										},
										{
											"key": "searchTerm",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										},
										{
											"key": "sortColumn",
											"value": "<string>"
										},
										{
											"key": "sortDirection",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Sage/getSageSyncLogs?start=<dateTime>&end=<dateTime>&searchTerm=<string>&skip=<integer>&take=<integer>&sortColumn=<string>&sortDirection=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Sage",
												"getSageSyncLogs"
											],
											"query": [
												{
													"key": "start",
													"value": "<dateTime>"
												},
												{
													"key": "end",
													"value": "<dateTime>"
												},
												{
													"key": "searchTerm",
													"value": "<string>"
												},
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												},
												{
													"key": "sortColumn",
													"value": "<string>"
												},
												{
													"key": "sortDirection",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Sage/getRyvitSubscriptions",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Sage/getRyvitSubscriptions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Sage",
										"getRyvitSubscriptions"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Sage/getRyvitSubscriptions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Sage",
												"getRyvitSubscriptions"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Sage/initSageIntegration",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Sage/initSageIntegration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Sage",
										"initSageIntegration"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Sage/initSageIntegration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Sage",
												"initSageIntegration"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Sage/updateSubscriptionSettings",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"sage100DataSource\": \"<string>\",\n  \"sage100ApiUserId\": \"<string>\",\n  \"sage100ApiPassword\": \"<string>\",\n  \"companyName\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Sage/updateSubscriptionSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Sage",
										"updateSubscriptionSettings"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sage100DataSource\": \"<string>\",\n  \"sage100ApiUserId\": \"<string>\",\n  \"sage100ApiPassword\": \"<string>\",\n  \"companyName\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Sage/updateSubscriptionSettings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Sage",
												"updateSubscriptionSettings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Sage/UpdateEmployeEmapping",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"employeeId\": \"<integer>\",\n  \"companyId\": \"<integer>\",\n  \"sageEmployeeId\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"middleName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"number\": \"<integer>\",\n  \"createdDate\": \"<dateTime>\",\n  \"deletedDate\": \"<dateTime>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Sage/UpdateEmployeEmapping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Sage",
										"UpdateEmployeEmapping"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"employeeId\": \"<integer>\",\n  \"companyId\": \"<integer>\",\n  \"sageEmployeeId\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"middleName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"number\": \"<integer>\",\n  \"createdDate\": \"<dateTime>\",\n  \"deletedDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Sage/UpdateEmployeEmapping",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Sage",
												"UpdateEmployeEmapping"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Sage/UpdateJobMapping",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"companyId\": \"<integer>\",\n  \"jobId\": \"<integer>\",\n  \"sageJobId\": \"<integer>\",\n  \"sageJobNumber\": \"<string>\",\n  \"sageJobName\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Sage/UpdateJobMapping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Sage",
										"UpdateJobMapping"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"companyId\": \"<integer>\",\n  \"jobId\": \"<integer>\",\n  \"sageJobId\": \"<integer>\",\n  \"sageJobNumber\": \"<string>\",\n  \"sageJobName\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Sage/UpdateJobMapping",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Sage",
												"UpdateJobMapping"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Sage/UpdateCostCodeMapping",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"companyId\": \"<integer>\",\n  \"taskId\": \"<integer>\",\n  \"sageCostCodeId\": \"<integer>\",\n  \"sageCostCodeNumber\": \"<string>\",\n  \"description\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Sage/UpdateCostCodeMapping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Sage",
										"UpdateCostCodeMapping"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"companyId\": \"<integer>\",\n  \"taskId\": \"<integer>\",\n  \"sageCostCodeId\": \"<integer>\",\n  \"sageCostCodeNumber\": \"<string>\",\n  \"description\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateDeleted\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Sage/UpdateCostCodeMapping",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Sage",
												"UpdateCostCodeMapping"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Sage/disconnect",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountKey\": \"<string>\",\n  \"activationCode\": \"<string>\",\n  \"downloadLink\": \"<string>\",\n  \"ryvitSettings\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isSubscribed\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Sage/disconnect",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Sage",
										"disconnect"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountKey\": \"<string>\",\n  \"activationCode\": \"<string>\",\n  \"downloadLink\": \"<string>\",\n  \"ryvitSettings\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isSubscribed\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Sage/disconnect",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Sage",
												"disconnect"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "ScheduleEvent",
					"item": [
						{
							"name": "/api/ScheduleEvent/GetV2",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ScheduleEvent/GetV2?start=<dateTime>&end=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ScheduleEvent",
										"GetV2"
									],
									"query": [
										{
											"key": "start",
											"value": "<dateTime>"
										},
										{
											"key": "end",
											"value": "<dateTime>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ScheduleEvent/GetV2?start=<dateTime>&end=<dateTime>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ScheduleEvent",
												"GetV2"
											],
											"query": [
												{
													"key": "start",
													"value": "<dateTime>"
												},
												{
													"key": "end",
													"value": "<dateTime>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ScheduleEvent/GetScheduleEventsFiltered",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/ScheduleEvent/GetScheduleEventsFiltered",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ScheduleEvent",
										"GetScheduleEventsFiltered"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/ScheduleEvent/GetScheduleEventsFiltered",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ScheduleEvent",
												"GetScheduleEventsFiltered"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ScheduleEvent/GetScheduledHours",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/ScheduleEvent/GetScheduledHours",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ScheduleEvent",
										"GetScheduledHours"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/ScheduleEvent/GetScheduledHours",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ScheduleEvent",
												"GetScheduledHours"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ScheduleEvent/GetScheduleOverlaps",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/ScheduleEvent/GetScheduleOverlaps",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ScheduleEvent",
										"GetScheduleOverlaps"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/ScheduleEvent/GetScheduleOverlaps",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ScheduleEvent",
												"GetScheduleOverlaps"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ScheduleEvent/GetScheduleEvents",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ScheduleEvent/GetScheduleEvents?start=<dateTime>&end=<dateTime>&employeeIds=<integer>&employeeIds=<integer>&jobIds=<integer>&jobIds=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ScheduleEvent",
										"GetScheduleEvents"
									],
									"query": [
										{
											"key": "start",
											"value": "<dateTime>"
										},
										{
											"key": "end",
											"value": "<dateTime>"
										},
										{
											"key": "employeeIds",
											"value": "<integer>"
										},
										{
											"key": "employeeIds",
											"value": "<integer>"
										},
										{
											"key": "jobIds",
											"value": "<integer>"
										},
										{
											"key": "jobIds",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ScheduleEvent/GetScheduleEvents?start=<dateTime>&end=<dateTime>&employeeIds=<integer>&employeeIds=<integer>&jobIds=<integer>&jobIds=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ScheduleEvent",
												"GetScheduleEvents"
											],
											"query": [
												{
													"key": "start",
													"value": "<dateTime>"
												},
												{
													"key": "end",
													"value": "<dateTime>"
												},
												{
													"key": "employeeIds",
													"value": "<integer>"
												},
												{
													"key": "employeeIds",
													"value": "<integer>"
												},
												{
													"key": "jobIds",
													"value": "<integer>"
												},
												{
													"key": "jobIds",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ScheduleEvent/GetEmployeeRecentlyScheduled",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ScheduleEvent/GetEmployeeRecentlyScheduled",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ScheduleEvent",
										"GetEmployeeRecentlyScheduled"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ScheduleEvent/GetEmployeeRecentlyScheduled",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ScheduleEvent",
												"GetEmployeeRecentlyScheduled"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ScheduleEvent/AddScheduleEvents",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"groupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"scheduleEvent\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/ScheduleEvent/AddScheduleEvents",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ScheduleEvent",
										"AddScheduleEvents"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"groupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"scheduleEvent\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/ScheduleEvent/AddScheduleEvents",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ScheduleEvent",
												"AddScheduleEvents"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ScheduleEvent/Put",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"scheduleEventId\": \"<integer>\",\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"isAllDay\": \"<boolean>\",\n  \"recurrence\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"employee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"job\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"task\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": \"<string>\",\n  \"notificationTypes\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notificationMinutes\": \"<integer>\",\n  \"employeeId\": \"<integer>\",\n  \"jobId\": \"<integer>\",\n  \"updateFutureOnly\": \"<boolean>\",\n  \"taskId\": \"<integer>\",\n  \"allowEmployeeNoAccess\": \"<boolean>\",\n  \"allowJobNoAccess\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/ScheduleEvent/Put",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ScheduleEvent",
										"Put"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"scheduleEventId\": \"<integer>\",\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"isAllDay\": \"<boolean>\",\n  \"recurrence\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"employee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"job\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"task\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notes\": \"<string>\",\n  \"notificationTypes\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"notificationMinutes\": \"<integer>\",\n  \"employeeId\": \"<integer>\",\n  \"jobId\": \"<integer>\",\n  \"updateFutureOnly\": \"<boolean>\",\n  \"taskId\": \"<integer>\",\n  \"allowEmployeeNoAccess\": \"<boolean>\",\n  \"allowJobNoAccess\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/ScheduleEvent/Put",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ScheduleEvent",
												"Put"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ScheduleEvent/NotifyEmployees",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"notificationTypes\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"days\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/ScheduleEvent/NotifyEmployees",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ScheduleEvent",
										"NotifyEmployees"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"notificationTypes\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"days\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/ScheduleEvent/NotifyEmployees",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ScheduleEvent",
												"NotifyEmployees"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ScheduleEvent/CreateCalendarURL",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ScheduleEvent/CreateCalendarURL?subscriptionType=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ScheduleEvent",
										"CreateCalendarURL"
									],
									"query": [
										{
											"key": "subscriptionType",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ScheduleEvent/CreateCalendarURL?subscriptionType=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ScheduleEvent",
												"CreateCalendarURL"
											],
											"query": [
												{
													"key": "subscriptionType",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ScheduleEvent/SubscribeToCalendar",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"subscriptionType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"guid\": \"<string>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"groupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/ScheduleEvent/SubscribeToCalendar",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ScheduleEvent",
										"SubscribeToCalendar"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"subscriptionType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"guid\": \"<string>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"groupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/ScheduleEvent/SubscribeToCalendar",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ScheduleEvent",
												"SubscribeToCalendar"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ScheduleEvent/Delete/:id",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ScheduleEvent/Delete/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ScheduleEvent",
										"Delete",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ScheduleEvent/Delete/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ScheduleEvent",
												"Delete",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ScheduleEvent/DeleteRecurrence/:id",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ScheduleEvent/DeleteRecurrence/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ScheduleEvent",
										"DeleteRecurrence",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ScheduleEvent/DeleteRecurrence/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ScheduleEvent",
												"DeleteRecurrence",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/ScheduleEvent/DeleteFollowing/:id",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ScheduleEvent/DeleteFollowing/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ScheduleEvent",
										"DeleteFollowing",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ScheduleEvent/DeleteFollowing/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ScheduleEvent",
												"DeleteFollowing",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Task",
					"item": [
						{
							"name": "Get",
							"item": [
								{
									"name": "/api/Task/Get",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Task/Get",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Task",
												"Get"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Task/Get",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Task",
														"Get"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "/api/Task/Get/:id",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Task/Get/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Task",
												"Get",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Task/Get/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Task",
														"Get",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "/api/Task/GetActive",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Task/GetActive",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Task",
										"GetActive"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Task/GetActive",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Task",
												"GetActive"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Task/GetActiveForEmployee",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Task/GetActiveForEmployee",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Task",
										"GetActiveForEmployee"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Task/GetActiveForEmployee",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Task",
												"GetActiveForEmployee"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Task/GetRecentForEmployee",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Task/GetRecentForEmployee",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Task",
										"GetRecentForEmployee"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Task/GetRecentForEmployee",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Task",
												"GetRecentForEmployee"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Task/GetQBServiceItem",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Task/GetQBServiceItem?taskId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Task",
										"GetQBServiceItem"
									],
									"query": [
										{
											"key": "taskId",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Task/GetQBServiceItem?taskId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Task",
												"GetQBServiceItem"
											],
											"query": [
												{
													"key": "taskId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Task/Post",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"taskId\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"code\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"isOvertimeExempt\": \"<boolean>\",\n  \"isOutofBoundsExempt\": \"<boolean>\",\n  \"isActive\": \"<boolean>\",\n  \"restrictionTypeEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"restrictEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"nameAndCode\": \"<string>\",\n  \"isBillable\": \"<boolean>\",\n  \"billableRate\": \"<double>\",\n  \"billableDescription\": \"<string>\",\n  \"billableTaxRates\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Task/Post",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Task",
										"Post"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"taskId\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"code\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"isOvertimeExempt\": \"<boolean>\",\n  \"isOutofBoundsExempt\": \"<boolean>\",\n  \"isActive\": \"<boolean>\",\n  \"restrictionTypeEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"restrictEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"nameAndCode\": \"<string>\",\n  \"isBillable\": \"<boolean>\",\n  \"billableRate\": \"<double>\",\n  \"billableDescription\": \"<string>\",\n  \"billableTaxRates\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Task/Post",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Task",
												"Post"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Task/Put",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"taskId\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"code\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"isOvertimeExempt\": \"<boolean>\",\n  \"isOutofBoundsExempt\": \"<boolean>\",\n  \"isActive\": \"<boolean>\",\n  \"restrictionTypeEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"restrictEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"nameAndCode\": \"<string>\",\n  \"isBillable\": \"<boolean>\",\n  \"billableRate\": \"<double>\",\n  \"billableDescription\": \"<string>\",\n  \"billableTaxRates\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Task/Put",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Task",
										"Put"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"taskId\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"code\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"isOvertimeExempt\": \"<boolean>\",\n  \"isOutofBoundsExempt\": \"<boolean>\",\n  \"isActive\": \"<boolean>\",\n  \"restrictionTypeEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"restrictEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"nameAndCode\": \"<string>\",\n  \"isBillable\": \"<boolean>\",\n  \"billableRate\": \"<double>\",\n  \"billableDescription\": \"<string>\",\n  \"billableTaxRates\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Task/Put",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Task",
												"Put"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Task/UpdateIsActive",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"taskId\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"code\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"isOvertimeExempt\": \"<boolean>\",\n  \"isOutofBoundsExempt\": \"<boolean>\",\n  \"isActive\": \"<boolean>\",\n  \"restrictionTypeEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"restrictEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"nameAndCode\": \"<string>\",\n  \"isBillable\": \"<boolean>\",\n  \"billableRate\": \"<double>\",\n  \"billableDescription\": \"<string>\",\n  \"billableTaxRates\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Task/UpdateIsActive",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Task",
										"UpdateIsActive"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"taskId\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"code\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"isOvertimeExempt\": \"<boolean>\",\n  \"isOutofBoundsExempt\": \"<boolean>\",\n  \"isActive\": \"<boolean>\",\n  \"restrictionTypeEmployee\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"restrictEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"restrictGroupEmployeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"nameAndCode\": \"<string>\",\n  \"isBillable\": \"<boolean>\",\n  \"billableRate\": \"<double>\",\n  \"billableDescription\": \"<string>\",\n  \"billableTaxRates\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Task/UpdateIsActive",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Task",
												"UpdateIsActive"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Task/Delete/:id",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Task/Delete/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Task",
										"Delete",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Task/Delete/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Task",
												"Delete",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Task/ValidateTaskDelete",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"statusActive\": \"<boolean>\",\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Task/ValidateTaskDelete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Task",
										"ValidateTaskDelete"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"statusActive\": \"<boolean>\",\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Task/ValidateTaskDelete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Task",
												"ValidateTaskDelete"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Task/BulkUpdateTasks",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"statusActive\": \"<boolean>\",\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Task/BulkUpdateTasks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Task",
										"BulkUpdateTasks"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"statusActive\": \"<boolean>\",\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Task/BulkUpdateTasks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Task",
												"BulkUpdateTasks"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Task/BulkCopyTasks",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"statusActive\": \"<boolean>\",\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Task/BulkCopyTasks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Task",
										"BulkCopyTasks"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"quotes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"invoices\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"statusActive\": \"<boolean>\",\n  \"deleteOk\": \"<boolean>\",\n  \"entityType\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Task/BulkCopyTasks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Task",
												"BulkCopyTasks"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "TimeOff",
					"item": [
						{
							"name": "/api/TimeOff/GetTimeOffRequests",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/TimeOff/GetTimeOffRequests?sortDirection=<string>&sortColumn=<string>&skip=<integer>&take=<integer>&status=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"TimeOff",
										"GetTimeOffRequests"
									],
									"query": [
										{
											"key": "sortDirection",
											"value": "<string>"
										},
										{
											"key": "sortColumn",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										},
										{
											"key": "status",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/TimeOff/GetTimeOffRequests?sortDirection=<string>&sortColumn=<string>&skip=<integer>&take=<integer>&status=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TimeOff",
												"GetTimeOffRequests"
											],
											"query": [
												{
													"key": "sortDirection",
													"value": "<string>"
												},
												{
													"key": "sortColumn",
													"value": "<string>"
												},
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												},
												{
													"key": "status",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/TimeOff/GetTimeOffRequest",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/TimeOff/GetTimeOffRequest?requestId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"TimeOff",
										"GetTimeOffRequest"
									],
									"query": [
										{
											"key": "requestId",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/TimeOff/GetTimeOffRequest?requestId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TimeOff",
												"GetTimeOffRequest"
											],
											"query": [
												{
													"key": "requestId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/TimeOff/TimeOffRequests",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/TimeOff/TimeOffRequests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"TimeOff",
										"TimeOffRequests"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"jobIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/TimeOff/TimeOffRequests",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TimeOff",
												"TimeOffRequests"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/TimeOff/GetEmployeesTimeOffRequests",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/TimeOff/GetEmployeesTimeOffRequests?sortDirection=<string>&sortColumn=<string>&skip=<integer>&take=<integer>&status=<integer>&employeeId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"TimeOff",
										"GetEmployeesTimeOffRequests"
									],
									"query": [
										{
											"key": "sortDirection",
											"value": "<string>"
										},
										{
											"key": "sortColumn",
											"value": "<string>"
										},
										{
											"key": "skip",
											"value": "<integer>"
										},
										{
											"key": "take",
											"value": "<integer>"
										},
										{
											"key": "status",
											"value": "<integer>"
										},
										{
											"key": "employeeId",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/TimeOff/GetEmployeesTimeOffRequests?sortDirection=<string>&sortColumn=<string>&skip=<integer>&take=<integer>&status=<integer>&employeeId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TimeOff",
												"GetEmployeesTimeOffRequests"
											],
											"query": [
												{
													"key": "sortDirection",
													"value": "<string>"
												},
												{
													"key": "sortColumn",
													"value": "<string>"
												},
												{
													"key": "skip",
													"value": "<integer>"
												},
												{
													"key": "take",
													"value": "<integer>"
												},
												{
													"key": "status",
													"value": "<integer>"
												},
												{
													"key": "employeeId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/TimeOff/GetEmployeesUpcomingTimeOffRequests",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/TimeOff/GetEmployeesUpcomingTimeOffRequests?employeeId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"TimeOff",
										"GetEmployeesUpcomingTimeOffRequests"
									],
									"query": [
										{
											"key": "employeeId",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/TimeOff/GetEmployeesUpcomingTimeOffRequests?employeeId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TimeOff",
												"GetEmployeesUpcomingTimeOffRequests"
											],
											"query": [
												{
													"key": "employeeId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/TimeOff/AddTimeOffRequest",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestId\": \"<integer>\",\n  \"employeeId\": \"<integer>\",\n  \"employeeName\": \"<string>\",\n  \"employeeFirstName\": \"<string>\",\n  \"approvingEmployeeId\": \"<integer>\",\n  \"approvingEmployeeName\": \"<string>\",\n  \"timeOffPolicyId\": \"<integer>\",\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"statusString\": \"<string>\",\n  \"description\": \"<string>\",\n  \"response\": \"<string>\",\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"past\": \"<boolean>\",\n  \"dates\": \"<string>\",\n  \"hoursTotal\": \"<double>\",\n  \"timeOffDays\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"daysMinutes\": \"<double>\",\n  \"policy\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"policyType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"policyName\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/TimeOff/AddTimeOffRequest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"TimeOff",
										"AddTimeOffRequest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"requestId\": \"<integer>\",\n  \"employeeId\": \"<integer>\",\n  \"employeeName\": \"<string>\",\n  \"employeeFirstName\": \"<string>\",\n  \"approvingEmployeeId\": \"<integer>\",\n  \"approvingEmployeeName\": \"<string>\",\n  \"timeOffPolicyId\": \"<integer>\",\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"statusString\": \"<string>\",\n  \"description\": \"<string>\",\n  \"response\": \"<string>\",\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"past\": \"<boolean>\",\n  \"dates\": \"<string>\",\n  \"hoursTotal\": \"<double>\",\n  \"timeOffDays\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"daysMinutes\": \"<double>\",\n  \"policy\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"policyType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"policyName\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/TimeOff/AddTimeOffRequest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TimeOff",
												"AddTimeOffRequest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/TimeOff/UpdateTimeOffRequest",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestId\": \"<integer>\",\n  \"employeeId\": \"<integer>\",\n  \"employeeName\": \"<string>\",\n  \"employeeFirstName\": \"<string>\",\n  \"approvingEmployeeId\": \"<integer>\",\n  \"approvingEmployeeName\": \"<string>\",\n  \"timeOffPolicyId\": \"<integer>\",\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"statusString\": \"<string>\",\n  \"description\": \"<string>\",\n  \"response\": \"<string>\",\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"past\": \"<boolean>\",\n  \"dates\": \"<string>\",\n  \"hoursTotal\": \"<double>\",\n  \"timeOffDays\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"daysMinutes\": \"<double>\",\n  \"policy\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"policyType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"policyName\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/TimeOff/UpdateTimeOffRequest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"TimeOff",
										"UpdateTimeOffRequest"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"requestId\": \"<integer>\",\n  \"employeeId\": \"<integer>\",\n  \"employeeName\": \"<string>\",\n  \"employeeFirstName\": \"<string>\",\n  \"approvingEmployeeId\": \"<integer>\",\n  \"approvingEmployeeName\": \"<string>\",\n  \"timeOffPolicyId\": \"<integer>\",\n  \"status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"statusString\": \"<string>\",\n  \"description\": \"<string>\",\n  \"response\": \"<string>\",\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"past\": \"<boolean>\",\n  \"dates\": \"<string>\",\n  \"hoursTotal\": \"<double>\",\n  \"timeOffDays\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"daysMinutes\": \"<double>\",\n  \"policy\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"policyType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"policyName\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/TimeOff/UpdateTimeOffRequest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TimeOff",
												"UpdateTimeOffRequest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/TimeOff/DeleteTimeOffRequest/:id",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/TimeOff/DeleteTimeOffRequest/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"TimeOff",
										"DeleteTimeOffRequest",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/TimeOff/DeleteTimeOffRequest/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TimeOff",
												"DeleteTimeOffRequest",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/TimeOff/DeleteHolidayRequest/:id",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/TimeOff/DeleteHolidayRequest/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"TimeOff",
										"DeleteHolidayRequest",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/TimeOff/DeleteHolidayRequest/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TimeOff",
												"DeleteHolidayRequest",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/TimeOff/CountPendingRequestsForPolicy",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/TimeOff/CountPendingRequestsForPolicy?policyId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"TimeOff",
										"CountPendingRequestsForPolicy"
									],
									"query": [
										{
											"key": "policyId",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/TimeOff/CountPendingRequestsForPolicy?policyId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TimeOff",
												"CountPendingRequestsForPolicy"
											],
											"query": [
												{
													"key": "policyId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/TimeOff/CountPendingRequestsForEmployee",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"employeeId\": \"<integer>\",\n  \"employeeName\": \"<string>\",\n  \"timeOffPolicyId\": \"<integer>\",\n  \"hoursRemaining\": \"<double>\",\n  \"policy\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dateEffective\": \"<dateTime>\",\n  \"hireDate\": \"<dateTime>\",\n  \"deleted\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/TimeOff/CountPendingRequestsForEmployee",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"TimeOff",
										"CountPendingRequestsForEmployee"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"employeeId\": \"<integer>\",\n  \"employeeName\": \"<string>\",\n  \"timeOffPolicyId\": \"<integer>\",\n  \"hoursRemaining\": \"<double>\",\n  \"policy\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"dateEffective\": \"<dateTime>\",\n  \"hireDate\": \"<dateTime>\",\n  \"deleted\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/TimeOff/CountPendingRequestsForEmployee",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TimeOff",
												"CountPendingRequestsForEmployee"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/TimeOff/GetTimeOffPolicies",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/TimeOff/GetTimeOffPolicies?sortDirection=<string>&sortColumn=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"TimeOff",
										"GetTimeOffPolicies"
									],
									"query": [
										{
											"key": "sortDirection",
											"value": "<string>"
										},
										{
											"key": "sortColumn",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/TimeOff/GetTimeOffPolicies?sortDirection=<string>&sortColumn=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TimeOff",
												"GetTimeOffPolicies"
											],
											"query": [
												{
													"key": "sortDirection",
													"value": "<string>"
												},
												{
													"key": "sortColumn",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/TimeOff/GetHolidays",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/TimeOff/GetHolidays",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"TimeOff",
										"GetHolidays"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/TimeOff/GetHolidays",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TimeOff",
												"GetHolidays"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/TimeOff/GetTimeOffPolicy",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/TimeOff/GetTimeOffPolicy?policyId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"TimeOff",
										"GetTimeOffPolicy"
									],
									"query": [
										{
											"key": "policyId",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/TimeOff/GetTimeOffPolicy?policyId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TimeOff",
												"GetTimeOffPolicy"
											],
											"query": [
												{
													"key": "policyId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/TimeOff/AddTimeOffPolicy",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"timeOffPolicyId\": \"<integer>\",\n  \"policyType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"policyTypeReadable\": \"<string>\",\n  \"policyName\": \"<string>\",\n  \"isTimeOffLimit\": \"<string>\",\n  \"accrualHours\": \"<double>\",\n  \"accrualMethod\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isWaitingPeriod\": \"<string>\",\n  \"waitingPeriodDays\": \"<integer>\",\n  \"isCarryoverLimit\": \"<string>\",\n  \"maxCarryOverHours\": \"<double>\",\n  \"maxBalanceHours\": \"<double>\",\n  \"payrollMappingId\": \"<string>\",\n  \"enrolledCount\": \"<integer>\",\n  \"holidayDate\": \"<dateTime>\",\n  \"hoursTotal\": \"<double>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"hasApproval\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/TimeOff/AddTimeOffPolicy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"TimeOff",
										"AddTimeOffPolicy"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"timeOffPolicyId\": \"<integer>\",\n  \"policyType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"policyTypeReadable\": \"<string>\",\n  \"policyName\": \"<string>\",\n  \"isTimeOffLimit\": \"<string>\",\n  \"accrualHours\": \"<double>\",\n  \"accrualMethod\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isWaitingPeriod\": \"<string>\",\n  \"waitingPeriodDays\": \"<integer>\",\n  \"isCarryoverLimit\": \"<string>\",\n  \"maxCarryOverHours\": \"<double>\",\n  \"maxBalanceHours\": \"<double>\",\n  \"payrollMappingId\": \"<string>\",\n  \"enrolledCount\": \"<integer>\",\n  \"holidayDate\": \"<dateTime>\",\n  \"hoursTotal\": \"<double>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"hasApproval\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/TimeOff/AddTimeOffPolicy",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TimeOff",
												"AddTimeOffPolicy"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/TimeOff/AddHoliday",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"timeOffRequestId\": \"<integer>\",\n  \"timeOffPolicyId\": \"<integer>\",\n  \"holidayName\": \"<string>\",\n  \"priorDuration\": \"<integer>\",\n  \"duration\": \"<double>\",\n  \"holidayDate\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"groupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/TimeOff/AddHoliday",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"TimeOff",
										"AddHoliday"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"timeOffRequestId\": \"<integer>\",\n  \"timeOffPolicyId\": \"<integer>\",\n  \"holidayName\": \"<string>\",\n  \"priorDuration\": \"<integer>\",\n  \"duration\": \"<double>\",\n  \"holidayDate\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"groupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/TimeOff/AddHoliday",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TimeOff",
												"AddHoliday"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/TimeOff/UpdateHolidayTime",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"timeOffRequestId\": \"<integer>\",\n  \"timeOffPolicyId\": \"<integer>\",\n  \"holidayName\": \"<string>\",\n  \"priorDuration\": \"<integer>\",\n  \"duration\": \"<double>\",\n  \"holidayDate\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"groupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/TimeOff/UpdateHolidayTime",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"TimeOff",
										"UpdateHolidayTime"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"timeOffRequestId\": \"<integer>\",\n  \"timeOffPolicyId\": \"<integer>\",\n  \"holidayName\": \"<string>\",\n  \"priorDuration\": \"<integer>\",\n  \"duration\": \"<double>\",\n  \"holidayDate\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"groupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/TimeOff/UpdateHolidayTime",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TimeOff",
												"UpdateHolidayTime"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/TimeOff/UpdateTimeOffPolicy",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"timeOffPolicyId\": \"<integer>\",\n  \"policyType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"policyTypeReadable\": \"<string>\",\n  \"policyName\": \"<string>\",\n  \"isTimeOffLimit\": \"<string>\",\n  \"accrualHours\": \"<double>\",\n  \"accrualMethod\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isWaitingPeriod\": \"<string>\",\n  \"waitingPeriodDays\": \"<integer>\",\n  \"isCarryoverLimit\": \"<string>\",\n  \"maxCarryOverHours\": \"<double>\",\n  \"maxBalanceHours\": \"<double>\",\n  \"payrollMappingId\": \"<string>\",\n  \"enrolledCount\": \"<integer>\",\n  \"holidayDate\": \"<dateTime>\",\n  \"hoursTotal\": \"<double>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"hasApproval\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/TimeOff/UpdateTimeOffPolicy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"TimeOff",
										"UpdateTimeOffPolicy"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"timeOffPolicyId\": \"<integer>\",\n  \"policyType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"policyTypeReadable\": \"<string>\",\n  \"policyName\": \"<string>\",\n  \"isTimeOffLimit\": \"<string>\",\n  \"accrualHours\": \"<double>\",\n  \"accrualMethod\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isWaitingPeriod\": \"<string>\",\n  \"waitingPeriodDays\": \"<integer>\",\n  \"isCarryoverLimit\": \"<string>\",\n  \"maxCarryOverHours\": \"<double>\",\n  \"maxBalanceHours\": \"<double>\",\n  \"payrollMappingId\": \"<string>\",\n  \"enrolledCount\": \"<integer>\",\n  \"holidayDate\": \"<dateTime>\",\n  \"hoursTotal\": \"<double>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"hasApproval\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/TimeOff/UpdateTimeOffPolicy",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TimeOff",
												"UpdateTimeOffPolicy"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/TimeOff/UpdateHoliday",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"timeOffRequestId\": \"<integer>\",\n  \"timeOffPolicyId\": \"<integer>\",\n  \"holidayName\": \"<string>\",\n  \"priorDuration\": \"<integer>\",\n  \"duration\": \"<double>\",\n  \"holidayDate\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"groupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/TimeOff/UpdateHoliday",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"TimeOff",
										"UpdateHoliday"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"timeOffRequestId\": \"<integer>\",\n  \"timeOffPolicyId\": \"<integer>\",\n  \"holidayName\": \"<string>\",\n  \"priorDuration\": \"<integer>\",\n  \"duration\": \"<double>\",\n  \"holidayDate\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"groupIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/TimeOff/UpdateHoliday",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TimeOff",
												"UpdateHoliday"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/TimeOff/DeleteTimeOffPolicy/:id",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/TimeOff/DeleteTimeOffPolicy/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"TimeOff",
										"DeleteTimeOffPolicy",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/TimeOff/DeleteTimeOffPolicy/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TimeOff",
												"DeleteTimeOffPolicy",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/TimeOff/DeleteHoliday",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/TimeOff/DeleteHoliday?timeOffPolicyId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"TimeOff",
										"DeleteHoliday"
									],
									"query": [
										{
											"key": "timeOffPolicyId",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/TimeOff/DeleteHoliday?timeOffPolicyId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TimeOff",
												"DeleteHoliday"
											],
											"query": [
												{
													"key": "timeOffPolicyId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/TimeOff/BulkDeleteTimeOffPolicies",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/TimeOff/BulkDeleteTimeOffPolicies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"TimeOff",
										"BulkDeleteTimeOffPolicies"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"entityIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/TimeOff/BulkDeleteTimeOffPolicies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TimeOff",
												"BulkDeleteTimeOffPolicies"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/TimeOff/GetTimeOffPolicyEmployees",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/TimeOff/GetTimeOffPolicyEmployees?policyId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"TimeOff",
										"GetTimeOffPolicyEmployees"
									],
									"query": [
										{
											"key": "policyId",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/TimeOff/GetTimeOffPolicyEmployees?policyId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TimeOff",
												"GetTimeOffPolicyEmployees"
											],
											"query": [
												{
													"key": "policyId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/TimeOff/GetUnassignedPolicyEmployees",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/TimeOff/GetUnassignedPolicyEmployees?policyId=<integer>&policyType=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"TimeOff",
										"GetUnassignedPolicyEmployees"
									],
									"query": [
										{
											"key": "policyId",
											"value": "<integer>"
										},
										{
											"key": "policyType",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/TimeOff/GetUnassignedPolicyEmployees?policyId=<integer>&policyType=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TimeOff",
												"GetUnassignedPolicyEmployees"
											],
											"query": [
												{
													"key": "policyId",
													"value": "<integer>"
												},
												{
													"key": "policyType",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/TimeOff/GetEmployeeTimeOffPolicies",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/TimeOff/GetEmployeeTimeOffPolicies?employeeId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"TimeOff",
										"GetEmployeeTimeOffPolicies"
									],
									"query": [
										{
											"key": "employeeId",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/TimeOff/GetEmployeeTimeOffPolicies?employeeId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TimeOff",
												"GetEmployeeTimeOffPolicies"
											],
											"query": [
												{
													"key": "employeeId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/TimeOff/GetAllEmployeeTimeOffPolicies",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/TimeOff/GetAllEmployeeTimeOffPolicies?employeeId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"TimeOff",
										"GetAllEmployeeTimeOffPolicies"
									],
									"query": [
										{
											"key": "employeeId",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/TimeOff/GetAllEmployeeTimeOffPolicies?employeeId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TimeOff",
												"GetAllEmployeeTimeOffPolicies"
											],
											"query": [
												{
													"key": "employeeId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/TimeOff/UpdateTimeOffPolicyEmployees",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"timeOffPolicyId\": \"<integer>\",\n  \"policyType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"employeeTimeOffPolicyModels\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/TimeOff/UpdateTimeOffPolicyEmployees",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"TimeOff",
										"UpdateTimeOffPolicyEmployees"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"timeOffPolicyId\": \"<integer>\",\n  \"policyType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"employeeTimeOffPolicyModels\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/TimeOff/UpdateTimeOffPolicyEmployees",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TimeOff",
												"UpdateTimeOffPolicyEmployees"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/TimeOff/UpdateEmployeeTimeOffPolicies",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"employeeId\": \"<integer>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"policies\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/TimeOff/UpdateEmployeeTimeOffPolicies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"TimeOff",
										"UpdateEmployeeTimeOffPolicies"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"employeeId\": \"<integer>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"policies\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/TimeOff/UpdateEmployeeTimeOffPolicies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TimeOff",
												"UpdateEmployeeTimeOffPolicies"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/TimeOff/AddTimeOffButtonInteraction",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/TimeOff/AddTimeOffButtonInteraction?param=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"TimeOff",
										"AddTimeOffButtonInteraction"
									],
									"query": [
										{
											"key": "param",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/TimeOff/AddTimeOffButtonInteraction?param=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TimeOff",
												"AddTimeOffButtonInteraction"
											],
											"query": [
												{
													"key": "param",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "TimeSheet",
					"item": [
						{
							"name": "/api/TimeSheet/GetClockEventSummary",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/TimeSheet/GetClockEventSummary?start=<dateTime>&end=<dateTime>&employeeIds=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"TimeSheet",
										"GetClockEventSummary"
									],
									"query": [
										{
											"key": "start",
											"value": "<dateTime>"
										},
										{
											"key": "end",
											"value": "<dateTime>"
										},
										{
											"key": "employeeIds",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/TimeSheet/GetClockEventSummary?start=<dateTime>&end=<dateTime>&employeeIds=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TimeSheet",
												"GetClockEventSummary"
											],
											"query": [
												{
													"key": "start",
													"value": "<dateTime>"
												},
												{
													"key": "end",
													"value": "<dateTime>"
												},
												{
													"key": "employeeIds",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/TimeSheet/ClockEventSummary",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "Start",
											"value": "<dateTime>",
											"type": "text"
										},
										{
											"key": "End",
											"value": "<dateTime>",
											"type": "text"
										},
										{
											"key": "EmployeeIds",
											"value": "<string>",
											"type": "text"
										},
										{
											"key": "StageId",
											"value": "<integer>",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/TimeSheet/ClockEventSummary",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"TimeSheet",
										"ClockEventSummary"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "Start",
													"value": "<dateTime>",
													"type": "text"
												},
												{
													"key": "End",
													"value": "<dateTime>",
													"type": "text"
												},
												{
													"key": "EmployeeIds",
													"value": "<string>",
													"type": "text"
												},
												{
													"key": "StageId",
													"value": "<integer>",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/TimeSheet/ClockEventSummary",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TimeSheet",
												"ClockEventSummary"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/TimeSheet/GetClockEventJobSummary",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/TimeSheet/GetClockEventJobSummary?start=<dateTime>&end=<dateTime>&employeeIds=<string>&stageId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"TimeSheet",
										"GetClockEventJobSummary"
									],
									"query": [
										{
											"key": "start",
											"value": "<dateTime>"
										},
										{
											"key": "end",
											"value": "<dateTime>"
										},
										{
											"key": "employeeIds",
											"value": "<string>"
										},
										{
											"key": "stageId",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/TimeSheet/GetClockEventJobSummary?start=<dateTime>&end=<dateTime>&employeeIds=<string>&stageId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TimeSheet",
												"GetClockEventJobSummary"
											],
											"query": [
												{
													"key": "start",
													"value": "<dateTime>"
												},
												{
													"key": "end",
													"value": "<dateTime>"
												},
												{
													"key": "employeeIds",
													"value": "<string>"
												},
												{
													"key": "stageId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/TimeSheet/ClockEventJobSummary",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "Start",
											"value": "<dateTime>",
											"type": "text"
										},
										{
											"key": "End",
											"value": "<dateTime>",
											"type": "text"
										},
										{
											"key": "EmployeeIds",
											"value": "<string>",
											"type": "text"
										},
										{
											"key": "StageId",
											"value": "<integer>",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/TimeSheet/ClockEventJobSummary",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"TimeSheet",
										"ClockEventJobSummary"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "Start",
													"value": "<dateTime>",
													"type": "text"
												},
												{
													"key": "End",
													"value": "<dateTime>",
													"type": "text"
												},
												{
													"key": "EmployeeIds",
													"value": "<string>",
													"type": "text"
												},
												{
													"key": "StageId",
													"value": "<integer>",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/TimeSheet/ClockEventJobSummary",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TimeSheet",
												"ClockEventJobSummary"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/TimeSheet/PrintTimesheets",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "Layout",
											"value": "<integer>",
											"type": "text"
										},
										{
											"key": "GroupBy",
											"value": "<string>",
											"type": "text"
										},
										{
											"key": "TimeZone",
											"value": "<integer>",
											"type": "text"
										},
										{
											"key": "Start",
											"value": "<dateTime>",
											"type": "text"
										},
										{
											"key": "End",
											"value": "<dateTime>",
											"type": "text"
										},
										{
											"key": "EmployeeIds",
											"value": "<string>",
											"type": "text"
										},
										{
											"key": "StageId",
											"value": "<integer>",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/TimeSheet/PrintTimesheets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"TimeSheet",
										"PrintTimesheets"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "Layout",
													"value": "<integer>",
													"type": "text"
												},
												{
													"key": "GroupBy",
													"value": "<string>",
													"type": "text"
												},
												{
													"key": "TimeZone",
													"value": "<integer>",
													"type": "text"
												},
												{
													"key": "Start",
													"value": "<dateTime>",
													"type": "text"
												},
												{
													"key": "End",
													"value": "<dateTime>",
													"type": "text"
												},
												{
													"key": "EmployeeIds",
													"value": "<string>",
													"type": "text"
												},
												{
													"key": "StageId",
													"value": "<integer>",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/TimeSheet/PrintTimesheets",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TimeSheet",
												"PrintTimesheets"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Xero",
					"item": [
						{
							"name": "/api/Xero/validateExportTime",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"skipValidateAndConfirm\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Xero/validateExportTime",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Xero",
										"validateExportTime"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"skipValidateAndConfirm\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Xero/validateExportTime",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Xero",
												"validateExportTime"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Xero/exportTime",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"skipValidateAndConfirm\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Xero/exportTime",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Xero",
										"exportTime"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"employeeIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"skipValidateAndConfirm\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Xero/exportTime",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Xero",
												"exportTime"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Xero/searchXeroEmployees",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Xero/searchXeroEmployees?pageNumber=<integer>&pageSize=<integer>&searchTerm=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Xero",
										"searchXeroEmployees"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "<integer>"
										},
										{
											"key": "pageSize",
											"value": "<integer>"
										},
										{
											"key": "searchTerm",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Xero/searchXeroEmployees?pageNumber=<integer>&pageSize=<integer>&searchTerm=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Xero",
												"searchXeroEmployees"
											],
											"query": [
												{
													"key": "pageNumber",
													"value": "<integer>"
												},
												{
													"key": "pageSize",
													"value": "<integer>"
												},
												{
													"key": "searchTerm",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Xero/getXeroPayItems",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Xero/getXeroPayItems",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Xero",
										"getXeroPayItems"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Xero/getXeroPayItems",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Xero",
												"getXeroPayItems"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Xero/updateEmployeeMapping",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"companyId\": \"<integer>\",\n  \"employeeId\": \"<integer>\",\n  \"xeroEmployeeId\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"payScheduleId\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"deletedDate\": \"<dateTime>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Xero/updateEmployeeMapping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Xero",
										"updateEmployeeMapping"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"companyId\": \"<integer>\",\n  \"employeeId\": \"<integer>\",\n  \"xeroEmployeeId\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"payScheduleId\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"deletedDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Xero/updateEmployeeMapping",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Xero",
												"updateEmployeeMapping"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Xero/SyncXeroEmployees",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Xero/SyncXeroEmployees?autoImport=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Xero",
										"SyncXeroEmployees"
									],
									"query": [
										{
											"key": "autoImport",
											"value": "<boolean>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Xero/SyncXeroEmployees?autoImport=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Xero",
												"SyncXeroEmployees"
											],
											"query": [
												{
													"key": "autoImport",
													"value": "<boolean>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Xero/UpdateCompanySettings",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"earningsTypeRegular\": \"<string>\",\n  \"earningsTypeOvertime\": \"<string>\",\n  \"earningsTypeDoubletime\": \"<string>\",\n  \"earningsTypes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"payrollModelType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"deletedDate\": \"<dateTime>\",\n  \"authExpiry\": \"<dateTime>\",\n  \"xeroDisconnected\": \"<boolean>\",\n  \"payrollNotProvisioned\": \"<boolean>\",\n  \"inSupportedRegion\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Xero/UpdateCompanySettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Xero",
										"UpdateCompanySettings"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"earningsTypeRegular\": \"<string>\",\n  \"earningsTypeOvertime\": \"<string>\",\n  \"earningsTypeDoubletime\": \"<string>\",\n  \"earningsTypes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"payrollModelType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"deletedDate\": \"<dateTime>\",\n  \"authExpiry\": \"<dateTime>\",\n  \"xeroDisconnected\": \"<boolean>\",\n  \"payrollNotProvisioned\": \"<boolean>\",\n  \"inSupportedRegion\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Xero/UpdateCompanySettings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Xero",
												"UpdateCompanySettings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Xero/SyncXeroPayItems",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Xero/SyncXeroPayItems",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Xero",
										"SyncXeroPayItems"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Xero/SyncXeroPayItems",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Xero",
												"SyncXeroPayItems"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Xero/Disconnect",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Xero/Disconnect",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Xero",
										"Disconnect"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Xero/Disconnect",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Xero",
												"Disconnect"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Xero/GetUnmappedCSEmployees",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Xero/GetUnmappedCSEmployees",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Xero",
										"GetUnmappedCSEmployees"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Xero/GetUnmappedCSEmployees",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Xero",
												"GetUnmappedCSEmployees"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Xero/updateCustomerMapping",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"xeroCustomerMappingId\": \"<integer>\",\n  \"companyId\": \"<integer>\",\n  \"customerId\": \"<integer>\",\n  \"xeroContactNumber\": \"<string>\",\n  \"xeroContactId\": \"<uuid>\",\n  \"xeroContactName\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"deletedDate\": \"<dateTime>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Xero/updateCustomerMapping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Xero",
										"updateCustomerMapping"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"xeroCustomerMappingId\": \"<integer>\",\n  \"companyId\": \"<integer>\",\n  \"customerId\": \"<integer>\",\n  \"xeroContactNumber\": \"<string>\",\n  \"xeroContactId\": \"<uuid>\",\n  \"xeroContactName\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"deletedDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Xero/updateCustomerMapping",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Xero",
												"updateCustomerMapping"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Xero/searchXeroCustomers",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Xero/searchXeroCustomers?pageNumber=<integer>&pageSize=<integer>&searchTerm=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Xero",
										"searchXeroCustomers"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "<integer>"
										},
										{
											"key": "pageSize",
											"value": "<integer>"
										},
										{
											"key": "searchTerm",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Xero/searchXeroCustomers?pageNumber=<integer>&pageSize=<integer>&searchTerm=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Xero",
												"searchXeroCustomers"
											],
											"query": [
												{
													"key": "pageNumber",
													"value": "<integer>"
												},
												{
													"key": "pageSize",
													"value": "<integer>"
												},
												{
													"key": "searchTerm",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Xero/SyncXero",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Xero/SyncXero?autoImport=<boolean>&xeroSyncType=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Xero",
										"SyncXero"
									],
									"query": [
										{
											"key": "autoImport",
											"value": "<boolean>"
										},
										{
											"key": "xeroSyncType",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Xero/SyncXero?autoImport=<boolean>&xeroSyncType=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Xero",
												"SyncXero"
											],
											"query": [
												{
													"key": "autoImport",
													"value": "<boolean>"
												},
												{
													"key": "xeroSyncType",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Xero/GetUnmappedCSCustomers",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Xero/GetUnmappedCSCustomers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Xero",
										"GetUnmappedCSCustomers"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Xero/GetUnmappedCSCustomers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Xero",
												"GetUnmappedCSCustomers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Xero/ExportInvoiceToXero",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Xero/ExportInvoiceToXero?invoiceId=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Xero",
										"ExportInvoiceToXero"
									],
									"query": [
										{
											"key": "invoiceId",
											"value": "<uuid>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Xero/ExportInvoiceToXero?invoiceId=<uuid>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Xero",
												"ExportInvoiceToXero"
											],
											"query": [
												{
													"key": "invoiceId",
													"value": "<uuid>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Zapier",
					"item": [
						{
							"name": "/api/Zapier/generateApiKey",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Zapier/generateApiKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Zapier",
										"generateApiKey"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Zapier/generateApiKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Zapier",
												"generateApiKey"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Zapier/revokeApiKey",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Zapier/revokeApiKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Zapier",
										"revokeApiKey"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Zapier/revokeApiKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Zapier",
												"revokeApiKey"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/Zapier/requestAppAccess",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Zapier/requestAppAccess",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Zapier",
										"requestAppAccess"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Zapier/requestAppAccess",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Zapier",
												"requestAppAccess"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "zap",
					"item": [
						{
							"name": "/api/zap/authentication",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/zap/authentication",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"zap",
										"authentication"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/zap/authentication",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"zap",
												"authentication"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/zap/Subscribe",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"targetUrl\": \"<string>\",\n  \"eventTriggerType\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/zap/Subscribe",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"zap",
										"Subscribe"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"targetUrl\": \"<string>\",\n  \"eventTriggerType\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/zap/Subscribe",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"zap",
												"Subscribe"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/zap/Unsubscribe",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/zap/Unsubscribe",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"zap",
										"Unsubscribe"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/zap/Unsubscribe",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"zap",
												"Unsubscribe"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/zap/AddJob",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"jobAddressStreet1\": \"<string>\",\n  \"jobAddressStreet2\": \"<string>\",\n  \"jobAddressCity\": \"<string>\",\n  \"jobAddressStateProv\": \"<string>\",\n  \"jobAddressCountry\": \"<string>\",\n  \"jobAddressPostalCode\": \"<string>\",\n  \"jobDescription\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/zap/AddJob",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"zap",
										"AddJob"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"jobNumber\": \"<string>\",\n  \"jobAddressStreet1\": \"<string>\",\n  \"jobAddressStreet2\": \"<string>\",\n  \"jobAddressCity\": \"<string>\",\n  \"jobAddressStateProv\": \"<string>\",\n  \"jobAddressCountry\": \"<string>\",\n  \"jobAddressPostalCode\": \"<string>\",\n  \"jobDescription\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/zap/AddJob",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"zap",
												"AddJob"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/zap/AddTask",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"code\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/zap/AddTask",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"zap",
										"AddTask"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"code\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/zap/AddTask",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"zap",
												"AddTask"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/zap/FallbackClockIn",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/zap/FallbackClockIn",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"zap",
										"FallbackClockIn"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/zap/FallbackClockIn",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"zap",
												"FallbackClockIn"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/zap/FallbackClockOut",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/zap/FallbackClockOut",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"zap",
										"FallbackClockOut"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/zap/FallbackClockOut",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"zap",
												"FallbackClockOut"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/zap/FallbackJobAdded",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/zap/FallbackJobAdded",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"zap",
										"FallbackJobAdded"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/zap/FallbackJobAdded",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"zap",
												"FallbackJobAdded"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/zap/FallbackTaskAdded",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/zap/FallbackTaskAdded",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"zap",
										"FallbackTaskAdded"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/zap/FallbackTaskAdded",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"zap",
												"FallbackTaskAdded"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/zap/FallbackNotificationOccurred",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/zap/FallbackNotificationOccurred",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"zap",
										"FallbackNotificationOccurred"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/zap/FallbackNotificationOccurred",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"zap",
												"FallbackNotificationOccurred"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/zap/FallbackScheduleEventCreated",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/zap/FallbackScheduleEventCreated",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"zap",
										"FallbackScheduleEventCreated"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/zap/FallbackScheduleEventCreated",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"zap",
												"FallbackScheduleEventCreated"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "/api/Attachment/UploadAttachment",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/Attachment/UploadAttachment",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Attachment",
								"UploadAttachment"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Attachment/UploadAttachment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Attachment",
										"UploadAttachment"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "/api/Reports/Run/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/Reports/Run/:id?payload=<string>&disposition=inline",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Reports",
								"Run",
								":id"
							],
							"query": [
								{
									"key": "payload",
									"value": "<string>"
								},
								{
									"key": "disposition",
									"value": "inline"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Reports/Run/:id?payload=<string>&disposition=inline",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Reports",
										"Run",
										":id"
									],
									"query": [
										{
											"key": "payload",
											"value": "<string>"
										},
										{
											"key": "disposition",
											"value": "inline"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "/api/Stage/GetActiveStages",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/Stage/GetActiveStages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Stage",
								"GetActiveStages"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Stage/GetActiveStages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Stage",
										"GetActiveStages"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "/applinks/:type",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/applinks/:type?os=<string>&k=<string>",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"applinks",
						":type"
					],
					"query": [
						{
							"key": "os",
							"value": "<string>"
						},
						{
							"key": "k",
							"value": "<string>"
						}
					],
					"variable": [
						{
							"key": "type",
							"value": "<string>",
							"description": "(Required) "
						}
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/applinks/:type?os=<string>&k=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"applinks",
								":type"
							],
							"query": [
								{
									"key": "os",
									"value": "<string>"
								},
								{
									"key": "k",
									"value": "<string>"
								}
							],
							"variable": [
								{
									"key": "type",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/CalendarHandler.ashx",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/CalendarHandler.ashx?GUID=<string>",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"CalendarHandler.ashx"
					],
					"query": [
						{
							"key": "GUID",
							"value": "<string>"
						}
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/CalendarHandler.ashx?GUID=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"CalendarHandler.ashx"
							],
							"query": [
								{
									"key": "GUID",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "/",
			"type": "string"
		}
	]
}